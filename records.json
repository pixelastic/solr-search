[
  {
    "content": "Licensed to the Apache Software Foundation (ASF) under one or more contributor\nlicense agreements. See the NOTICE file distributed with this work for additional\ninformation regarding copyright ownership. The ASF licenses this file to you under\nthe Apache License, Version 2.0 (the \"License\"); you may not use this file except in\ncompliance with the License. You may obtain a copy of the License at",
    "hierarchy": [
      "Licenses"
    ],
    "pageId": 6
  },
  {
    "content": "Unless required by applicable law or agreed to in writing, software distributed under the License is\ndistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing permissions and limitations under the License.",
    "hierarchy": [
      "Licenses"
    ],
    "pageId": 6
  },
  {
    "content": "Apache and the Apache feather logo are trademarks of The Apache Software Foundation. Apache Lucene,\nApache Solr and their respective logos are trademarks of the Apache Software Foundation. Please see the\nApache Trademark Policy<span class=\"fc1\"> for more information.</span>",
    "hierarchy": [
      "Licenses"
    ],
    "pageId": 6
  },
  {
    "content": "This reference guide describes Apache Solr, the open source solution for search.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Solr builds on Lucene, an open source Java library that provides indexing and search technology, as well as\nspellchecking, hit highlighting and advanced analysis/tokenization capabilities. Both Solr and Lucene are\nmanaged by the Apache Software Foundation (<span class=\"link\">www.apache.org)</span>. You can download Apache Solr from the\nSolr website at <span class=\"link\">http://lucene.apache.org/solr/</span>.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "This Guide contains the following main sections:",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Getting Started<span class=\"ff2 fc1\">: This section guides you through the installation and setup of Solr.</span>",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Using the Solr Administration User Interface<span class=\"ff2 fc1\">: This section introduces the Solr Web-based user interface.</span>\nFrom your browser you can view configuration files, submit queries, view logfile settings and Java\nenvironment settings, and monitor and control distributed configurations.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Documents, Fields, and Schema Design<span class=\"ff2 fc1\">: This section describes how Solr organizes its data for indexing. It</span>\nexplains how a Solr schema defines the fields and field types which Solr uses to organize data within the\ndocument files it indexes.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Understanding Analyzers, Tokenizers, and Filters<span class=\"ff2 fc1\">: This section explains how Solr prepares text for</span>\nindexing and searching. Analyzers parse text and produce a stream of tokens, lexical units used for indexing\nand searching. Tokenizers break field data down into tokens. Filters perform other transformational or\nselective work on token streams.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Indexing and Basic Data Operations<span class=\"ff2 fc1\">: This section describes the indexing process and basic index</span>\noperations, such as commit, optimize, and rollback.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Searching<span class=\"ff2 fc1\">: This section presents an overview of the search process in Solr. It describes the main</span>\ncomponents used in searches, including request handlers, query parsers, and response writers. It lists the\nquery parameters that can be passed to Solr, and it describes features such as boosting and faceting, which\ncan be used to fine-tune search results.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "The Well-Configured Solr Instance<span class=\"ff2 fc1\">: This section discusses performance tuning for Solr. It begins with an</span>\noverview of the <span class=\"code\">solrconfig.xml</span> file, then tells you how to configure cores with <span class=\"code\">solr.xml</span>, how to configure\nthe Lucene index writer, and more.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Monitoring Solr<span class=\"ff2 fc1\">: Administration and monitoring can be performed using the web-based administration</span>\nconsole, through the command line interface, or using REST APIs.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Deployment and Operations<span class=\"ff2 fc1\">: An important aspect of Solr is that all operations and deployment can be</span>\ndone online, with minimal or no impact to running applications. This includes minor upgrades and\nprovisioning and removing nodes, backing up and restoring indexes and editing configurations",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "SolrCloud<span class=\"ff2 fc1\">: This section describes the newest and most exciting of Solr's new features, SolrCloud, which</span>\nprovides comprehensive distributed capabilities.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Securing Solr<span class=\"ff2 fc1\">: When planning how to secure Solr, you should consider which of the available features or</span>\napproaches are right for you.",
    "hierarchy": [
      "Apache Solr Reference Guide"
    ],
    "pageId": 7
  },
  {
    "content": "Legacy Scaling and Distribution<span class=\"ff2 fc1\">: This section tells you how to grow a Solr distribution by dividing a large</span>\nindex into sections called shards, which are then distributed across multiple servers, or by replicating a\nsingle index across multiple services.",
    "hierarchy": [
    ],
    "pageId": 8
  },
  {
    "content": "Client APIs<span class=\"ff2 fc1\">: This section tells you how to access Solr through various client APIs, including JavaScript, JSON,</span>\nand Ruby.",
    "hierarchy": [
    ],
    "pageId": 8
  },
  {
    "content": "This guide describes all of the important features and functions of Apache Solr.",
    "hierarchy": [
      "About This Guide"
    ],
    "pageId": 9
  },
  {
    "content": "Solr is free to download from <span class=\"link\">http://lucene.apache.org/solr/</span>.",
    "hierarchy": [
      "About This Guide"
    ],
    "pageId": 9
  },
  {
    "content": "Designed to provide high-level documentation, this guide is intended to be more encyclopedic and less of a\ncookbook. It is structured to address a broad spectrum of needs, ranging from new developers getting\nstarted to well-experienced developers extending their application or troubleshooting. It will be of use at\nany point in the application life cycle, for whenever you need authoritative information about Solr.",
    "hierarchy": [
      "About This Guide"
    ],
    "pageId": 9
  },
  {
    "content": "The material as presented assumes that you are familiar with some basic search concepts and that you can\nread XML. It does not assume that you are a Java programmer, although knowledge of Java is helpful when\nworking directly with Lucene or when developing custom extensions to a Lucene/Solr installation.",
    "hierarchy": [
      "About This Guide"
    ],
    "pageId": 9
  },
  {
    "content": "The default port when running Solr is 8983. The samples, URLs and screenshots in this guide may show\ndifferent ports, because the port number that Solr uses is configurable.",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "If you have not customized your installation of Solr, please make sure that you use port 8983 when following\nthe examples, or configure your own installation to use the port numbers shown in the examples. For\ninformation about configuring port numbers, see the section <span class=\"link\">Monitoring Solr</span>.",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "Similarly, URL examples use <span class=\"code\">localhost</span> throughout; if you are accessing Solr from a location remote to the\nserver hosting Solr, replace <span class=\"code\">localhost</span> with the proper domain or IP where Solr is running.",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "For example, we might provide a sample query like:",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "http://localhost:8983/solr/gettingstarted/select?q=brown+cow",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "There are several items in this URL you might need to change locally. First, if your server is running at\n\"www.example.com\", you'll replace \"localhost\" with the proper domain. If you aren’t using port 8983, you’ll\nreplace that also. Finally, you’ll want to replace \"gettingstarted\" (the collection or core name) with the\nproper one in use in your implementation. The URL would then become:",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "http://www.example.com/solr/mycollection/select?q=brown+cow",
    "hierarchy": [
      "Hosts and Port Examples"
    ],
    "pageId": 10
  },
  {
    "content": "Path information is given relative to <span class=\"code\">solr.home</span>, which is the location under the main Solr installation where\nSolr's collections and their <span class=\"code\">conf</span> and <span class=\"code\">data</span> directories are stored.",
    "hierarchy": [
      "Directory Paths"
    ],
    "pageId": 11
  },
  {
    "content": "In many cases, this is is in the <span class=\"code\">server/solr</span> directory of your installation. However, there can be exceptions,\nparticularly if your installation has customized this.",
    "hierarchy": [
      "Directory Paths"
    ],
    "pageId": 11
  },
  {
    "content": "In several cases of this Guide, our examples are built from the the \"techproducts\" example (i.e., you have\nstarted Solr with the command <span class=\"code\">bin/solr -e techproducts</span>). In this case, <span class=\"code\">solr.home</span> will be a sub-directory\nof the <span class=\"code\">example/</span> directory created for you automatically.",
    "hierarchy": [
      "Directory Paths"
    ],
    "pageId": 11
  },
  {
    "content": "See also the section <span class=\"link\">Solr Home</span> for further details on what is contained in this directory.",
    "hierarchy": [
      "Directory Paths"
    ],
    "pageId": 11
  },
  {
    "content": "Solr has two styles of APIs that currently co-exist. The first has grown somewhat organically as Solr has\ndeveloped over time, but the second, referred to as the \"V2 API\", redesigns many of the original APIs with a\nmodernized and self-documenting API interface.",
    "hierarchy": [
      "API Examples"
    ],
    "pageId": 12
  },
  {
    "content": "In many cases, but not all, the parameters and outputs of API calls are the same between the two styles. In\nall cases the paths and endpoints used are different.",
    "hierarchy": [
      "API Examples"
    ],
    "pageId": 12
  },
  {
    "content": "Throughout this Guide, we have added examples of both styles with sections labeled \"V1 API\" and \"V2 API\".\nAs of the 7.2 version of this Guide, these examples are not yet complete - more coverage will be added as\nfuture versions of the Guide are released.",
    "hierarchy": [
      "API Examples"
    ],
    "pageId": 12
  },
  {
    "content": "The section <span class=\"link\">V2 API</span> provides more information about how to work with the new API structure, including how\nto disable it if you choose to do so.",
    "hierarchy": [
      "API Examples"
    ],
    "pageId": 12
  },
  {
    "content": "Special notes are included throughout these pages. There are several types of notes:",
    "hierarchy": [
      "Special Inline Notes"
    ],
    "pageId": 13
  },
  {
    "content": "Information blocks provide additional information that's useful for you to know.",
    "hierarchy": [
      "Special Inline Notes"
    ],
    "pageId": 13
  },
  {
    "content": "Important blocks provide information that we want to make sure you are aware of.",
    "hierarchy": [
      "Special Inline Notes"
    ],
    "pageId": 13
  },
  {
    "content": "Tip blocks provide helpful tips.",
    "hierarchy": [
      "Special Inline Notes"
    ],
    "pageId": 13
  },
  {
    "content": "Caution blocks provide details on scenarios or configurations you should be careful with.",
    "hierarchy": [
      "Special Inline Notes"
    ],
    "pageId": 13
  },
  {
    "content": "Warning blocks are used to warn you from a possibly dangerous change or action.",
    "hierarchy": [
      "Special Inline Notes"
    ],
    "pageId": 13
  },
  {
    "content": "Solr makes it easy for programmers to develop sophisticated, high-performance\nsearch applications with advanced features.",
    "hierarchy": [
      "Getting Started"
    ],
    "pageId": 14
  },
  {
    "content": "This section introduces you to the basic Solr architecture and features to help you get up and running\nquickly. It covers the following topics:",
    "hierarchy": [
      "Getting Started"
    ],
    "pageId": 14
  },
  {
    "content": "Solr Tutorial<span class=\"fc1\">: This tutorial covers getting Solr up and running</span>",
    "hierarchy": [
      "Getting Started"
    ],
    "pageId": 14
  },
  {
    "content": "A Quick Overview<span class=\"fc1\">: A high-level overview of how Solr works.</span>",
    "hierarchy": [
      "Getting Started"
    ],
    "pageId": 14
  },
  {
    "content": "Solr System Requirements<span class=\"fc1\">: Solr System Requirement</span>",
    "hierarchy": [
      "Getting Started"
    ],
    "pageId": 14
  },
  {
    "content": "Installing Solr<span class=\"fc1\">: A walkthrough of the Solr installation process.</span>",
    "hierarchy": [
      "Getting Started"
    ],
    "pageId": 14
  },
  {
    "content": "This tutorial covers getting Solr up and running, ingesting a variety of data sources into Solr collections, and\ngetting a feel for the Solr administrative and search interfaces.",
    "hierarchy": [
      "Solr Tutorial"
    ],
    "pageId": 15
  },
  {
    "content": "The tutorial is organized into three sections that each build on the one before it. The <span class=\"link\">first exercise</span> will ask\nyou to start Solr, create a collection, index some basic documents, and then perform some searches.",
    "hierarchy": [
      "Solr Tutorial"
    ],
    "pageId": 15
  },
  {
    "content": "The <span class=\"link\">second exercise</span> works with a different set of data, and explores requesting facets with the dataset.",
    "hierarchy": [
      "Solr Tutorial"
    ],
    "pageId": 15
  },
  {
    "content": "The <span class=\"link\">third exercise</span> encourages you to begin to work with your own data and start a plan for your\nimplementation.",
    "hierarchy": [
      "Solr Tutorial"
    ],
    "pageId": 15
  },
  {
    "content": "Finally, we'll introduce <span class=\"link\">spatial search</span> and show you how to get your Solr instance back into a clean state.",
    "hierarchy": [
      "Solr Tutorial"
    ],
    "pageId": 15
  },
  {
    "content": "To follow along with this tutorial, you will need…",
    "hierarchy": [
      "Solr Tutorial",
      "Before You Begin"
    ],
    "pageId": 15
  },
  {
    "content": "1.To meet the <span class=\"link\">system requirements</span>\n2.An Apache Solr release <span class=\"link\">download</span>. This tutorial is designed for Apache Solr 7.3.",
    "hierarchy": [
      "Solr Tutorial",
      "Before You Begin"
    ],
    "pageId": 15
  },
  {
    "content": "For best results, please run the browser showing this tutorial and the Solr server on the same machine so\ntutorial links will correctly point to your Solr server.",
    "hierarchy": [
      "Solr Tutorial",
      "Before You Begin"
    ],
    "pageId": 15
  },
  {
    "content": "Begin by unzipping the Solr release and changing your working directory to the subdirectory where Solr was\ninstalled. For example, with a shell in UNIX, Cygwin, or MacOS:",
    "hierarchy": [
      "Solr Tutorial",
      "Unpack Solr"
    ],
    "pageId": 15
  },
  {
    "content": "~$ ls solr*\nsolr-7.3.0.zip",
    "hierarchy": [
      "Solr Tutorial",
      "Unpack Solr"
    ],
    "pageId": 15
  },
  {
    "content": "~$ unzip -q solr-7.3.0.zip",
    "hierarchy": [
      "Solr Tutorial",
      "Unpack Solr"
    ],
    "pageId": 15
  },
  {
    "content": "~$ cd solr-7.3.0/",
    "hierarchy": [
      "Solr Tutorial",
      "Unpack Solr"
    ],
    "pageId": 15
  },
  {
    "content": "If you'd like to know more about Solr’s directory layout before moving to the first exercise, see the section\nDirectory Layout<span class=\"fc1\"> for details.</span>",
    "hierarchy": [
      "Solr Tutorial",
      "Unpack Solr"
    ],
    "pageId": 15
  },
  {
    "content": "This exercise will walk you through how to start Solr as a two-node cluster (both nodes on the same\nmachine) and create a collection during startup. Then you will index some sample data that ships with Solr\nand do some basic searches.",
    "hierarchy": [
      "Solr Tutorial",
      "Exercise 1: Index Techproducts Example Data"
    ],
    "pageId": 15
  },
  {
    "content": "To launch Solr, run: <span class=\"code\">bin/solr start -e cloud</span> on Unix or MacOS; <span class=\"code\">bin\\solr.cmd start -e cloud</span> on\nWindows.",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "This will start an interactive session that will start two Solr \"servers\" on your machine. This command has an\noption to run without prompting you for input (<span class=\"code\">-noprompt</span>), but we want to modify two of the defaults so we\nwon't use that option now.",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "solr-7.3.0:$ ./bin/solr start -e cloud",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "Welcome to the SolrCloud example!",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "This interactive session will help you launch a SolrCloud cluster on your local workstation.\nTo begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes)\n[2]:",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "The first prompt asks how many nodes we want to run. Note the <span class=\"code\">[2]</span> at the end of the last line; that is the\ndefault number of nodes. Two is what we want for this example, so you can simply press <span class=\"code\">enter</span>.",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "Ok, let's start up 2 Solr nodes for your example SolrCloud cluster.\nPlease enter the port for node1 [8983]:",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "This will be the port that the first node runs on. Unless you know you have something else running on port\n8983 on your machine, accept this default option also by pressing <span class=\"code\">enter</span>. If something is already using that\nport, you will be asked to choose another port.",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "Please enter the port for node2 [7574]:",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "This is the port the second node will run on. Again, unless you know you have something else running on\nport 8983 on your machine, accept this default option also by pressing <span class=\"code\">enter</span>. If something is already using\nthat port, you will be asked to choose another port.",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "Solr will now initialize itself and start running on those two nodes. The script will print the commands it uses\nfor your reference.",
    "hierarchy": [
      "Launch Solr in SolrCloud Mode"
    ],
    "pageId": 16
  },
  {
    "content": "Starting up 2 Solr nodes for your example SolrCloud cluster.",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Creating Solr home directory /solr-7.3.0/example/cloud/node1/solr\nCloning /solr-7.3.0/example/cloud/node1 into\nÊ  /solr-7.3.0/example/cloud/node2",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Starting up Solr on port 8983 using command:\n\"bin/solr\" start -cloud -p 8983 -s \"example/cloud/node1/solr\"",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Waiting up to 180 seconds to see Solr running on port 8983 [\\]\nStarted Solr server on port 8983 (pid=34942). Happy searching!",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Starting up Solr on port 7574 using command:\n\"bin/solr\" start -cloud -p 7574 -s \"example/cloud/node2/solr\" -z localhost:9983",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Waiting up to 180 seconds to see Solr running on port 7574 [\\]\nStarted Solr server on port 7574 (pid=35036). Happy searching!",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "INFO  - 2017-07-27 12:28:02.835; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider;\nCluster at localhost:9983 ready",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Notice that two instances of Solr have started on two nodes. Because we are starting in SolrCloud mode, and\ndid not define any details about an external ZooKeeper cluster, Solr launches its own ZooKeeper and\nconnects both nodes to it.",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "After startup is complete, you'll be prompted to create a collection to use for indexing data.",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Now let's create a new collection for indexing documents in your 2-node cluster.\nPlease provide a name for your new collection: [gettingstarted]",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Here's the first place where we’ll deviate from the default options. This tutorial will ask you to index some\nsample data included with Solr, called the \"techproducts\" data. Let’s name our collection \"techproducts\" so\nit’s easy to differentiate from other collections we’ll create later. Enter <span class=\"ff1 fs1\">techproducts</span> at the prompt and hit\nenter<span class=\"ff2 fs0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "How many shards would you like to split techproducts into? [2]",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "This is asking how many <span class=\"link\">shards</span> you want to split your index into across the two nodes. Choosing \"2\" (the\ndefault) means we will split the index relatively evenly across both nodes, which is a good way to start.\nAccept the default by hitting <span class=\"ff1 fs1\">enter</span>.",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "How many replicas per shard would you like to create? [2]",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "A replica is a copy of the index that's used for failover (see also the <span class=\"link\">Solr Glossary definition</span>). Again, the\ndefault of \"2\" is fine to start with here also, so accept the default by hitting <span class=\"ff1 fs1\">enter</span>.",
    "hierarchy": [
    ],
    "pageId": 17
  },
  {
    "content": "Please choose a configuration for the techproducts collection, available options are:\n_default or sample_techproducts_configs [_default]",
    "hierarchy": [
    ],
    "pageId": 18
  },
  {
    "content": "We've reached another point where we will deviate from the default option. Solr has two sample sets of\nconfiguration files (called a <span class=\"code\">configSet</span>) available out-of-the-box.",
    "hierarchy": [
    ],
    "pageId": 18
  },
  {
    "content": "A collection must have a configSet, which at a minimum includes the two main configuration files for Solr:\nthe schema file (named either <span class=\"ff1 fs1\">managed-schema</span> or <span class=\"ff1 fs1\">schema.xml</span>), and <span class=\"ff1 fs1\">solrconfig.xml</span>. The question here is\nwhich configSet you would like to start with. The <span class=\"ff1 fs1\">_default</span> is a bare-bones option, but note there's one\nwhose name includes \"techproducts\", the same as we named our collection. This configSet is specifically\ndesigned to support the sample data we want to use, so enter <span class=\"ff1 fs1\">sample_techproducts_configs</span> at the prompt\nand hit <span class=\"ff1 fs1\">enter</span>.",
    "hierarchy": [
    ],
    "pageId": 18
  },
  {
    "content": "At this point, Solr will create the collection and again output to the screen the commands it issues.",
    "hierarchy": [
    ],
    "pageId": 18
  },
  {
    "content": "Uploading /solr-7.3.0/server/solr/configsets/_default/conf for config techproducts to ZooKeeper\nat localhost:9983",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "Connecting to ZooKeeper at localhost:9983 ...\nINFO  - 2017-07-27 12:48:59.289; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider;\nCluster at localhost:9983 ready\nUploading /solr-7.3.0/server/solr/configsets/sample_techproducts_configs/conf for config\ntechproducts to ZooKeeper at localhost:9983",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "Creating new collection 'techproducts' using command:\nhttp://localhost:8983/solr/admin/collections?action=CREATE&name=techproducts&numShards=2&replicat\nionFactor=2&maxShardsPerNode=2&collection.configName=techproducts",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "{\nÊ \"responseHeader\":{\nÊ   \"status\":0,\nÊ   \"QTime\":5460},\nÊ \"success\":{\nÊ   \"192.168.0.110:7574_solr\":{\nÊ     \"responseHeader\":{\nÊ       \"status\":0,\nÊ       \"QTime\":4056},\nÊ     \"core\":\"techproducts_shard1_replica_n1\"},\nÊ   \"192.168.0.110:8983_solr\":{\nÊ     \"responseHeader\":{\nÊ       \"status\":0,\nÊ       \"QTime\":4056},\nÊ     \"core\":\"techproducts_shard2_replica_n2\"}}}",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "Enabling auto soft-commits with maxTime 3 secs using the Config API",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "POSTing request to Config API: http://localhost:8983/solr/techproducts/config\n{\"set-property\":{\"updateHandler.autoSoftCommit.maxTime\":\"3000\"}}\nSuccessfully set-property updateHandler.autoSoftCommit.maxTime to 3000",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "SolrCloud example running, please visit: http://localhost:8983/solr",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "Congratulations!<span class=\"code\"> Solr is ready for data!</span>",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "You can see that Solr is running by launching the Solr Admin UI in your web browser: <span class=\"link\">http://localhost:8983/</span>\nsolr/<span class=\"fc0\">. This is the main starting point for administering Solr.</span>",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "Solr will now be running two \"nodes\", one on port 7574 and one on port 8983. There is one collection\ncreated automatically, <span class=\"ff1 fs1\">techproducts</span>, a two shard collection, each with two replicas.",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "The <span class=\"link\">Cloud tab</span> in the Admin UI diagrams the collection nicely:",
    "hierarchy": [
    ],
    "pageId": 19
  },
  {
    "content": "Your Solr server is up and running, but it doesn't contain any data yet, so we can’t do any queries.",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "Solr includes the <span class=\"ff4 fs2\">bin/post</span> tool in order to facilitate indexing various types of documents easily. We'll use\nthis tool for the indexing examples below.",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "You'll need a command shell to run some of the following examples, rooted in the Solr install directory; the\nshell from where you launched Solr works just fine.",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "Currently the <span class=\"ff4 fs2\">bin/post</span> tool does not have a comparable Windows script, but the\nunderlying Java program invoked is available. We'll show examples below for Windows, but\nyou can also see the <span class=\"link\">Windows section</span> of the Post Tool documentation for more details.",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "The data we will index is in the <span class=\"ff4 fs2\">example/exampledocs</span> directory. The documents are in a mix of document\nformats (JSON, CSV, etc.), and fortunately we can index them all at once:",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "solr-7.3.0:$ bin/post -c techproducts example/exampledocs/*",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "C:\\solr-7.3.0> java -jar -Dc=techproducts -Dauto example\\exampledocs\\post.jar\nexample\\exampledocs\\*",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "You should see output similar to the following:",
    "hierarchy": [
      "Index the Techproducts Data"
    ],
    "pageId": 20
  },
  {
    "content": "SimplePostTool version 5.0.0\nPosting files to [base] url http://localhost:8983/solr/techproducts/update...\nEntering auto mode. File endings considered are\nxml,json,jsonl,csv,pdf,doc,docx,ppt,pptx,xls,xlsx,odt,odp,ods,ott,otp,ots,rtf,htm,html,txt,log\nPOSTing file books.csv (text/csv) to [base]\nPOSTing file books.json (application/json) to [base]/json/docs\nPOSTing file gb18030-example.xml (application/xml) to [base]\nPOSTing file hd.xml (application/xml) to [base]\nPOSTing file ipod_other.xml (application/xml) to [base]\nPOSTing file ipod_video.xml (application/xml) to [base]\nPOSTing file manufacturers.xml (application/xml) to [base]\nPOSTing file mem.xml (application/xml) to [base]\nPOSTing file money.xml (application/xml) to [base]\nPOSTing file monitor.xml (application/xml) to [base]\nPOSTing file monitor2.xml (application/xml) to [base]\nPOSTing file more_books.jsonl (application/json) to [base]/json/docs\nPOSTing file mp500.xml (application/xml) to [base]\nPOSTing file post.jar (application/octet-stream) to [base]/extract\nPOSTing file sample.html (text/html) to [base]/extract\nPOSTing file sd500.xml (application/xml) to [base]\nPOSTing file solr-word.pdf (application/pdf) to [base]/extract\nPOSTing file solr.xml (application/xml) to [base]\nPOSTing file test_utf8.sh (application/octet-stream) to [base]/extract\nPOSTing file utf8-example.xml (application/xml) to [base]\nPOSTing file vidcard.xml (application/xml) to [base]\n21 files indexed.\nCOMMITting Solr index changes to http://localhost:8983/solr/techproducts/update...\nTime spent: 0:00:00.822",
    "hierarchy": [
    ],
    "pageId": 21
  },
  {
    "content": "Congratulations again! You have data in your Solr!",
    "hierarchy": [
    ],
    "pageId": 21
  },
  {
    "content": "Now we're ready to start searching.",
    "hierarchy": [
    ],
    "pageId": 21
  },
  {
    "content": "Solr can be queried via REST clients, curl, wget, Chrome POSTMAN, etc., as well as via native clients available\nfor many programming languages.",
    "hierarchy": [
      "Basic Searching"
    ],
    "pageId": 21
  },
  {
    "content": "The Solr Admin UI includes a query builder interface via the Query tab for the <span class=\"ff1 fs2\">techproducts</span> collection (at\nhttp://localhost:8983/solr/#/techproducts/query<span class=\"fc0\">). If you click the <span class=\"code\">[<span class=\"ff4\"> </span>Execute Query<span class=\"ff4\"> </span>]</span> button without</span>\nchanging anything in the form, you'll get 10 documents in JSON format:",
    "hierarchy": [
      "Basic Searching"
    ],
    "pageId": 21
  },
  {
    "content": "The URL sent by the Admin UI to Solr is shown in light grey near the top right of the above screenshot. If you\nclick on it, your browser will show you the raw response.",
    "hierarchy": [
    ],
    "pageId": 22
  },
  {
    "content": "To use curl, give the same URL shown in your browser in quotes on the command line:",
    "hierarchy": [
    ],
    "pageId": 22
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?indent=on&q=*:*\"",
    "hierarchy": [
    ],
    "pageId": 22
  },
  {
    "content": "What's happening here is that we are using Solr’s query parameter (<span class=\"code\">q</span>) with a special syntax that requests all\ndocuments in the index (<span class=\"code\">*:*</span>). All of the documents are not returned to us, however, because of the default\nfor a parameter called <span class=\"code\">rows</span>, which you can see in the form is <span class=\"code\">10</span>. You can change the parameter in the UI or\nin the defaults if you wish.",
    "hierarchy": [
    ],
    "pageId": 22
  },
  {
    "content": "Solr has very powerful search options, and this tutorial won't be able to cover all of them. But we can cover\nsome of the most common types of queries.",
    "hierarchy": [
    ],
    "pageId": 22
  },
  {
    "content": "To search for a term, enter it as the <span class=\"code\">q</span> parameter value in the Solr Admin UI Query screen, replacing <span class=\"code\">*:*</span> with\nthe term you want to find.",
    "hierarchy": [
      "Search for a Single Term"
    ],
    "pageId": 22
  },
  {
    "content": "Enter \"foundation\" and hit <span class=\"ff4\">[<span class=\"ff5\"> </span>Execute Query<span class=\"ff5\"> </span>]</span> again.",
    "hierarchy": [
      "Search for a Single Term"
    ],
    "pageId": 22
  },
  {
    "content": "If you prefer curl, enter something like this:",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?q=foundation\"",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "You'll see something like this:",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">8</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"foundation\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">4</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">2.7879646</span>,<span class=\"fc1\">\"docs\"</span>:[\nÊ     {\nÊ       <span class=\"fc1\">\"id\"</span>:<span class=\"fc4\">\"0553293354\"</span>,\nÊ       <span class=\"fc1\">\"cat\"</span>:[<span class=\"fc4\">\"book\"</span>],\nÊ       <span class=\"fc1\">\"name\"</span>:<span class=\"fc4\">\"Foundation\"</span>,\nÊ       <span class=\"fc1\">\"price\"</span>:<span class=\"fc3\">7.99</span>,\nÊ       <span class=\"fc1\">\"price_c\"</span>:<span class=\"fc4\">\"7.99,USD\"</span>,\nÊ       <span class=\"fc1\">\"inStock\"</span>:<span class=\"fc2\">true</span>,\nÊ       <span class=\"fc1\">\"author\"</span>:<span class=\"fc4\">\"Isaac Asimov\"</span>,\nÊ       <span class=\"fc1\">\"author_s\"</span>:<span class=\"fc4\">\"Isaac Asimov\"</span>,\nÊ       <span class=\"fc1\">\"series_t\"</span>:<span class=\"fc4\">\"Foundation Novels\"</span>,\nÊ       <span class=\"fc1\">\"sequence_i\"</span>:<span class=\"fc3\">1</span>,\nÊ       <span class=\"fc1\">\"genre_s\"</span>:<span class=\"fc4\">\"scifi\"</span>,\nÊ       <span class=\"fc1\">\"_version_\"</span>:<span class=\"fc3\">1574100232473411586</span>,\nÊ       <span class=\"fc1\">\"price_c____l_ns\"</span>:<span class=\"fc3\">799</span>}]\n}}",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "The response indicates that there are 4 hits (<span class=\"ff2 fs1\">\"numFound\":4</span>). We've only included one document the above\nsample output, but since 4 hits is lower than the <span class=\"ff2 fs1\">rows</span> parameter default of 10 to be returned, you should see\nall 4 of them.",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "Note the <span class=\"ff2 fs1\">responseHeader</span> before the documents. This header will include the parameters you have set for\nthe search. By default it shows only the parameters <span class=\"code\">you</span> have set for this query, which in this case is only\nyour query term.",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "The documents we got back include all the fields for each document that were indexed. This is, again,\ndefault behavior. If you want to restrict the fields in the response, you can use the <span class=\"ff2 fs1\">fl</span> param, which takes a\ncomma-separated list of field names. This is one of the available fields on the query form in the Admin UI.",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "Put \"id\" (without quotes) in the \"fl\" box and hit <span class=\"ff4\">[<span class=\"ff5\"> </span>Execute Query<span class=\"ff5\"> </span>]</span> again. Or, to specify it with curl:",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?q=foundation&fl=id\"",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "You should only see the IDs of the matching records returned.",
    "hierarchy": [
    ],
    "pageId": 23
  },
  {
    "content": "All Solr queries look for documents using some field. Often you want to query across multiple fields at the\nsame time, and this is what we've done so far with the \"foundation\" query. This is possible with the use of",
    "hierarchy": [
      "Field Searches"
    ],
    "pageId": 23
  },
  {
    "content": "copy fields, which are set up already with this set of configurations. We'll cover copy fields a little bit more in\nExercise 2.",
    "hierarchy": [
    ],
    "pageId": 24
  },
  {
    "content": "Sometimes, though, you want to limit your query to a single field. This can make your queries more efficient\nand the results more relevant for users.",
    "hierarchy": [
    ],
    "pageId": 24
  },
  {
    "content": "Much of the data in our small sample data set is related to products. Let's say we want to find all the\n\"electronics\" products in the index. In the Query screen, enter \"electronics\" (without quotes) in the <span class=\"ff2 fs1\">q</span> box\nand hit <span class=\"code\">[<span class=\"ff4\"> </span>Execute Query<span class=\"ff4\"> </span>]</span>. You should get 14 results, such as:",
    "hierarchy": [
    ],
    "pageId": 24
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">6</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"electronics\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">14</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">1.5579545</span>,<span class=\"fc1\">\"docs\"</span>:[\nÊ     {\nÊ       <span class=\"fc1\">\"id\"</span>:<span class=\"fc4\">\"IW-02\"</span>,\nÊ       <span class=\"fc1\">\"name\"</span>:<span class=\"fc4\">\"iPod & iPod Mini USB 2.0 Cable\"</span>,\nÊ       <span class=\"fc1\">\"manu\"</span>:<span class=\"fc4\">\"Belkin\"</span>,\nÊ       <span class=\"fc1\">\"manu_id_s\"</span>:<span class=\"fc4\">\"belkin\"</span>,\nÊ       <span class=\"fc1\">\"cat\"</span>:[<span class=\"fc4\">\"electronics\"</span>,\nÊ         <span class=\"fc4\">\"connector\"</span>],\nÊ       <span class=\"fc1\">\"features\"</span>:[<span class=\"fc4\">\"car power adapter for iPod, white\"</span>],\nÊ       <span class=\"fc1\">\"weight\"</span>:<span class=\"fc3\">2.0</span>,\nÊ       <span class=\"fc1\">\"price\"</span>:<span class=\"fc3\">11.5</span>,\nÊ       <span class=\"fc1\">\"price_c\"</span>:<span class=\"fc4\">\"11.50,USD\"</span>,\nÊ       <span class=\"fc1\">\"popularity\"</span>:<span class=\"fc3\">1</span>,\nÊ       <span class=\"fc1\">\"inStock\"</span>:<span class=\"fc2\">false</span>,\nÊ       <span class=\"fc1\">\"store\"</span>:<span class=\"fc4\">\"37.7752,-122.4232\"</span>,\nÊ       <span class=\"fc1\">\"manufacturedate_dt\"</span>:<span class=\"fc4\">\"2006-02-14T23:55:59Z\"</span>,\nÊ       <span class=\"fc1\">\"_version_\"</span>:<span class=\"fc3\">1574100232554151936</span>,\nÊ       <span class=\"fc1\">\"price_c____l_ns\"</span>:<span class=\"fc3\">1150</span>}]\n}}",
    "hierarchy": [
    ],
    "pageId": 24
  },
  {
    "content": "This search finds all documents that contain the term \"electronics\" anywhere in the indexed fields. However,\nwe can see from the above there is a <span class=\"ff2 fs1\">cat</span> field (for \"category\"). If we limit our search for only documents\nwith the category \"electronics\", the results will be more precise for our users.",
    "hierarchy": [
    ],
    "pageId": 24
  },
  {
    "content": "Update your query in the <span class=\"ff2 fs1\">q</span> field of the Admin UI so it's <span class=\"ff2 fs1\">cat:electronics</span>. Now you get 12 results:",
    "hierarchy": [
    ],
    "pageId": 24
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">6</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"cat:electronics\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">12</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">0.9614112</span>,<span class=\"fc1\">\"docs\"</span>:[\nÊ     {\nÊ       <span class=\"fc1\">\"id\"</span>:<span class=\"fc4\">\"SP2514N\"</span>,\nÊ       <span class=\"fc1\">\"name\"</span>:<span class=\"fc4\">\"Samsung SpinPoint P120 SP2514N - hard drive - 250 GB - ATA-133\"</span>,\nÊ       <span class=\"fc1\">\"manu\"</span>:<span class=\"fc4\">\"Samsung Electronics Co. Ltd.\"</span>,\nÊ       <span class=\"fc1\">\"manu_id_s\"</span>:<span class=\"fc4\">\"samsung\"</span>,\nÊ       <span class=\"fc1\">\"cat\"</span>:[<span class=\"fc4\">\"electronics\"</span>,\nÊ         <span class=\"fc4\">\"hard drive\"</span>],\nÊ       <span class=\"fc1\">\"features\"</span>:[<span class=\"fc4\">\"7200RPM, 8MB cache, IDE Ultra ATA-133\"</span>,\nÊ         <span class=\"fc4\">\"NoiseGuard, SilentSeek technology, Fluid Dynamic Bearing (FDB) motor\"</span>],\nÊ       <span class=\"fc1\">\"price\"</span>:<span class=\"fc3\">92.0</span>,\nÊ       <span class=\"fc1\">\"price_c\"</span>:<span class=\"fc4\">\"92.0,USD\"</span>,\nÊ       <span class=\"fc1\">\"popularity\"</span>:<span class=\"fc3\">6</span>,\nÊ       <span class=\"fc1\">\"inStock\"</span>:<span class=\"fc2\">true</span>,\nÊ       <span class=\"fc1\">\"manufacturedate_dt\"</span>:<span class=\"fc4\">\"2006-02-13T15:26:37Z\"</span>,\nÊ       <span class=\"fc1\">\"store\"</span>:<span class=\"fc4\">\"35.0752,-97.032\"</span>,\nÊ       <span class=\"fc1\">\"_version_\"</span>:<span class=\"fc3\">1574100232511160320</span>,\nÊ       <span class=\"fc1\">\"price_c____l_ns\"</span>:<span class=\"fc3\">9200</span>}]\nÊ    }}",
    "hierarchy": [
    ],
    "pageId": 25
  },
  {
    "content": "Using curl, this query would look like this:",
    "hierarchy": [
    ],
    "pageId": 25
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?q=cat:electronics\"",
    "hierarchy": [
    ],
    "pageId": 25
  },
  {
    "content": "To search for a multi-term phrase, enclose it in double quotes: <span class=\"ff1 fs1\">q=\"multiple terms here\"</span>. For example,\nsearch for \"CAS latency\" by entering that phrase in quotes to the <span class=\"ff1 fs1\">q</span> box in the Admin UI.",
    "hierarchy": [
      "Phrase Search"
    ],
    "pageId": 25
  },
  {
    "content": "If you're following along with curl, note that the space between terms must be converted to \"+\" in a URL, as\nso:",
    "hierarchy": [
      "Phrase Search"
    ],
    "pageId": 25
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?q=\\\"CAS+latency\\\"\"",
    "hierarchy": [
      "Phrase Search"
    ],
    "pageId": 25
  },
  {
    "content": "We get 2 results:",
    "hierarchy": [
      "Phrase Search"
    ],
    "pageId": 25
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">7</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"\\\"CAS latency\\\"\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">2</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">5.937691</span>,<span class=\"fc1\">\"docs\"</span>:[\nÊ     {\nÊ       <span class=\"fc1\">\"id\"</span>:<span class=\"fc4\">\"VDBDB1A16\"</span>,\nÊ       <span class=\"fc1\">\"name\"</span>:<span class=\"fc4\">\"A-DATA V-Series 1GB 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) System Memory</span>",
    "hierarchy": [
    ],
    "pageId": 26
  },
  {
    "content": "Ê       <span class=\"fc1\">\"manu\"</span>:<span class=\"fc4\">\"A-DATA Technology Inc.\"</span>,\nÊ       <span class=\"fc1\">\"manu_id_s\"</span>:<span class=\"fc4\">\"corsair\"</span>,\nÊ       <span class=\"fc1\">\"cat\"</span>:[<span class=\"fc4\">\"electronics\"</span>,\nÊ         <span class=\"fc4\">\"memory\"</span>],\nÊ       <span class=\"fc1\">\"features\"</span>:[<span class=\"fc4\">\"CAS latency 3,   2.7v\"</span>],\nÊ       <span class=\"fc1\">\"popularity\"</span>:<span class=\"fc3\">0</span>,\nÊ       <span class=\"fc1\">\"inStock\"</span>:<span class=\"fc2\">true</span>,\nÊ       <span class=\"fc1\">\"store\"</span>:<span class=\"fc4\">\"45.18414,-93.88141\"</span>,\nÊ       <span class=\"fc1\">\"manufacturedate_dt\"</span>:<span class=\"fc4\">\"2006-02-13T15:26:37Z\"</span>,\nÊ       <span class=\"fc1\">\"payloads\"</span>:<span class=\"fc4\">\"electronics|0.9 memory|0.1\"</span>,\nÊ       <span class=\"fc1\">\"_version_\"</span>:<span class=\"fc3\">1574100232590852096</span>},\nÊ     {\nÊ       <span class=\"fc1\">\"id\"</span>:<span class=\"fc4\">\"TWINX2048-3200PRO\"</span>,\nÊ       <span class=\"fc1\">\"name\"</span>:<span class=\"fc4\">\"CORSAIR  XMS 2GB (2 x 1GB) 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) Dual</span>",
    "hierarchy": [
    ],
    "pageId": 26
  },
  {
    "content": "Ê       <span class=\"fc1\">\"manu\"</span>:<span class=\"fc4\">\"Corsair Microsystems Inc.\"</span>,\nÊ       <span class=\"fc1\">\"manu_id_s\"</span>:<span class=\"fc4\">\"corsair\"</span>,\nÊ       <span class=\"fc1\">\"cat\"</span>:[<span class=\"fc4\">\"electronics\"</span>,\nÊ         <span class=\"fc4\">\"memory\"</span>],\nÊ       <span class=\"fc1\">\"features\"</span>:[<span class=\"fc4\">\"CAS latency 2,  2-3-3-6 timing, 2.75v, unbuffered, heat-spreader\"</span>],\nÊ       <span class=\"fc1\">\"price\"</span>:<span class=\"fc3\">185.0</span>,\nÊ       <span class=\"fc1\">\"price_c\"</span>:<span class=\"fc4\">\"185.00,USD\"</span>,\nÊ       <span class=\"fc1\">\"popularity\"</span>:<span class=\"fc3\">5</span>,\nÊ       <span class=\"fc1\">\"inStock\"</span>:<span class=\"fc2\">true</span>,\nÊ       <span class=\"fc1\">\"store\"</span>:<span class=\"fc4\">\"37.7752,-122.4232\"</span>,\nÊ       <span class=\"fc1\">\"manufacturedate_dt\"</span>:<span class=\"fc4\">\"2006-02-13T15:26:37Z\"</span>,\nÊ       <span class=\"fc1\">\"payloads\"</span>:<span class=\"fc4\">\"electronics|6.0 memory|3.0\"</span>,\nÊ       <span class=\"fc1\">\"_version_\"</span>:<span class=\"fc3\">1574100232584560640</span>,\nÊ       <span class=\"fc1\">\"price_c____l_ns\"</span>:<span class=\"fc3\">18500</span>}]\nÊ }}",
    "hierarchy": [
    ],
    "pageId": 26
  },
  {
    "content": "By default, when you search for multiple terms and/or phrases in a single query, Solr will only require that\none of them is present in order for a document to match. Documents containing more terms will be sorted\nhigher in the results list.",
    "hierarchy": [
      "Combining Searches"
    ],
    "pageId": 26
  },
  {
    "content": "You can require that a term or phrase is present by prefixing it with a <span class=\"ff1 fs1\">+</span>; conversely, to disallow the presence\nof a term or phrase, prefix it with a <span class=\"ff1 fs1\">-</span>.",
    "hierarchy": [
      "Combining Searches"
    ],
    "pageId": 26
  },
  {
    "content": "To find documents that contain both terms \"electronics\" and \"music\", enter <span class=\"ff2 fs1\">+electronics +music</span> in the <span class=\"ff2 fs1\">q</span>\nbox in the Admin UI Query tab.",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "If you're using curl, you must encode the <span class=\"ff2 fs1\">+</span> character because it has a reserved purpose in URLs (encoding\nthe space character). The encoding for <span class=\"ff2 fs1\">+</span> is <span class=\"ff2 fs1\">%2B</span> as in:",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?q=%2Belectronics%20%2Bmusic\"",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "You should only get a single result.",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "To search for documents that contain the term \"electronics\" but <span class=\"code\">don't</span> contain the term \"music\", enter\n+electronics -music<span class=\"ff1 fs0\"> in the </span>q<span class=\"ff1 fs0\"> box in the Admin UI. For curl, again, URL encode </span>+<span class=\"ff1 fs0\"> as </span>%2B<span class=\"ff1 fs0\"> as in:</span>",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "curl \"http://localhost:8983/solr/techproducts/select?q=%2Belectronics+-music\"",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "This time you get 13 results.",
    "hierarchy": [
    ],
    "pageId": 27
  },
  {
    "content": "We have only scratched the surface of the search options available in Solr. For more Solr search options, see\nthe section on <span class=\"link\">Searching</span>.",
    "hierarchy": [
      "More Information on Searching"
    ],
    "pageId": 27
  },
  {
    "content": "At this point, you've seen how Solr can index data and have done some basic queries. You can choose now\nto continue to the next example which will introduce more Solr concepts, such as faceting results and\nmanaging your schema, or you can strike out on your own.",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "If you decide not to continue with this tutorial, the data we've indexed so far is likely of little value to you.\nYou can delete your installation and start over, or you can use the <span class=\"ff2 fs1\">bin/solr</span> script we started out with to\ndelete this collection:",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "bin/solr delete -c techproducts",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "And then create a new collection:",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "bin/solr create -c <yourCollection> -s 2 -rf 2",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "To stop both of the Solr nodes we started, issue the command:",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "bin/solr stop -all",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "For more information on start/stop and collection options with <span class=\"ff2 fs1\">bin/solr</span>, see <span class=\"link\">Solr Control Script Reference</span>.",
    "hierarchy": [
      "Exercise 1 Wrap Up"
    ],
    "pageId": 27
  },
  {
    "content": "This exercise will build on the last one and introduce you to the index schema and Solr's powerful faceting\nfeatures.",
    "hierarchy": [
      "Exercise 2: Modify the Schema and Index Films Data"
    ],
    "pageId": 27
  },
  {
    "content": "Did you stop Solr after the last exercise? No? Then go ahead to the next section.",
    "hierarchy": [
      "Exercise 2: Modify the Schema and Index Films Data",
      "Restart Solr"
    ],
    "pageId": 27
  },
  {
    "content": "If you did, though, and need to restart Solr, issue these commands:",
    "hierarchy": [
      "Exercise 2: Modify the Schema and Index Films Data",
      "Restart Solr"
    ],
    "pageId": 27
  },
  {
    "content": "./bin/solr start -c -p 8983 -s example/cloud/node1/solr",
    "hierarchy": [
    ],
    "pageId": 28
  },
  {
    "content": "This starts the first node. When it's done start the second node, and tell it how to connect to to ZooKeeper:",
    "hierarchy": [
    ],
    "pageId": 28
  },
  {
    "content": "./bin/solr start -c -p 7574 -s example/cloud/node2/solr -z localhost:9983",
    "hierarchy": [
    ],
    "pageId": 28
  },
  {
    "content": "We're going to use a whole new data set in this exercise, so it would be better to have a new collection\ninstead of trying to reuse the one we had before.",
    "hierarchy": [
      "Create a New Collection"
    ],
    "pageId": 28
  },
  {
    "content": "One reason for this is we're going to use a feature in Solr called \"field guessing\", where Solr attempts to\nguess what type of data is in a field while it’s indexing it. It also automatically creates new fields in the\nschema for new fields that appear in incoming documents. This mode is called \"Schemaless\". We’ll see the\nbenefits and limitations of this approach to help you decide how and where to use it in your real application.",
    "hierarchy": [
      "Create a New Collection"
    ],
    "pageId": 28
  },
  {
    "content": "Solr's schema is a single file (in XML) that stores the details about the fields and field types Solr is\nexpected to understand. The schema defines not only the field or field type names, but also any\nmodifications that should happen to a field before it is indexed. For example, if you want to ensure that\na user who enters \"abc\" and a user who enters \"ABC\" can both find a document containing the term\n\"ABC\", you will want to normalize (lower-case it, in this case) \"ABC\" when it is indexed, and normalize\nthe user query to be sure of a match. These rules are defined in your schema.",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "Earlier in the tutorial we mentioned copy fields, which are fields made up of data that originated from\nother fields. You can also define dynamic fields, which use wildcards (such as <span class=\"ff1 fs0\">*_t</span> or <span class=\"ff1 fs0\">*_s</span>) to dynamically\ncreate fields of a specific field type. These types of rules are also defined in the schema.",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "When you initially started Solr in the first exercise, we had a choice of a configSet to use. The one we chose\nhad a schema that was pre-defined for the data we later indexed. This time, we're going to use a configSet\nthat has a very minimal schema and let Solr figure out from the data what fields to add.",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "The data you're going to index is related to movies, so start by creating a collection named \"films\" that uses\nthe <span class=\"ff1 fs0\">_default</span> configSet:",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "bin/solr create -c films -s 2 -rf 2",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "Whoa, wait. We didn't specify a configSet! That’s fine, the <span class=\"ff1 fs0\">_default</span> is appropriately named, since it’s the\ndefault and is used if you don’t specify one at all.",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "We did, however, set two parameters <span class=\"ff1 fs0\">-s</span> and <span class=\"ff1 fs0\">-rf</span>. Those are the number of shards to split the collection\nacross (2) and how many replicas to create (2). This is equivalent to the options we had during the\ninteractive example from the first exercise.",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "You should see output like:",
    "hierarchy": [
      "What is a \"schema\" and why do I need one?"
    ],
    "pageId": 28
  },
  {
    "content": "WARNING: Using _default configset. Data driven schema functionality is enabled by default, which\nis\nÊ        NOT RECOMMENDED for production use.",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "Ê        To turn it off:\nÊ           curl http://localhost:7574/solr/films/config -d '{\"set-user-property\":\n{\"update.autoCreateFields\":\"false\"}}'",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "Connecting to ZooKeeper at localhost:9983 ...\nINFO  - 2017-07-27 15:07:46.191; org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider;\nCluster at localhost:9983 ready\nUploading /7.3.0/server/solr/configsets/_default/conf for config films to ZooKeeper at\nlocalhost:9983",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "Creating new collection 'films' using command:\nhttp://localhost:7574/solr/admin/collections?action=CREATE&name=films&numShards=2&replicationFact\nor=2&maxShardsPerNode=2&collection.configName=films",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "{\nÊ \"responseHeader\":{\nÊ   \"status\":0,\nÊ   \"QTime\":3830},\nÊ \"success\":{\nÊ   \"192.168.0.110:8983_solr\":{\nÊ     \"responseHeader\":{\nÊ       \"status\":0,\nÊ       \"QTime\":2076},\nÊ     \"core\":\"films_shard2_replica_n1\"},\nÊ   \"192.168.0.110:7574_solr\":{\nÊ     \"responseHeader\":{\nÊ       \"status\":0,\nÊ       \"QTime\":2494},\nÊ     \"core\":\"films_shard1_replica_n2\"}}}",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "The first thing the command printed was a warning about not using this configSet in production. That's due\nto some of the limitations we’ll cover shortly.",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "Otherwise, though, the collection should be created. If we go to the Admin UI at <span class=\"link\">http://localhost:8983/solr/#</span>\n/films/collection-overview<span class=\"fc0\"> we should see the overview screen.</span>",
    "hierarchy": [
    ],
    "pageId": 29
  },
  {
    "content": "There are two parallel things happening with the schema that comes with the <span class=\"ff1 fs1\">_default</span> configSet.",
    "hierarchy": [
      "Preparing Schemaless for the Films Data"
    ],
    "pageId": 29
  },
  {
    "content": "First, we are using a \"managed schema\", which is configured to only be modified by Solr's Schema API. That\nmeans we should not hand-edit it so there isn’t confusion about which edits come from which source. Solr’s\nSchema API allows us to make changes to fields, field types, and other types of schema rules.",
    "hierarchy": [
      "Preparing Schemaless for the Films Data"
    ],
    "pageId": 29
  },
  {
    "content": "Second, we are using \"field guessing\", which is configured in the <span class=\"ff1 fs1\">solrconfig.xml</span> file (and includes most of\nSolr's various configuration settings). Field guessing is designed to allow us to start using Solr without\nhaving to define all the fields we think will be in our documents before trying to index them. This is why we",
    "hierarchy": [
      "Preparing Schemaless for the Films Data"
    ],
    "pageId": 29
  },
  {
    "content": "call it \"schemaless\", because you can start quickly and let Solr create fields for you as it encounters them in\ndocuments.",
    "hierarchy": [
    ],
    "pageId": 30
  },
  {
    "content": "Sounds great! Well, not really, there are limitations. It's a bit brute force, and if it guesses wrong, you can’t\nchange much about a field after data has been indexed without having to reindex. If we only have a few\nthousand documents that might not be bad, but if you have millions and millions of documents, or, worse,\ndon’t have access to the original data anymore, this can be a real problem.",
    "hierarchy": [
    ],
    "pageId": 30
  },
  {
    "content": "For these reasons, the Solr community does not recommend going to production without a schema that you\nhave defined yourself. By this we mean that the schemaless features are fine to start with, but you should\nstill always make sure your schema matches your expectations for how you want your data indexed and how\nusers are going to query it.",
    "hierarchy": [
    ],
    "pageId": 30
  },
  {
    "content": "It is possible to mix schemaless features with a defined schema. Using the Schema API, you can define a few\nfields that you know you want to control, and let Solr guess others that are less important or which you are\nconfident (through testing) will be guessed to your satisfaction. That's what we’re going to do here.",
    "hierarchy": [
    ],
    "pageId": 30
  },
  {
    "content": "The films data we are going to index has a small number of fields for each movie: an ID, director name(s),\nfilm name, release date, and genre(s).",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "If you look at one of the files in <span class=\"code\">example/films</span>, you'll see the first film is named <span class=\"ff4\">.45</span>, released in 2006. As the\nfirst document in the dataset, Solr is going to guess the field type based on the data in the record. If we go\nahead and index this data, that first film name is going to indicate to Solr that that field type is a \"float\"\nnumeric field, and will create a \"name\" field with a type <span class=\"code\">FloatPointField</span>. All data after this record will be\nexpected to be a float.",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "Well, that's not going to work. We have titles like <span class=\"ff4\">A Mighty Wind</span> and <span class=\"ff4\">Chicken Run</span>, which are strings -\ndecidedly not numeric and not floats. If we let Solr guess the \"name\" field is a float, what will happen is later\ntitles will cause an error and indexing will fail. That’s not going to get us very far.",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "What we can do is set up the \"name\" field in Solr before we index the data to be sure Solr always interprets\nit as a string. At the command line, enter this curl command:",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "curl -X POST -H 'Content-type:application/json' --data-binary '{\"add-field\": {\"name\":\"name\",\n\"type\":\"text_general\", \"multiValued\":false, \"stored\":true}}'\nhttp://localhost:8983/solr/films/schema",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "This command uses the Schema API to explicitly define a field named \"name\" that has the field type\n\"text_general\" (a text field). It will not be permitted to have multiple values, but it will be stored (meaning it\ncan be retrieved by queries).",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "You can also use the Admin UI to create fields, but it offers a bit less control over the properties of your field.\nIt will work for our case, though:",
    "hierarchy": [
      "Create the \"names\" Field"
    ],
    "pageId": 30
  },
  {
    "content": "There's one more change to make before we start indexing.",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "In the first exercise when we queried the documents we had indexed, we didn't have to specify a field to\nsearch because the configuration we used was set up to copy fields into a <span class=\"ff4 fs2\">text</span> field, and that field was the\ndefault when no other field was defined in the query.",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "The configuration we're using now doesn’t have that rule. We would need to define a field to search for\nevery query. We can, however, set up a \"catchall field\" by defining a copy field that will take all data from all\nfields and index it into a field named <span class=\"ff4 fs2\">_text_</span>. Let’s do that now.",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "You can use either the Admin UI or the Schema API for this.",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "At the command line, use the Schema API again to define a copy field:",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "curl -X POST -H 'Content-type:application/json' --data-binary '{\"add-copy-field\" :\n{\"source\":\"*\",\"dest\":\"_text_\"}}' http://localhost:8983/solr/films/schema",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "In the Admin UI, choose <span class=\"ff2\">[<span class=\"ff5\"> </span>Add Copy Field<span class=\"ff5\"> </span>]</span>, then fill out the source and destination for your field, as in this\nscreenshot.",
    "hierarchy": [
      "Create a \"catchall\" Copy Field"
    ],
    "pageId": 31
  },
  {
    "content": "What this does is make a copy of all fields and put the data into the \"_text_\" field.",
    "hierarchy": [
    ],
    "pageId": 32
  },
  {
    "content": "It can be very expensive to do this with your production data because it tells Solr to\neffectively index everything twice. It will make indexing slower, and make your index larger.\nWith your production data, you will want to be sure you only copy fields that really warrant\nit for your application.",
    "hierarchy": [
    ],
    "pageId": 32
  },
  {
    "content": "OK, now we're ready to index the data and start playing around with it.",
    "hierarchy": [
    ],
    "pageId": 32
  },
  {
    "content": "The films data we will index is located in the <span class=\"ff5 fs3\">example/films</span> directory of your installation. It comes in three\nformats: JSON, XML and CSV. Pick one of the formats and index it into the \"films\" collection (in each\nexample, one command is for Unix/MacOS and the other is for Windows):",
    "hierarchy": [
      "Index Sample Film Data"
    ],
    "pageId": 32
  },
  {
    "content": "bin/post -c films example/films/films.json",
    "hierarchy": [
      "Index Sample Film Data"
    ],
    "pageId": 32
  },
  {
    "content": "C:\\solr-7.3.0> java -jar -Dc=films -Dauto example\\exampledocs\\post.jar example\\films\\*.json",
    "hierarchy": [
      "Index Sample Film Data"
    ],
    "pageId": 32
  },
  {
    "content": "bin/post -c films example/films/films.xml",
    "hierarchy": [
      "Index Sample Film Data"
    ],
    "pageId": 32
  },
  {
    "content": "C:\\solr-7.3.0> java -jar -Dc=films -Dauto example\\exampledocs\\post.jar example\\films\\*.xml",
    "hierarchy": [
      "Index Sample Film Data"
    ],
    "pageId": 32
  },
  {
    "content": "bin/post -c films example/films/films.csv -params\n\"f.genre.split=true&f.directed_by.split=true&f.genre.separator=|&f.directed_by.separator=|\"",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "C:\\solr-7.3.0> java -jar -Dc=films\n-Dparams=f.genre.split=true&f.directed_by.split=true&f.genre.separator=|&f.directed_by.separator=\n| -Dauto example\\exampledocs\\post.jar example\\films\\*.csv",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "Each command includes these main parameters:",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "-c films: this is the Solr collection to index data to.",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "example/films/films.json (or <span class=\"ff2 fs1\">films.xml</span> or <span class=\"ff2 fs1\">films.csv</span>): this is the path to the data file to index. You\ncould simply supply the directory where this file resides, but since you know the format you want to\nindex, specifying the exact file for that format is more efficient.",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "Note the CSV command includes extra parameters. This is to ensure multi-valued entries in the \"genre\" and\n\"directed_by\" columns are split by the pipe (<span class=\"ff2 fs1\">|</span>) character, used in this file as a separator. Telling Solr to split\nthese columns this way will ensure proper indexing of the data.",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "Each command will produce output similar to the below seen while indexing JSON:",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "$ ./bin/post -c films example/films/films.json\n/bin/java -classpath /solr-7.3.0/dist/solr-core-7.3.0.jar -Dauto=yes -Dc=films -Ddata=files\norg.apache.solr.util.SimplePostTool example/films/films.json\nSimplePostTool version 5.0.0\nPosting files to [base] url http://localhost:8983/solr/films/update...\nEntering auto mode. File endings considered are\nxml,json,jsonl,csv,pdf,doc,docx,ppt,pptx,xls,xlsx,odt,odp,ods,ott,otp,ots,rtf,htm,html,txt,log\nPOSTing file films.json (application/json) to [base]/json/docs\n1 files indexed.\nCOMMITting Solr index changes to http://localhost:8983/solr/films/update...\nTime spent: 0:00:00.878",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "Hooray!",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "If you go to the Query screen in the Admin UI for films (<span class=\"link\">http://localhost:8983/solr/#/films/query</span>) and hit\n[<span class=\"ff5\"> </span>Execute Query<span class=\"ff5\"> </span>]<span class=\"code\"> you should see 1100 results, with the first 10 returned to the screen.</span>",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "Let's do a query to see if the \"catchall\" field worked properly. Enter \"comedy\" in the <span class=\"ff2 fs1\">q</span> box and hit <span class=\"ff4\">[<span class=\"ff5\"> </span>Execute</span>\nQuery<span class=\"ff5\"> </span>]<span class=\"code\"> again. You should see get 417 results. Feel free to play around with other searches before we move</span>\non to faceting.",
    "hierarchy": [
    ],
    "pageId": 33
  },
  {
    "content": "One of Solr's most popular features is faceting. Faceting allows the search results to be arranged into\nsubsets (or buckets, or categories), providing a count for each subset. There are several types of faceting:\nfield values, numeric and date ranges, pivots (decision tree), and arbitrary query faceting.",
    "hierarchy": [
      "Faceting"
    ],
    "pageId": 33
  },
  {
    "content": "In addition to providing search results, a Solr query can return the number of documents that contain each\nunique value in the whole result set.",
    "hierarchy": [
      "Field Facets"
    ],
    "pageId": 34
  },
  {
    "content": "On the Admin UI Query tab, if you check the <span class=\"code\">facet</span> checkbox, you'll see a few facet-related options appear:",
    "hierarchy": [
      "Field Facets"
    ],
    "pageId": 34
  },
  {
    "content": "To see facet counts from all documents (<span class=\"code\">q=*:*</span>): turn on faceting (<span class=\"code\">facet=true</span>), and specify the field to facet\non via the <span class=\"code\">facet.field</span> param. If you only want facets, and no document contents, specify <span class=\"code\">rows=0</span>. The <span class=\"code\">curl</span>\ncommand below will return facet counts for the <span class=\"code\">genre_str</span> field:",
    "hierarchy": [
      "Field Facets"
    ],
    "pageId": 34
  },
  {
    "content": "curl \"http://localhost:8983/solr/films/select?q=*:*&rows=0&facet=true&facet.field=genre_str\"",
    "hierarchy": [
      "Field Facets"
    ],
    "pageId": 34
  },
  {
    "content": "In your terminal, you'll see something like:",
    "hierarchy": [
      "Field Facets"
    ],
    "pageId": 34
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">11</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"*:*\"</span>,\nÊ     <span class=\"fc1\">\"facet.field\"</span>:<span class=\"fc4\">\"genre_str\"</span>,\nÊ     <span class=\"fc1\">\"rows\"</span>:<span class=\"fc4\">\"0\"</span>,\nÊ     <span class=\"fc1\">\"facet\"</span>:<span class=\"fc4\">\"true\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">1100</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">1.0</span>,<span class=\"fc1\">\"docs\"</span>:[]\nÊ },\nÊ <span class=\"fc1\">\"facet_counts\"</span>:{\nÊ   <span class=\"fc1\">\"facet_queries\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_fields\"</span>:{\nÊ     <span class=\"fc1\">\"genre_str\"</span>:[\nÊ       <span class=\"fc4\">\"Drama\"</span>,<span class=\"fc3\">552</span>,\nÊ       <span class=\"fc4\">\"Comedy\"</span>,<span class=\"fc3\">389</span>,\nÊ       <span class=\"fc4\">\"Romance Film\"</span>,<span class=\"fc3\">270</span>,\nÊ       <span class=\"fc4\">\"Thriller\"</span>,<span class=\"fc3\">259</span>,\nÊ       <span class=\"fc4\">\"Action Film\"</span>,<span class=\"fc3\">196</span>,\nÊ       <span class=\"fc4\">\"Crime Fiction\"</span>,<span class=\"fc3\">170</span>,\nÊ       <span class=\"fc4\">\"World cinema\"</span>,<span class=\"fc3\">167</span>]},\nÊ       <span class=\"fc1\">\"facet_ranges\"</span>:{},\nÊ       <span class=\"fc1\">\"facet_intervals\"</span>:{},\nÊ       <span class=\"fc1\">\"facet_heatmaps\"</span>:{}}}",
    "hierarchy": [
    ],
    "pageId": 35
  },
  {
    "content": "We've truncated the output here a little bit, but in the <span class=\"ff1 fs1\">facet_counts</span> section, you see by default you get a\ncount of the number of documents using each genre for every genre in the index. Solr has a parameter\nfacet.mincount<span class=\"ff2 fs0\"> that you could use to limit the facets to only those that contain a certain number of</span>\ndocuments (this parameter is not shown in the UI). Or, perhaps you do want all the facets, and you’ll let your\napplication’s front-end control how it’s displayed to users.",
    "hierarchy": [
    ],
    "pageId": 35
  },
  {
    "content": "If you wanted to control the number of items in a bucket, you could do something like this:",
    "hierarchy": [
    ],
    "pageId": 35
  },
  {
    "content": "curl\n\"http://localhost:8983/solr/films/select?=&q=*:*&facet.field=genre_str&facet.mincount=200&fa\ncet=on&rows=0\"",
    "hierarchy": [
    ],
    "pageId": 35
  },
  {
    "content": "You should only see 4 facets returned.",
    "hierarchy": [
    ],
    "pageId": 35
  },
  {
    "content": "There are a great deal of other parameters available to help you control how Solr constructs the facets and\nfacet lists. We'll cover some of them in this exercise, but you can also see the section <span class=\"link\">Faceting</span> for more\ndetail.",
    "hierarchy": [
    ],
    "pageId": 35
  },
  {
    "content": "For numerics or dates, it's often desirable to partition the facet counts into ranges rather than discrete\nvalues. A prime example of numeric range faceting, using the example techproducts data from our previous\nexercise, is <span class=\"ff1 fs1\">price</span>. In the <span class=\"ff1 fs1\">/browse</span> UI, it looks like this:",
    "hierarchy": [
      "Range Facets"
    ],
    "pageId": 35
  },
  {
    "content": "The films data includes the release date for films, and we could use that to create date range facets, which\nare another common use for range facets.",
    "hierarchy": [
    ],
    "pageId": 36
  },
  {
    "content": "The Solr Admin UI doesn't yet support range facet options, so you will need to use curl or similar command\nline tool for the following examples.",
    "hierarchy": [
    ],
    "pageId": 36
  },
  {
    "content": "If we construct a query that looks like this:",
    "hierarchy": [
    ],
    "pageId": 36
  },
  {
    "content": "curl 'http://localhost:8983/solr/films/select?q=*:*&rows=0'\\\nÊ   '&facet=true'\\\nÊ   '&facet.range=initial_release_date'\\\nÊ   '&facet.range.start=NOW-20YEAR'\\\nÊ   '&facet.range.end=NOW'\\\nÊ   '&facet.range.gap=%2B1YEAR'",
    "hierarchy": [
    ],
    "pageId": 36
  },
  {
    "content": "This will request all films and ask for them to be grouped by year starting with 20 years ago (our earliest\nrelease date is in 2000) and ending today. Note that this query again URL encodes a <span class=\"code\">+</span> as <span class=\"code\">%2B</span>.",
    "hierarchy": [
    ],
    "pageId": 36
  },
  {
    "content": "In the terminal you will see:",
    "hierarchy": [
    ],
    "pageId": 36
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">8</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"facet.range\"</span>:<span class=\"fc4\">\"initial_release_date\"</span>,\nÊ     <span class=\"fc1\">\"facet.limit\"</span>:<span class=\"fc4\">\"300\"</span>,\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"*:*\"</span>,\nÊ     <span class=\"fc1\">\"facet.range.gap\"</span>:<span class=\"fc4\">\"+1YEAR\"</span>,\nÊ     <span class=\"fc1\">\"rows\"</span>:<span class=\"fc4\">\"0\"</span>,\nÊ     <span class=\"fc1\">\"facet\"</span>:<span class=\"fc4\">\"on\"</span>,\nÊ     <span class=\"fc1\">\"facet.range.start\"</span>:<span class=\"fc4\">\"NOW-20YEAR\"</span>,\nÊ     <span class=\"fc1\">\"facet.range.end\"</span>:<span class=\"fc4\">\"NOW\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">1100</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">1.0</span>,<span class=\"fc1\">\"docs\"</span>:[]\nÊ },\nÊ <span class=\"fc1\">\"facet_counts\"</span>:{\nÊ   <span class=\"fc1\">\"facet_queries\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_fields\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_ranges\"</span>:{\nÊ     <span class=\"fc1\">\"initial_release_date\"</span>:{\nÊ       <span class=\"fc1\">\"counts\"</span>:[\nÊ         <span class=\"fc4\">\"1997-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc4\">\"1998-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc4\">\"1999-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">48</span>,\nÊ         <span class=\"fc4\">\"2000-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">82</span>,\nÊ         <span class=\"fc4\">\"2001-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">103</span>,\nÊ         <span class=\"fc4\">\"2002-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">131</span>,\nÊ         <span class=\"fc4\">\"2003-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">137</span>,\nÊ         <span class=\"fc4\">\"2004-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">163</span>,\nÊ         <span class=\"fc4\">\"2005-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">189</span>,\nÊ         <span class=\"fc4\">\"2006-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">92</span>,\nÊ         <span class=\"fc4\">\"2007-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">26</span>,\nÊ         <span class=\"fc4\">\"2008-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">7</span>,\nÊ         <span class=\"fc4\">\"2009-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">3</span>,\nÊ         <span class=\"fc4\">\"2010-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc4\">\"2011-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc4\">\"2012-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">1</span>,\nÊ         <span class=\"fc4\">\"2013-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">1</span>,\nÊ         <span class=\"fc4\">\"2014-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">1</span>,\nÊ         <span class=\"fc4\">\"2015-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc4\">\"2016-07-28T17:12:06.919Z\"</span>,<span class=\"fc3\">0</span>],\nÊ       <span class=\"fc1\">\"gap\"</span>:<span class=\"fc4\">\"+1YEAR\"</span>,\nÊ       <span class=\"fc1\">\"start\"</span>:<span class=\"fc4\">\"1997-07-28T17:12:06.919Z\"</span>,\nÊ       <span class=\"fc1\">\"end\"</span>:<span class=\"fc4\">\"2017-07-28T17:12:06.919Z\"</span>}},\nÊ   <span class=\"fc1\">\"facet_intervals\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_heatmaps\"</span>:{}}}",
    "hierarchy": [
    ],
    "pageId": 37
  },
  {
    "content": "Another faceting type is pivot facets, also known as \"decision trees\", allowing two or more fields to be",
    "hierarchy": [
      "Pivot Facets"
    ],
    "pageId": 37
  },
  {
    "content": "nested for all the various possible combinations. Using the films data, pivot facets can be used to see how\nmany of the films in the \"Drama\" category (the <span class=\"ff2 fs1\">genre_str</span> field) are directed by a director. Here's how to get\nat the raw data for this scenario:",
    "hierarchy": [
    ],
    "pageId": 38
  },
  {
    "content": "curl\n\"http://localhost:8983/solr/films/select?q=*:*&rows=0&facet=on&facet.pivot=genre_str,directe\nd_by_str\"",
    "hierarchy": [
    ],
    "pageId": 38
  },
  {
    "content": "This results in the following response, which shows a facet for each category and director combination:",
    "hierarchy": [
    ],
    "pageId": 38
  },
  {
    "content": "{<span class=\"fc1\">\"responseHeader\"</span>:{\nÊ   <span class=\"fc1\">\"zkConnected\"</span>:<span class=\"fc2\">true</span>,\nÊ   <span class=\"fc1\">\"status\"</span>:<span class=\"fc3\">0</span>,\nÊ   <span class=\"fc1\">\"QTime\"</span>:<span class=\"fc3\">1147</span>,\nÊ   <span class=\"fc1\">\"params\"</span>:{\nÊ     <span class=\"fc1\">\"q\"</span>:<span class=\"fc4\">\"*:*\"</span>,\nÊ     <span class=\"fc1\">\"facet.pivot\"</span>:<span class=\"fc4\">\"genre_str,directed_by_str\"</span>,\nÊ     <span class=\"fc1\">\"rows\"</span>:<span class=\"fc4\">\"0\"</span>,\nÊ     <span class=\"fc1\">\"facet\"</span>:<span class=\"fc4\">\"on\"</span>}},\nÊ <span class=\"fc1\">\"response\"</span>:{<span class=\"fc1\">\"numFound\"</span>:<span class=\"fc3\">1100</span>,<span class=\"fc1\">\"start\"</span>:<span class=\"fc3\">0</span>,<span class=\"fc1\">\"maxScore\"</span>:<span class=\"fc3\">1.0</span>,<span class=\"fc1\">\"docs\"</span>:[]\nÊ },\nÊ <span class=\"fc1\">\"facet_counts\"</span>:{\nÊ   <span class=\"fc1\">\"facet_queries\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_fields\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_ranges\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_intervals\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_heatmaps\"</span>:{},\nÊ   <span class=\"fc1\">\"facet_pivot\"</span>:{\nÊ     <span class=\"fc1\">\"genre_str,directed_by_str\"</span>:[{\nÊ         <span class=\"fc1\">\"field\"</span>:<span class=\"fc4\">\"genre_str\"</span>,\nÊ         <span class=\"fc1\">\"value\"</span>:<span class=\"fc4\">\"Drama\"</span>,\nÊ         <span class=\"fc1\">\"count\"</span>:<span class=\"fc3\">552</span>,\nÊ         <span class=\"fc1\">\"pivot\"</span>:[{\nÊ             <span class=\"fc1\">\"field\"</span>:<span class=\"fc4\">\"directed_by_str\"</span>,\nÊ             <span class=\"fc1\">\"value\"</span>:<span class=\"fc4\">\"Ridley Scott\"</span>,\nÊ             <span class=\"fc1\">\"count\"</span>:<span class=\"fc3\">5</span>},\nÊ           {\nÊ             <span class=\"fc1\">\"field\"</span>:<span class=\"fc4\">\"directed_by_str\"</span>,\nÊ             <span class=\"fc1\">\"value\"</span>:<span class=\"fc4\">\"Steven Soderbergh\"</span>,\nÊ             <span class=\"fc1\">\"count\"</span>:<span class=\"fc3\">5</span>},\nÊ           {\nÊ             <span class=\"fc1\">\"field\"</span>:<span class=\"fc4\">\"directed_by_str\"</span>,\nÊ             <span class=\"fc1\">\"value\"</span>:<span class=\"fc4\">\"Michael Winterbottom\"</span>,\nÊ             <span class=\"fc1\">\"count\"</span>:<span class=\"fc3\">4</span>}}]}]}}}",
    "hierarchy": [
    ],
    "pageId": 38
  },
  {
    "content": "We've truncated this output as well - you will see a lot of genres and directors in your screen.",
    "hierarchy": [
    ],
    "pageId": 38
  },
  {
    "content": "In this exercise, we learned a little bit more about how Solr organizes data in the indexes, and how to work\nwith the Schema API to manipulate the schema file. We also learned a bit about facets in Solr, including",
    "hierarchy": [
      "Exercise 2 Wrap Up"
    ],
    "pageId": 38
  },
  {
    "content": "range facets and pivot facets. In both of these things, we've only scratched the surface of the available\noptions. If you can dream it, it might be possible!",
    "hierarchy": [
    ],
    "pageId": 39
  },
  {
    "content": "Like our previous exercise, this data may not be relevant to your needs. We can clean up our work by\ndeleting the collection. To do that, issue this command at the command line:",
    "hierarchy": [
    ],
    "pageId": 39
  },
  {
    "content": "bin/solr delete -c films",
    "hierarchy": [
    ],
    "pageId": 39
  },
  {
    "content": "For this last exercise, work with a dataset of your choice. This can be files on your local hard drive, a set of\ndata you have worked with before, or maybe a sample of the data you intend to index to Solr for your\nproduction application.",
    "hierarchy": [
      "Exercise 3: Index Your Own Data"
    ],
    "pageId": 39
  },
  {
    "content": "This exercise is intended to get you thinking about what you will need to do for your application:",
    "hierarchy": [
      "Exercise 3: Index Your Own Data"
    ],
    "pageId": 39
  },
  {
    "content": "What sorts of data do you need to index?",
    "hierarchy": [
      "Exercise 3: Index Your Own Data"
    ],
    "pageId": 39
  },
  {
    "content": "What will you need to do to prepare Solr for your data (such as, create specific fields, set up copy fields,\ndetermine analysis rules, etc.)",
    "hierarchy": [
      "Exercise 3: Index Your Own Data"
    ],
    "pageId": 39
  },
  {
    "content": "What kinds of search options do you want to provide to users?",
    "hierarchy": [
      "Exercise 3: Index Your Own Data"
    ],
    "pageId": 39
  },
  {
    "content": "How much testing will you need to do to ensure everything works the way you expect?",
    "hierarchy": [
      "Exercise 3: Index Your Own Data"
    ],
    "pageId": 39
  },
  {
    "content": "Before you get started, create a new collection, named whatever you'd like. In this example, the collection\nwill be named \"localDocs\"; replace that name with whatever name you choose if you want to.",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Create Your Own Collection"
    ],
    "pageId": 39
  },
  {
    "content": "./bin/solr create -c localDocs -s 2 -rf 2",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Create Your Own Collection"
    ],
    "pageId": 39
  },
  {
    "content": "Again, as we saw from Exercise 2 above, this will use the <span class=\"ff2 fs1\">_default</span> configSet and all the schemaless features\nit provides. As we noted previously, this may cause problems when we index our data. You may need to\niterate on indexing a few times before you get the schema right.",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Create Your Own Collection"
    ],
    "pageId": 39
  },
  {
    "content": "Solr has lots of ways to index data. Choose one of the approaches below and try it out with your system:",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Indexing Ideas"
    ],
    "pageId": 39
  },
  {
    "content": "Local Files with bin/post\nIf you have a local directory of files, the Post Tool (<span class=\"ff2 fs1\">bin/post</span>) can index a directory of files. We saw this in\naction in our first exercise.",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Indexing Ideas"
    ],
    "pageId": 39
  },
  {
    "content": "We used only JSON, XML and CSV in our exercises, but the Post Tool can also handle HTML, PDF, Microsoft\nOffice formats (such as MS Word), plain text, and more.",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Indexing Ideas"
    ],
    "pageId": 39
  },
  {
    "content": "In this example, assume there is a directory named \"Documents\" locally. To index it, we would issue a\ncommand like this (correcting the collection name after the <span class=\"ff2 fs1\">-c</span> parameter as needed):",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Indexing Ideas"
    ],
    "pageId": 39
  },
  {
    "content": "./bin/post -c localDocs ~/Documents",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Indexing Ideas"
    ],
    "pageId": 39
  },
  {
    "content": "You may get errors as it works through your documents. These might be caused by the field guessing, or\nthe file type may not be supported. Indexing content such as this demonstrates the need to plan Solr for",
    "hierarchy": [
      "Exercise 3: Index Your Own Data",
      "Indexing Ideas"
    ],
    "pageId": 39
  },
  {
    "content": "your data, which requires understanding it and perhaps also some trial and error.",
    "hierarchy": [
    ],
    "pageId": 40
  },
  {
    "content": "DataImportHandler\nSolr includes a tool called the <span class=\"link\">Data Import Handler (DIH)</span> which can connect to databases (if you have a\njdbc driver), mail servers, or other structured data sources. There are several examples included for\nfeeds, GMail, and a small HSQL database.",
    "hierarchy": [
    ],
    "pageId": 40
  },
  {
    "content": "The <span class=\"code\">README.txt</span> file in <span class=\"code\">example/example-DIH</span> will give you details on how to start working with this tool.",
    "hierarchy": [
    ],
    "pageId": 40
  },
  {
    "content": "SolrJ\nSolrJ is a Java-based client for interacting with Solr. Use <span class=\"link\">SolrJ</span> for JVM-based languages or other <span class=\"link\">Solr clients</span>\nto programmatically create documents to send to Solr.",
    "hierarchy": [
    ],
    "pageId": 40
  },
  {
    "content": "Documents Screen\nUse the Admin UI <span class=\"link\">Documents tab</span> (at <span class=\"link\">http://localhost:8983/solr/#/localDocs/documents</span>) to paste in a\ndocument to be indexed, or select <span class=\"code\">Document Builder</span> from the <span class=\"code\">Document Type</span> dropdown to build a\ndocument one field at a time. Click on the <span class=\"ff2\">[<span class=\"ff4\"> </span>Submit Document<span class=\"ff4\"> </span>]</span> button below the form to index your\ndocument.",
    "hierarchy": [
    ],
    "pageId": 40
  },
  {
    "content": "You may notice that even if you index content in this tutorial more than once, it does not duplicate the\nresults found. This is because the example Solr schema (a file named either <span class=\"code\">managed-schema</span> or <span class=\"code\">schema.xml</span>)\nspecifies a <span class=\"code\">uniqueKey</span> field called <span class=\"code\">id</span>. Whenever you POST commands to Solr to add a document with the\nsame value for the <span class=\"code\">uniqueKey</span> as an existing document, it automatically replaces it for you.",
    "hierarchy": [
      "Updating Data"
    ],
    "pageId": 40
  },
  {
    "content": "You can see that that has happened by looking at the values for <span class=\"code\">numDocs</span> and <span class=\"code\">maxDoc</span> in the core-specific\nOverview section of the Solr Admin UI.",
    "hierarchy": [
      "Updating Data"
    ],
    "pageId": 40
  },
  {
    "content": "numDocs<span class=\"ff1 fs0\"> represents the number of searchable documents in the index (and will be larger than the number</span>\nof XML, JSON, or CSV files since some files contained more than one document). The <span class=\"code\">maxDoc</span> value may be\nlarger as the <span class=\"code\">maxDoc</span> count includes logically deleted documents that have not yet been physically removed\nfrom the index. You can re-post the sample files over and over again as much as you want and <span class=\"code\">numDocs</span> will\nnever increase, because the new documents will constantly be replacing the old.",
    "hierarchy": [
      "Updating Data"
    ],
    "pageId": 40
  },
  {
    "content": "Go ahead and edit any of the existing example data files, change some of the data, and re-run the PostTool\n(<span class=\"code\">bin/post</span>). You'll see your changes reflected in subsequent searches.",
    "hierarchy": [
      "Updating Data"
    ],
    "pageId": 40
  },
  {
    "content": "If you need to iterate a few times to get your schema right, you may want to delete documents to clear out\nthe collection and try again. Note, however, that merely removing documents doesn't change the\nunderlying field definitions. Essentially, this will allow you to reindex your data after making changes to\nfields for your needs.",
    "hierarchy": [
      "Deleting Data"
    ],
    "pageId": 40
  },
  {
    "content": "You can delete data by POSTing a delete command to the update URL and specifying the value of the\ndocument's unique key field, or a query that matches multiple documents (be careful with that one!). We\ncan use <span class=\"code\">bin/post</span> to delete documents also if we structure the request properly.",
    "hierarchy": [
      "Deleting Data"
    ],
    "pageId": 40
  },
  {
    "content": "Execute the following command to delete a specific document:",
    "hierarchy": [
      "Deleting Data"
    ],
    "pageId": 40
  },
  {
    "content": "bin/post -c localDocs -d \"<delete><id>SP2514N</id></delete>\"",
    "hierarchy": [
    ],
    "pageId": 41
  },
  {
    "content": "To delete all documents, you can use \"delete-by-query\" command like:",
    "hierarchy": [
    ],
    "pageId": 41
  },
  {
    "content": "bin/post -c localDocs -d \"<delete><query>*:*</query></delete>\"",
    "hierarchy": [
    ],
    "pageId": 41
  },
  {
    "content": "You can also modify the above to only delete documents that match a specific query.",
    "hierarchy": [
    ],
    "pageId": 41
  },
  {
    "content": "At this point, you're ready to start working on your own.",
    "hierarchy": [
      "Exercise 3 Wrap Up"
    ],
    "pageId": 41
  },
  {
    "content": "Jump ahead to the overall <span class=\"link\">wrap up</span> when you're ready to stop Solr and remove all the examples you worked\nwith and start fresh.",
    "hierarchy": [
      "Exercise 3 Wrap Up"
    ],
    "pageId": 41
  },
  {
    "content": "Solr has sophisticated geospatial support, including searching within a specified distance range of a given\nlocation (or within a bounding box), sorting by distance, or even boosting results by the distance.",
    "hierarchy": [
      "Spatial Queries"
    ],
    "pageId": 41
  },
  {
    "content": "Some of the example techproducts documents we indexed in Exercise 1 have locations associated with them\nto illustrate the spatial capabilities. To re-index this data, see <span class=\"link\">Exercise 1</span>.",
    "hierarchy": [
      "Spatial Queries"
    ],
    "pageId": 41
  },
  {
    "content": "Spatial queries can be combined with any other types of queries, such as in this example of querying for\n\"ipod\" within 10 kilometers from San Francisco:",
    "hierarchy": [
      "Spatial Queries"
    ],
    "pageId": 41
  },
  {
    "content": "This is from Solr's example search UI (called <span class=\"ff1 fs0\">/browse</span>), which has a nice feature to show a map for each item\nand allow easy selection of the location to search near. You can see this yourself by going to\nhttp://localhost:8983/solr/techproducts/browse?q=ipod&pt=37.7752%2C-122.4232&d=10&sfield=store&\nfq=%7B%21bbox%7D&queryOpts=spatial&queryOpts=spatial<span class=\"fc0\"> in a browser.</span>",
    "hierarchy": [
      "Spatial Queries"
    ],
    "pageId": 41
  },
  {
    "content": "To learn more about Solr's spatial capabilities, see the section <span class=\"link\">Spatial Search</span>.",
    "hierarchy": [
      "Spatial Queries"
    ],
    "pageId": 41
  },
  {
    "content": "If you've run the full set of commands in this quick start guide you have done the following:",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "Launched Solr into SolrCloud mode, two nodes, two collections including shards and replicas",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "Indexed several types of files",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "Used the Schema API to modify your schema",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "Opened the admin console, used its query interface to get results",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "Opened the /browse interface to explore Solr's features in a more friendly and familiar interface",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "Nice work!",
    "hierarchy": [
      "Wrapping Up"
    ],
    "pageId": 42
  },
  {
    "content": "As you work through this tutorial, you may want to stop Solr and reset the environment back to the starting\npoint. The following command line will stop Solr and remove the directories for each of the two nodes that\nwere created all the way back in Exercise 1:",
    "hierarchy": [
      "Cleanup"
    ],
    "pageId": 42
  },
  {
    "content": "bin/solr stop -all ; rm -Rf example/cloud/",
    "hierarchy": [
      "Cleanup"
    ],
    "pageId": 42
  },
  {
    "content": "This Guide will be your best resource for learning more about Solr.",
    "hierarchy": [
      "Where to next?"
    ],
    "pageId": 42
  },
  {
    "content": "Solr also has a robust community made up of people happy to help you get started. For more information,\ncheck out the Solr website's <span class=\"link\">Resources page</span>.",
    "hierarchy": [
      "Where to next?"
    ],
    "pageId": 42
  },
  {
    "content": "Solr is a search server built on top of Apache Lucene, an open source, Java-based, information retrieval\nlibrary. It is designed to drive powerful document retrieval applications - wherever you need to serve data to\nusers based on their queries, Solr can work for you.",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "Here is a example of how Solr could integrate with an application:",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "In the scenario above, Solr runs alongside other server applications. For example, an online store application\nwould provide a user interface, a shopping cart, and a way to make purchases for end users; while an\ninventory management application would allow store employees to edit product information. The product\nmetadata would be kept in some kind of database, as well as in Solr.",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "Solr makes it easy to add the capability to search through the online store through the following steps:",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "1.Define a <span class=\"code\">schema</span>. The schema tells Solr about the contents of documents it will be indexing. In the online\nstore example, the schema would define fields for the product name, description, price, manufacturer,\nand so on. Solr's schema is powerful and flexible and allows you to tailor Solr’s behavior to your\napplication. See <span class=\"link\">Documents, Fields, and Schema Design</span> for all the details.",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "2.Feed Solr documents for which your users will search.\n3.Expose search functionality in your application.",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "Because Solr is based on open standards, it is highly extensible. Solr queries are simple HTTP request URLs\nand the response is a structured document: mainly JSON, but it could also be XML, CSV, or other formats.\nThis means that a wide variety of clients will be able to use Solr, from other web applications to browser\nclients, rich client applications, and mobile devices. Any platform capable of HTTP can talk to Solr. See <span class=\"link\">Client</span>\nAPIs<span class=\"fc1\"> for details on client APIs.</span>",
    "hierarchy": [
      "A Quick Overview"
    ],
    "pageId": 43
  },
  {
    "content": "Solr offers support for the simplest keyword searching through to complex queries on multiple fields and\nfaceted search results. <span class=\"link\">Searching</span> has more information about searching and queries.",
    "hierarchy": [
    ],
    "pageId": 44
  },
  {
    "content": "If Solr's capabilities are not impressive enough, its ability to handle very high-volume applications should do\nthe trick.",
    "hierarchy": [
    ],
    "pageId": 44
  },
  {
    "content": "A relatively common scenario is that you have so much data, or so many queries, that a single Solr server is\nunable to handle your entire workload. In this case, you can scale up the capabilities of your application\nusing <span class=\"link\">SolrCloud</span> to better distribute the data, and the processing of requests, across many servers. Multiple\noptions can be mixed and matched depending on the scalability you need.",
    "hierarchy": [
    ],
    "pageId": 44
  },
  {
    "content": "For example: \"Sharding\" is a scaling technique in which a collection is split into multiple logical pieces called\n\"shards\" in order to scale up the number of documents in a collection beyond what could physically fit on a\nsingle server. Incoming queries are distributed to every shard in the collection, which respond with merged\nresults. Another technique available is to increase the \"Replication Factor\" of your collection, which allows\nyou to add servers with additional copies of your collection to handle higher concurrent query load by\nspreading the requests around to multiple machines. Sharding and replication are not mutually exclusive,\nand together make Solr an extremely powerful and scalable platform.",
    "hierarchy": [
    ],
    "pageId": 44
  },
  {
    "content": "Best of all, this talk about high-volume applications is not just hypothetical: some of the famous Internet\nsites that use Solr today are Macy's, EBay, and Zappo’s. For more examples, take a look at\nhttps://wiki.apache.org/solr/PublicServers<span class=\"fc0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 44
  },
  {
    "content": "You can install Solr in any system where a suitable Java Runtime Environment (JRE) is available, as detailed\nbelow.",
    "hierarchy": [
      "Solr System Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "Currently this includes Linux, MacOS/OS X, and Microsoft Windows.",
    "hierarchy": [
      "Solr System Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "You will need the Java Runtime Environment (JRE) version 1.8 or higher. At a command line, check your Java\nversion like this:",
    "hierarchy": [
      "Solr System Requirements",
      "Installation Requirements",
      "Java Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "$ java -version\njava version \"1.8.0_60\"\nJava(TM) SE Runtime Environment (build 1.8.0_60-b27)\nJava HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)",
    "hierarchy": [
      "Solr System Requirements",
      "Installation Requirements",
      "Java Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "The exact output will vary, but you need to make sure you meet the minimum version requirement. We also\nrecommend choosing a version that is not end-of-life from its vendor. Oracle or OpenJDK are the most\ntested JREs and are recommended. It's also recommended to use the latest available official release when\npossible.",
    "hierarchy": [
      "Solr System Requirements",
      "Installation Requirements",
      "Java Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "Some versions of Java VM have bugs that may impact your implementation. To be sure, check the page\nLucene JavaBugs<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Solr System Requirements",
      "Installation Requirements",
      "Java Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "If you don't have the required version, or if the <span class=\"code\">java</span> command is not found, download and install the latest\nversion from Oracle at <span class=\"link\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</span>.",
    "hierarchy": [
      "Solr System Requirements",
      "Installation Requirements",
      "Java Requirements"
    ],
    "pageId": 45
  },
  {
    "content": "Solr is tested on several versions of Linux, MacOS, and Windows.",
    "hierarchy": [
      "Solr System Requirements",
      "Installation Requirements",
      "Supported Operating Systems"
    ],
    "pageId": 45
  },
  {
    "content": "Installation of Solr on Unix-compatible or Windows servers generally requires simply extracting (or,\nunzipping) the download package.",
    "hierarchy": [
      "Installing Solr"
    ],
    "pageId": 46
  },
  {
    "content": "Please be sure to review the <span class=\"link\">Solr System Requirements</span> before starting Solr.",
    "hierarchy": [
      "Installing Solr"
    ],
    "pageId": 46
  },
  {
    "content": "Solr is available from the Solr website. Download the latest release <span class=\"link\">https://lucene.apache.org/solr/mirrors-</span>\nsolr-latest-redir.html<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Installing Solr",
      "Available Solr Packages"
    ],
    "pageId": 46
  },
  {
    "content": "There are three separate packages:",
    "hierarchy": [
      "Installing Solr",
      "Available Solr Packages"
    ],
    "pageId": 46
  },
  {
    "content": "solr-7.3.0.tgz for Linux/Unix/OSX systems",
    "hierarchy": [
      "Installing Solr",
      "Available Solr Packages"
    ],
    "pageId": 46
  },
  {
    "content": "solr-7.3.0.zip for Microsoft Windows systems",
    "hierarchy": [
      "Installing Solr",
      "Available Solr Packages"
    ],
    "pageId": 46
  },
  {
    "content": "solr-7.3.0-src.tgz the package Solr source code. This is useful if you want to develop on Solr without\nusing the official Git repository.",
    "hierarchy": [
      "Installing Solr",
      "Available Solr Packages"
    ],
    "pageId": 46
  },
  {
    "content": "When getting started with Solr, all you need to do is extract the Solr distribution archive to a directory of\nyour choosing. This will suffice as an initial development environment, but take care not to overtax this \"toy\"\ninstallation before setting up your true development and production environments.",
    "hierarchy": [
      "Installing Solr",
      "Preparing for Installation"
    ],
    "pageId": 46
  },
  {
    "content": "When you've progressed past initial evaluation of Solr, you’ll want to take care to plan your implementation.\nYou may need to reinstall Solr on another server or make a clustered SolrCloud environment.",
    "hierarchy": [
      "Installing Solr",
      "Preparing for Installation"
    ],
    "pageId": 46
  },
  {
    "content": "When you're ready to setup Solr for a production environment, please refer to the instructions provided on\nthe <span class=\"link\">Taking Solr to Production</span> page.",
    "hierarchy": [
      "Installing Solr",
      "Preparing for Installation"
    ],
    "pageId": 46
  },
  {
    "content": "How to size your Solr installation is a complex question that relies on a number of factors,\nincluding the number and structure of documents, how many fields you intend to store, the\nnumber of users, etc.",
    "hierarchy": [
      "Installing Solr",
      "Preparing for Installation"
    ],
    "pageId": 46
  },
  {
    "content": "It's highly recommended that you spend a bit of time thinking about the factors that will\nimpact hardware sizing for your Solr implementation. A very good blog post that discusses\nthe issues to consider is <span class=\"link\">Sizing Hardware in the Abstract: Why We Don’t have a Definitive</span>\nAnswer<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Installing Solr",
      "Preparing for Installation"
    ],
    "pageId": 46
  },
  {
    "content": "One thing to note when planning your installation is that a hard limit exists in Lucene for the number of\ndocuments in a single index: approximately 2.14 billion documents (2,147,483,647 to be exact). In practice, it\nis highly unlikely that such a large number of documents would fit and perform well in a single index, and\nyou will likely need to distribute your index across a cluster before you ever approach this number. If you\nknow you will exceed this number of documents in total before you've even started indexing, it’s best to\nplan your installation with <span class=\"link\">SolrCloud</span> as part of your design from the start.",
    "hierarchy": [
      "Installing Solr",
      "Preparing for Installation"
    ],
    "pageId": 46
  },
  {
    "content": "To keep things simple for now, extract the Solr distribution archive to your local home directory, for instance\non Linux, do:",
    "hierarchy": [
      "Package Installation"
    ],
    "pageId": 47
  },
  {
    "content": "cd ~/\ntar zxf solr-7.3.0.tgz",
    "hierarchy": [
      "Package Installation"
    ],
    "pageId": 47
  },
  {
    "content": "Once extracted, you are now ready to run Solr using the instructions provided in the <span class=\"link\">Starting Solr</span> section\nbelow.",
    "hierarchy": [
      "Package Installation"
    ],
    "pageId": 47
  },
  {
    "content": "After installing Solr, you'll see the following directories and files within them:",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "bin/\nThis directory includes several important scripts that will make using Solr easier.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "solr and solr.cmd\nThis is <span class=\"link\">Solr's Control Script</span>, also known as <span class=\"code\">bin/solr</span> (*nix) / <span class=\"code\">bin/solr.cmd</span> (Windows). This script is the\npreferred tool to start and stop Solr. You can also create collections or cores, configure authentication,\nand work with configuration files when running in SolrCloud mode.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "post\nThe <span class=\"link\">PostTool</span>, which provides a simple command line interface for POSTing content to Solr.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "solr.in.sh and solr.in.cmd\nThese are property files for *nix and Windows systems, respectively. System-level properties for Java,\nJetty, and Solr are configured here. Many of these settings can be overridden when using <span class=\"code\">bin/solr</span> /\nbin/solr.cmd<span class=\"ff2 fs1\">, but this allows you to set all the properties in one place.</span>",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "install_solr_services.sh\nThis script is used on *nix systems to install Solr as a service. It is described in more detail in the\nsection <span class=\"link\">Taking Solr to Production</span>.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "contrib/\nSolr's <span class=\"code\">contrib</span> directory includes add-on plugins for specialized features of Solr.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "dist/\nThe <span class=\"code\">dist</span> directory contains the main Solr .jar files.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "docs/\nThe <span class=\"code\">docs</span> directory includes a link to online Javadocs for Solr.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "example/\nThe <span class=\"code\">example</span> directory includes several types of examples that demonstrate various Solr capabilities. See\nthe section <span class=\"link\">Solr Examples</span> below for more details on what is in this directory.",
    "hierarchy": [
      "Directory Layout"
    ],
    "pageId": 47
  },
  {
    "content": "licenses/\nThe <span class=\"code\">licenses</span> directory includes all of the licenses for 3rd party libraries used by Solr.",
    "hierarchy": [
    ],
    "pageId": 48
  },
  {
    "content": "server/\nThis directory is where the heart of the Solr application resides. A README in this directory provides a\ndetailed overview, but here are some highlights:",
    "hierarchy": [
    ],
    "pageId": 48
  },
  {
    "content": "Solr's Admin UI (<span class=\"code\">server/solr-webapp</span>)\n•Jetty libraries (<span class=\"code\">server/lib</span>)\n•Log files (<span class=\"code\">server/logs</span>) and log configurations (<span class=\"code\">server/resources</span>). See the section <span class=\"link\">Configuring</span>\nLogging<span class=\"fc0\"> for more details on how to customize Solr’s default logging.</span>\n•Sample configsets (<span class=\"code\">server/solr/configsets</span>)",
    "hierarchy": [
    ],
    "pageId": 48
  },
  {
    "content": "Solr includes a number of example documents and configurations to use when getting started. If you ran\nthrough the <span class=\"link\">Solr Tutorial</span>, you have already interacted with some of these files.",
    "hierarchy": [
      "Solr Examples"
    ],
    "pageId": 48
  },
  {
    "content": "Here are the examples included with Solr:",
    "hierarchy": [
      "Solr Examples"
    ],
    "pageId": 48
  },
  {
    "content": "exampledocs\nThis is a small set of simple CSV, XML, and JSON files that can be used with <span class=\"code\">bin/post</span> when first getting\nstarted with Solr. For more information about using <span class=\"code\">bin/post</span> with these files, see <span class=\"link\">Post Tool</span>.",
    "hierarchy": [
      "Solr Examples"
    ],
    "pageId": 48
  },
  {
    "content": "example-DIH\nThis directory includes a few example DataImport Handler (DIH) configurations to help you get started\nwith importing structured content in a database, an email server, or even an Atom feed. Each example\nwill index a different set of data; see the README there for more details about these examples.",
    "hierarchy": [
      "Solr Examples"
    ],
    "pageId": 48
  },
  {
    "content": "files\nThe <span class=\"code\">files</span> directory provides a basic search UI for documents such as Word or PDF that you may have\nstored locally. See the README there for details on how to use this example.",
    "hierarchy": [
      "Solr Examples"
    ],
    "pageId": 48
  },
  {
    "content": "films\nThe <span class=\"code\">films</span> directory includes a robust set of data about movies in three formats: CSV, XML, and JSON. See\nthe README there for details on how to use this dataset.",
    "hierarchy": [
      "Solr Examples"
    ],
    "pageId": 48
  },
  {
    "content": "Solr includes a command line interface tool called <span class=\"code\">bin/solr</span> (Linux/MacOS) or <span class=\"code\">bin\\solr.cmd</span> (Windows). This\ntool allows you to start and stop Solr, create cores and collections, configure authentication, and check the\nstatus of your system.",
    "hierarchy": [
      "Starting Solr"
    ],
    "pageId": 48
  },
  {
    "content": "To use it to start Solr you can simply enter:",
    "hierarchy": [
      "Starting Solr"
    ],
    "pageId": 48
  },
  {
    "content": "bin/solr start",
    "hierarchy": [
      "Starting Solr"
    ],
    "pageId": 48
  },
  {
    "content": "If you are running Windows, you can start Solr by running <span class=\"ff2 fs1\">bin\\solr.cmd</span> instead.",
    "hierarchy": [
    ],
    "pageId": 49
  },
  {
    "content": "bin\\solr.cmd start",
    "hierarchy": [
    ],
    "pageId": 49
  },
  {
    "content": "This will start Solr in the background, listening on port 8983.",
    "hierarchy": [
    ],
    "pageId": 49
  },
  {
    "content": "When you start Solr in the background, the script will wait to make sure Solr starts correctly before returning\nto the command line prompt.",
    "hierarchy": [
    ],
    "pageId": 49
  },
  {
    "content": "All of the options for the Solr CLI are described in the section <span class=\"link\">Solr Control Script Reference</span>.",
    "hierarchy": [
    ],
    "pageId": 49
  },
  {
    "content": "Solr also provides a number of useful examples to help you learn about key features. You can launch the\nexamples using the <span class=\"ff2 fs1\">-e</span> flag. For instance, to launch the \"techproducts\" example, you would do:",
    "hierarchy": [
      "Start Solr with a Specific Bundled Example"
    ],
    "pageId": 49
  },
  {
    "content": "bin/solr -e techproducts",
    "hierarchy": [
      "Start Solr with a Specific Bundled Example"
    ],
    "pageId": 49
  },
  {
    "content": "Currently, the available examples you can run are: techproducts, dih, schemaless, and cloud. See the section\nRunning with Example Configurations<span class=\"fc0\"> for details on each example.</span>",
    "hierarchy": [
      "Start Solr with a Specific Bundled Example"
    ],
    "pageId": 49
  },
  {
    "content": "Running the <span class=\"ff2 fs1\">cloud</span> example starts Solr in <span class=\"link\">SolrCloud</span> mode. For more information on\nstarting Solr in cloud mode, see the section <span class=\"link\">Getting Started with SolrCloud</span>.",
    "hierarchy": [
      "Start Solr with a Specific Bundled Example"
    ],
    "pageId": 49
  },
  {
    "content": "If you're not sure if Solr is running locally, you can use the status command:",
    "hierarchy": [
      "Check if Solr is Running"
    ],
    "pageId": 49
  },
  {
    "content": "bin/solr status",
    "hierarchy": [
      "Check if Solr is Running"
    ],
    "pageId": 49
  },
  {
    "content": "This will search for running Solr instances on your computer and then gather basic information about them,\nsuch as the version and memory usage.",
    "hierarchy": [
      "Check if Solr is Running"
    ],
    "pageId": 49
  },
  {
    "content": "That's it! Solr is running. If you need convincing, use a Web browser to see the Admin Console.",
    "hierarchy": [
      "Check if Solr is Running"
    ],
    "pageId": 49
  },
  {
    "content": "http://localhost:8983/solr/",
    "hierarchy": [
      "Check if Solr is Running"
    ],
    "pageId": 49
  },
  {
    "content": "If Solr is not running, your browser will complain that it cannot connect to the server. Check your port\nnumber and try again.",
    "hierarchy": [
    ],
    "pageId": 50
  },
  {
    "content": "If you did not start Solr with an example configuration, you would need to create a core in order to be able\nto index and search. You can do so by running:",
    "hierarchy": [
      "Create a Core"
    ],
    "pageId": 50
  },
  {
    "content": "bin/solr create -c <name>",
    "hierarchy": [
      "Create a Core"
    ],
    "pageId": 50
  },
  {
    "content": "This will create a core that uses a data-driven schema which tries to guess the correct field type when you\nadd documents to the index.",
    "hierarchy": [
      "Create a Core"
    ],
    "pageId": 50
  },
  {
    "content": "To see all available options for creating a new core, execute:",
    "hierarchy": [
      "Create a Core"
    ],
    "pageId": 50
  },
  {
    "content": "bin/solr create -help",
    "hierarchy": [
      "Create a Core"
    ],
    "pageId": 50
  },
  {
    "content": "An important aspect of Solr is that all operations and deployment can be done online, with minimal or no\nimpact to running applications. This includes minor upgrades and provisioning and removing nodes,\nbacking up and restoring indexes and editing configurations",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Common administrative tasks include:",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Solr Control Script Reference<span class=\"fc1\">: This section provides information about all of the options available to the</span>\nbin/solr<span class=\"ff2 fs1\"> / </span>bin\\solr.cmd<span class=\"ff2 fs1\"> scripts, which can start and stop Solr, configure authentication, and create or</span>\nremove collections and cores.",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Solr Configuration Files<span class=\"fc1\">: Overview of the installation layout and major configuration files.</span>",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Taking Solr to Production<span class=\"fc1\">: Detailed steps to help you install Solr as a service and take your application to</span>\nproduction.",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Making and Restoring Backups<span class=\"fc1\">: Describes backup strategies for your Solr indexes.</span>",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Running Solr on HDFS<span class=\"fc1\">: How to use HDFS to store your Solr indexes and transaction logs.</span>",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "SolrCloud on AWS EC2<span class=\"fc1\">: A tutorial on deploying Solr in Amazon Web Services (AWS) using EC2 instances.</span>",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Upgrading a Solr Cluster<span class=\"fc1\">: Information for upgrading a production SolrCloud cluster.</span>",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Solr Upgrade Notes<span class=\"fc1\">: Information about changes made in Solr releases.</span>",
    "hierarchy": [
      "Deployment and Operations"
    ],
    "pageId": 51
  },
  {
    "content": "Solr includes a script known as “bin/solr” that allows you to perform many common operations on your Solr\ninstallation or cluster.",
    "hierarchy": [
      "Solr Control Script Reference"
    ],
    "pageId": 52
  },
  {
    "content": "You can start and stop Solr, create and delete collections or cores, perform operations on ZooKeeper and\ncheck the status of Solr and configured shards.",
    "hierarchy": [
      "Solr Control Script Reference"
    ],
    "pageId": 52
  },
  {
    "content": "You can find the script in the <span class=\"code\">bin/</span> directory of your Solr installation. The <span class=\"code\">bin/solr</span> script makes Solr easier\nto work with by providing simple commands and options to quickly accomplish common goals.",
    "hierarchy": [
      "Solr Control Script Reference"
    ],
    "pageId": 52
  },
  {
    "content": "More examples of <span class=\"code\">bin/solr</span> in use are available throughout the Solr Reference Guide, but particularly in the\nsections <span class=\"link\">Starting Solr</span> and <span class=\"link\">Getting Started with SolrCloud</span>.",
    "hierarchy": [
      "Solr Control Script Reference"
    ],
    "pageId": 52
  },
  {
    "content": "The <span class=\"code\">start</span> command starts Solr. The <span class=\"code\">restart</span> command allows you to restart Solr while it is already running\nor if it has been stopped already.",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "The <span class=\"code\">start</span> and <span class=\"code\">restart</span> commands have several options to allow you to run in SolrCloud mode, use an\nexample configuration set, start with a hostname or port that is not the default and point to a local\nZooKeeper ensemble.",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "bin/solr start [options]",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "bin/solr start -help",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "bin/solr restart [options]",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "bin/solr restart -help",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "When using the <span class=\"code\">restart</span> command, you must pass all of the parameters you initially passed when you\nstarted Solr. Behind the scenes, a stop request is initiated, so Solr will be stopped before being started again.\nIf no nodes are already running, restart will skip the step to stop and proceed to starting Solr.",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart"
    ],
    "pageId": 52
  },
  {
    "content": "The <span class=\"code\">bin/solr</span> script provides many options to allow you to customize the server in common ways, such as\nchanging the listening port. However, most of the defaults are adequate for most Solr installations,\nespecially when just getting started.",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart",
      "Start Parameters"
    ],
    "pageId": 52
  },
  {
    "content": "-a \"<string>\"\nStart Solr with additional JVM parameters, such as those starting with -X. If you are passing JVM\nparameters that begin with \"-D\", you can omit the -a option.",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart",
      "Start Parameters"
    ],
    "pageId": 52
  },
  {
    "content": "Example<span class=\"ff2\">:</span>",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart",
      "Start Parameters"
    ],
    "pageId": 52
  },
  {
    "content": "bin/solr start -a \"-Xdebug -Xrunjdwp:transport=dt_socket, server=y,suspend=n,address=1044\"",
    "hierarchy": [
      "Solr Control Script Reference",
      "Starting and Stopping",
      "Start and Restart",
      "Start Parameters"
    ],
    "pageId": 52
  },
  {
    "content": "-cloud\nStart Solr in SolrCloud mode, which will also launch the embedded ZooKeeper instance included with Solr.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "This option can be shortened to simply <span class=\"ff1 fs0\">-c</span>.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "If you are already running a ZooKeeper ensemble that you want to use instead of the embedded (single-\nnode) ZooKeeper, you should also pass the -z parameter.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "For more details, see the section <span class=\"link\">SolrCloud Mode</span> below.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"ff1 fs0\">bin/solr start -c</span></span>",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "-d <dir>\nDefine a server directory, defaults to <span class=\"ff1 fs0\">server</span> (as in, <span class=\"ff1 fs0\">$SOLR_HOME/server</span>). It is uncommon to override this\noption. When running multiple instances of Solr on the same host, it is more common to use the same\nserver directory for each instance and use a unique Solr home directory using the -s option.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"ff1 fs0\">bin/solr start -d newServerDir</span></span>",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "-e <name>\nStart Solr with an example configuration. These examples are provided to help you get started faster with\nSolr generally, or just try a specific feature.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "The available options are:",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "cloud\n•techproducts\n•dih\n•schemaless",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "See the section <span class=\"link\">Running with Example Configurations</span> below for more details on the example\nconfigurations.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"ff1 fs0\">bin/solr start -e schemaless</span></span>",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "-f\nStart Solr in the foreground; you cannot use this option when running examples with the -e option.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"ff1 fs0\">bin/solr start -f</span></span>",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "-h <hostname>\nStart Solr with the defined hostname. If this is not specified, 'localhost' will be assumed.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"ff1 fs0\">bin/solr start -h search.mysolr.com</span></span>",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "-m <memory>\nStart Solr with the defined value as the min (-Xms) and max (-Xmx) heap size for the JVM.",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"ff1 fs0\">bin/solr start -m 1g</span></span>",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "-noprompt\nStart Solr and suppress any prompts that may be seen with another option. This would have the side",
    "hierarchy": [
    ],
    "pageId": 53
  },
  {
    "content": "effect of accepting all defaults implicitly.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "For example, when using the \"cloud\" example, an interactive session guides you through several options\nfor your SolrCloud cluster. If you want to accept all of the defaults, you can simply add the -noprompt\noption to your request.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -e cloud -noprompt</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-p <port>\nStart Solr on the defined port. If this is not specified, '8983' will be used.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -p 8655</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-s <dir>\nSets the <span class=\"code\">solr.solr.home</span> system property; Solr will create core directories under this directory. This\nallows you to run multiple Solr instances on the same host while reusing the same server directory set\nusing the <span class=\"code\">-d</span> parameter.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "If set, the specified directory should contain a <span class=\"code\">solr.xml</span> file, unless <span class=\"code\">solr.xml</span> exists in ZooKeeper. The\ndefault value is <span class=\"code\">server/solr</span>.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "This parameter is ignored when running examples (<span class=\"code\">-e</span>), as the <span class=\"code\">solr.solr.home</span> depends on which\nexample is run.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -s newHome</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-v\nBe more verbose. This changes the logging level of log4j from <span class=\"code\">INFO</span> to <span class=\"code\">DEBUG</span>, having the same effect as if\nyou edited <span class=\"code\">log4j.properties</span> accordingly.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -f -v</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-q\nBe more quiet. This changes the logging level of log4j from <span class=\"code\">INFO</span> to <span class=\"code\">WARN</span>, having the same effect as if you\nedited <span class=\"code\">log4j.properties</span> accordingly. This can be useful in a production setting where you want to limit\nlogging to warnings and errors.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -f -q</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-V\nStart Solr with verbose messages from the start script.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -V</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-z <zkHost>\nStart Solr with the defined ZooKeeper connection string. This option is only used with the -c option, to\nstart Solr in SolrCloud mode. If this option is not provided, Solr will start the embedded ZooKeeper\ninstance and use that instance for SolrCloud operations.",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">bin/solr start -c -z server1:2181,server2:2181</span></span>",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "-force\nIf attempting to start Solr as the root user, the script will exit with a warning that running Solr as \"root\"",
    "hierarchy": [
    ],
    "pageId": 54
  },
  {
    "content": "can cause problems. It is possible to override this warning with the -force parameter.",
    "hierarchy": [
    ],
    "pageId": 55
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">sudo bin/solr start -force</span></span>",
    "hierarchy": [
    ],
    "pageId": 55
  },
  {
    "content": "To emphasize how the default settings work take a moment to understand that the following commands are\nequivalent:",
    "hierarchy": [
    ],
    "pageId": 55
  },
  {
    "content": "bin/solr start",
    "hierarchy": [
    ],
    "pageId": 55
  },
  {
    "content": "bin/solr start -h localhost -p 8983 -d server -s solr -m 512m",
    "hierarchy": [
    ],
    "pageId": 55
  },
  {
    "content": "It is not necessary to define all of the options when starting if the defaults are fine for your needs.",
    "hierarchy": [
    ],
    "pageId": 55
  },
  {
    "content": "The <span class=\"code\">bin/solr</span> script will pass any additional parameters that begin with <span class=\"code\">-D</span> to the JVM, which allows you to\nset arbitrary Java system properties.",
    "hierarchy": [
      "Setting Java System Properties"
    ],
    "pageId": 55
  },
  {
    "content": "For example, to set the auto soft-commit frequency to 3 seconds, you can do:",
    "hierarchy": [
      "Setting Java System Properties"
    ],
    "pageId": 55
  },
  {
    "content": "bin/solr start -Dsolr.autoSoftCommit.maxTime=3000",
    "hierarchy": [
      "Setting Java System Properties"
    ],
    "pageId": 55
  },
  {
    "content": "The <span class=\"code\">-c</span> and <span class=\"code\">-cloud</span> options are equivalent:",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "bin/solr start -c",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "bin/solr start -cloud",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "If you specify a ZooKeeper connection string, such as <span class=\"code\">-z 192.168.1.4:2181</span>, then Solr will connect to\nZooKeeper and join the cluster.",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "If you do not specify the <span class=\"code\">-z</span> option when starting Solr in cloud mode, then Solr will launch an embedded\nZooKeeper server listening on the Solr port + 1000, i.e., if Solr is running on port 8983, then the embedded\nZooKeeper will be listening on port 9983.",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "If your ZooKeeper connection string uses a chroot, such as <span class=\"code\">localhost:2181/solr</span>, then you\nneed to create the /solr znode before launching SolrCloud using the <span class=\"code\">bin/solr</span> script.",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "+ To do this use the <span class=\"code\">mkroot</span> command outlined below, for example: <span class=\"code\">bin/solr zk mkroot</span>\n/solr -z 192.168.1.4:2181",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "When starting in SolrCloud mode, the interactive script session will prompt you to choose a configset to use.",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "For more information about starting Solr in SolrCloud mode, see also the section <span class=\"link\">Getting Started with</span>\nSolrCloud<span class=\"fc0\">.</span>",
    "hierarchy": [
      "SolrCloud Mode"
    ],
    "pageId": 55
  },
  {
    "content": "bin/solr start -e <name>",
    "hierarchy": [
      "Running with Example Configurations"
    ],
    "pageId": 55
  },
  {
    "content": "The example configurations allow you to get started quickly with a configuration that mirrors what you hope\nto accomplish with Solr.",
    "hierarchy": [
      "Running with Example Configurations"
    ],
    "pageId": 55
  },
  {
    "content": "Each example launches Solr with a managed schema, which allows use of the <span class=\"link\">Schema API</span> to make schema\nedits, but does not allow manual editing of a Schema file.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "If you would prefer to manually modify a <span class=\"ff2 fs1\">schema.xml</span> file directly, you can change this default as described\nin the section <span class=\"link\">Schema Factory Definition in SolrConfig</span>.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "Unless otherwise noted in the descriptions below, the examples do not enable <span class=\"link\">SolrCloud</span> nor <span class=\"link\">schemaless</span>\nmode<span class=\"fc0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "The following examples are provided:",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "cloud<span class=\"ff1\">: This example starts a 1-4 node SolrCloud cluster on a single machine. When chosen, an interactive</span>\nsession will start to guide you through options to select the initial configset to use, the number of nodes\nfor your example cluster, the ports to use, and name of the collection to be created.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "When using this example, you can choose from any of the available configsets found in\n$SOLR_HOME/server/solr/configsets<span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "techproducts<span class=\"ff1\">: This example starts Solr in standalone mode with a schema designed for the sample</span>\ndocuments included in the <span class=\"ff2 fs1\">$SOLR_HOME/example/exampledocs</span> directory.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "The configset used can be found in\n$SOLR_HOME/server/solr/configsets/sample_techproducts_configs<span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "dih<span class=\"ff1\">: This example starts Solr in standalone mode with the DataImportHandler (DIH) enabled and several</span>\nexample <span class=\"ff2 fs1\">dataconfig.xml</span> files pre-configured for different types of data supported with DIH (such as,\ndatabase contents, email, RSS feeds, etc.).",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "The configset used is customized for DIH, and is found in <span class=\"ff2 fs1\">$SOLR_HOME/example/example-DIH/solr/conf</span>.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "For more information about DIH, see the section <span class=\"link\">Uploading Structured Data Store Data with the Data</span>\nImport Handler<span class=\"fc0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "schemaless<span class=\"ff1\">: This example starts Solr in standalone mode using a managed schema, as described in the</span>\nsection <span class=\"link\">Schema Factory Definition in SolrConfig</span>, and provides a very minimal pre-defined schema. Solr\nwill run in <span class=\"link\">Schemaless Mode</span> with this configuration, where Solr will create fields in the schema on the fly\nand will guess field types used in incoming documents.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "The configset used can be found in <span class=\"ff2 fs1\">$SOLR_HOME/server/solr/configsets/_default</span>.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "The run in-foreground option (<span class=\"ff2 fs1\">-f</span>) is not compatible with the <span class=\"ff2 fs1\">-e</span> option since the script\nneeds to perform additional tasks after starting the Solr server.",
    "hierarchy": [
    ],
    "pageId": 56
  },
  {
    "content": "The <span class=\"ff2 fs1\">stop</span> command sends a STOP request to a running Solr node, which allows it to shutdown gracefully.\nThe command will wait up to 180 seconds for Solr to stop gracefully and then will forcefully kill the process\n(kill -9).",
    "hierarchy": [
      "Stop"
    ],
    "pageId": 56
  },
  {
    "content": "bin/solr stop [options]",
    "hierarchy": [
      "Stop"
    ],
    "pageId": 56
  },
  {
    "content": "bin/solr stop -help",
    "hierarchy": [
      "Stop"
    ],
    "pageId": 56
  },
  {
    "content": "-p <port>\nStop Solr running on the given port. If you are running more than one instance, or are running in\nSolrCloud mode, you either need to specify the ports in separate requests or use the -all option.",
    "hierarchy": [
      "Stop Parameters"
    ],
    "pageId": 57
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff2 fs1\">bin/solr stop -p 8983</span></span>",
    "hierarchy": [
      "Stop Parameters"
    ],
    "pageId": 57
  },
  {
    "content": "-all\nStop all running Solr instances that have a valid PID.",
    "hierarchy": [
      "Stop Parameters"
    ],
    "pageId": 57
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff2 fs1\">bin/solr stop -all</span></span>",
    "hierarchy": [
      "Stop Parameters"
    ],
    "pageId": 57
  },
  {
    "content": "-k <key>\nStop key used to protect from stopping Solr inadvertently; default is \"solrrocks\".",
    "hierarchy": [
      "Stop Parameters"
    ],
    "pageId": 57
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff2 fs1\">bin/solr stop -k solrrocks</span></span>",
    "hierarchy": [
      "Stop Parameters"
    ],
    "pageId": 57
  },
  {
    "content": "The <span class=\"ff2 fs1\">version</span> command simply returns the version of Solr currently installed and immediately exists.",
    "hierarchy": [
      "System Information",
      "Version"
    ],
    "pageId": 57
  },
  {
    "content": "$ bin/solr version\nX.Y.0",
    "hierarchy": [
      "System Information",
      "Version"
    ],
    "pageId": 57
  },
  {
    "content": "The <span class=\"ff2 fs1\">status</span> command displays basic JSON-formatted information for any Solr nodes found running on the\nlocal system.",
    "hierarchy": [
      "System Information",
      "Status"
    ],
    "pageId": 57
  },
  {
    "content": "The <span class=\"ff2 fs1\">status</span> command uses the <span class=\"ff2 fs1\">SOLR_PID_DIR</span> environment variable to locate Solr process ID files to find\nrunning Solr instances, which defaults to the <span class=\"ff2 fs1\">bin</span> directory.",
    "hierarchy": [
      "System Information",
      "Status"
    ],
    "pageId": 57
  },
  {
    "content": "bin/solr status",
    "hierarchy": [
      "System Information",
      "Status"
    ],
    "pageId": 57
  },
  {
    "content": "The output will include a status of each node of the cluster, as in this example:",
    "hierarchy": [
      "System Information",
      "Status"
    ],
    "pageId": 57
  },
  {
    "content": "Found 2 Solr nodes:",
    "hierarchy": [
    ],
    "pageId": 58
  },
  {
    "content": "Solr process 39920 running on port 7574\n{\nÊ \"solr_home\":\"/Applications/Solr/example/cloud/node2/solr/\",\nÊ \"version\":\"X.Y.0\",\nÊ \"startTime\":\"2015-02-10T17:19:54.739Z\",\nÊ \"uptime\":\"1 days, 23 hours, 55 minutes, 48 seconds\",\nÊ \"memory\":\"77.2 MB (%15.7) of 490.7 MB\",\nÊ \"cloud\":{\nÊ   \"ZooKeeper\":\"localhost:9865\",\nÊ   \"liveNodes\":\"2\",\nÊ   \"collections\":\"2\"}}",
    "hierarchy": [
    ],
    "pageId": 58
  },
  {
    "content": "Solr process 39827 running on port 8865\n{\nÊ \"solr_home\":\"/Applications/Solr/example/cloud/node1/solr/\",\nÊ \"version\":\"X.Y.0\",\nÊ \"startTime\":\"2015-02-10T17:19:49.057Z\",\nÊ \"uptime\":\"1 days, 23 hours, 55 minutes, 54 seconds\",\nÊ \"memory\":\"94.2 MB (%19.2) of 490.7 MB\",\nÊ \"cloud\":{\nÊ   \"ZooKeeper\":\"localhost:9865\",\nÊ   \"liveNodes\":\"2\",\nÊ   \"collections\":\"2\"}}",
    "hierarchy": [
    ],
    "pageId": 58
  },
  {
    "content": "The <span class=\"ff1 fs2\">assert</span> command sanity checks common issues with Solr installations. These include checking the\nownership/existence of particular directories, and ensuring Solr is available on the expected URL. The\ncommand can either output a specified error message, or change its exit code to indicate errors.",
    "hierarchy": [
      "Assert"
    ],
    "pageId": 58
  },
  {
    "content": "As an example:",
    "hierarchy": [
      "Assert"
    ],
    "pageId": 58
  },
  {
    "content": "bin/solr assert --exists /opt/bin/solr",
    "hierarchy": [
      "Assert"
    ],
    "pageId": 58
  },
  {
    "content": "Results in the output below:",
    "hierarchy": [
      "Assert"
    ],
    "pageId": 58
  },
  {
    "content": "ERROR: Directory /opt/bin/solr does not exist.",
    "hierarchy": [
      "Assert"
    ],
    "pageId": 58
  },
  {
    "content": "Use <span class=\"ff1 fs2\">bin/solr assert -help</span> for a full list of options.",
    "hierarchy": [
      "Assert"
    ],
    "pageId": 58
  },
  {
    "content": "The <span class=\"ff1 fs2\">healthcheck</span> command generates a JSON-formatted health report for a collection when running in\nSolrCloud mode. The health report provides information about the state of every replica for all shards in a\ncollection, including the number of committed documents and its current state.",
    "hierarchy": [
      "Healthcheck"
    ],
    "pageId": 58
  },
  {
    "content": "bin/solr healthcheck [options]",
    "hierarchy": [
    ],
    "pageId": 59
  },
  {
    "content": "bin/solr healthcheck -help",
    "hierarchy": [
    ],
    "pageId": 59
  },
  {
    "content": "-c <collection>\nName of the collection to run a healthcheck against (required).",
    "hierarchy": [
      "Healthcheck Parameters"
    ],
    "pageId": 59
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff1 fs0\">bin/solr healthcheck -c gettingstarted</span></span>",
    "hierarchy": [
      "Healthcheck Parameters"
    ],
    "pageId": 59
  },
  {
    "content": "-z <zkhost>\nZooKeeper connection string, defaults to <span class=\"ff1 fs0\">localhost:9983</span>. If you are running Solr on a port other than\n8983, you will have to specify the ZooKeeper connection string. By default, this will be the Solr port + 1000.",
    "hierarchy": [
      "Healthcheck Parameters"
    ],
    "pageId": 59
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff1 fs0\">bin/solr healthcheck -z localhost:2181</span></span>",
    "hierarchy": [
      "Healthcheck Parameters"
    ],
    "pageId": 59
  },
  {
    "content": "Below is an example healthcheck request and response using a non-standard ZooKeeper connect string,\nwith 2 nodes running:",
    "hierarchy": [
      "Healthcheck Parameters"
    ],
    "pageId": 59
  },
  {
    "content": "$ bin/solr healthcheck -c gettingstarted -z localhost:9865",
    "hierarchy": [
      "Healthcheck Parameters"
    ],
    "pageId": 59
  },
  {
    "content": "{\nÊ <span class=\"fc1\">\"collection\"</span>:<span class=\"fc2\">\"gettingstarted\"</span>,\nÊ <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"healthy\"</span>,\nÊ <span class=\"fc1\">\"numDocs\"</span>:<span class=\"fc3\">0</span>,\nÊ <span class=\"fc1\">\"numShards\"</span>:<span class=\"fc3\">2</span>,\nÊ <span class=\"fc1\">\"shards\"</span>:[\nÊ   {\nÊ     <span class=\"fc1\">\"shard\"</span>:<span class=\"fc2\">\"shard1\"</span>,\nÊ     <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"healthy\"</span>,\nÊ     <span class=\"fc1\">\"replicas\"</span>:[\nÊ       {\nÊ         <span class=\"fc1\">\"name\"</span>:<span class=\"fc2\">\"core_node1\"</span>,\nÊ         <span class=\"fc1\">\"url\"</span>:<span class=\"fc2\">\"http://10.0.1.10:8865/solr/gettingstarted_shard1_replica2/\"</span>,\nÊ         <span class=\"fc1\">\"numDocs\"</span>:<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"active\"</span>,\nÊ         <span class=\"fc1\">\"uptime\"</span>:<span class=\"fc2\">\"2 days, 1 hours, 18 minutes, 48 seconds\"</span>,\nÊ         <span class=\"fc1\">\"memory\"</span>:<span class=\"fc2\">\"25.6 MB (%5.2) of 490.7 MB\"</span>,\nÊ         <span class=\"fc1\">\"leader\"</span>:<span class=\"fc4\">true</span>},\nÊ       {\nÊ         <span class=\"fc1\">\"name\"</span>:<span class=\"fc2\">\"core_node4\"</span>,\nÊ         <span class=\"fc1\">\"url\"</span>:<span class=\"fc2\">\"http://10.0.1.10:7574/solr/gettingstarted_shard1_replica1/\"</span>,\nÊ         <span class=\"fc1\">\"numDocs\"</span>:<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"active\"</span>,\nÊ         <span class=\"fc1\">\"uptime\"</span>:<span class=\"fc2\">\"2 days, 1 hours, 18 minutes, 42 seconds\"</span>,\nÊ         <span class=\"fc1\">\"memory\"</span>:<span class=\"fc2\">\"95.3 MB (%19.4) of 490.7 MB\"</span>}]},\nÊ   {\nÊ     <span class=\"fc1\">\"shard\"</span>:<span class=\"fc2\">\"shard2\"</span>,\nÊ     <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"healthy\"</span>,\nÊ     <span class=\"fc1\">\"replicas\"</span>:[\nÊ       {\nÊ         <span class=\"fc1\">\"name\"</span>:<span class=\"fc2\">\"core_node2\"</span>,\nÊ         <span class=\"fc1\">\"url\"</span>:<span class=\"fc2\">\"http://10.0.1.10:8865/solr/gettingstarted_shard2_replica2/\"</span>,\nÊ         <span class=\"fc1\">\"numDocs\"</span>:<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"active\"</span>,\nÊ         <span class=\"fc1\">\"uptime\"</span>:<span class=\"fc2\">\"2 days, 1 hours, 18 minutes, 48 seconds\"</span>,\nÊ         <span class=\"fc1\">\"memory\"</span>:<span class=\"fc2\">\"25.8 MB (%5.3) of 490.7 MB\"</span>},\nÊ       {\nÊ         <span class=\"fc1\">\"name\"</span>:<span class=\"fc2\">\"core_node3\"</span>,\nÊ         <span class=\"fc1\">\"url\"</span>:<span class=\"fc2\">\"http://10.0.1.10:7574/solr/gettingstarted_shard2_replica1/\"</span>,\nÊ         <span class=\"fc1\">\"numDocs\"</span>:<span class=\"fc3\">0</span>,\nÊ         <span class=\"fc1\">\"status\"</span>:<span class=\"fc2\">\"active\"</span>,\nÊ         <span class=\"fc1\">\"uptime\"</span>:<span class=\"fc2\">\"2 days, 1 hours, 18 minutes, 42 seconds\"</span>,\nÊ         <span class=\"fc1\">\"memory\"</span>:<span class=\"fc2\">\"95.4 MB (%19.4) of 490.7 MB\"</span>,\nÊ         <span class=\"fc1\">\"leader\"</span>:<span class=\"fc4\">true</span>}]}]}",
    "hierarchy": [
    ],
    "pageId": 60
  },
  {
    "content": "The <span class=\"ff1 fs2\">bin/solr</span> script can also help you create new collections (in SolrCloud mode) or cores (in standalone\nmode), or delete collections.",
    "hierarchy": [
      "Collections and Cores"
    ],
    "pageId": 60
  },
  {
    "content": "The <span class=\"code\">create</span> command detects the mode that Solr is running in (standalone or SolrCloud) and then creates a\ncore or collection depending on the mode.",
    "hierarchy": [
      "Create a Core or Collection"
    ],
    "pageId": 61
  },
  {
    "content": "bin/solr create [options]",
    "hierarchy": [
      "Create a Core or Collection"
    ],
    "pageId": 61
  },
  {
    "content": "bin/solr create -help",
    "hierarchy": [
      "Create a Core or Collection"
    ],
    "pageId": 61
  },
  {
    "content": "-c <name>\nName of the core or collection to create (required).",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -c mycollection</span></span>",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "-d <confdir>\nThe configuration directory. This defaults to <span class=\"code\">_default</span>.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "See the section <span class=\"link\">Configuration Directories and SolrCloud</span> below for more details about this option when\nrunning in SolrCloud mode.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -d _default</span></span>",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "-n <configName>\nThe configuration name. This defaults to the same name as the core or collection.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -n basic</span></span>",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "-p <port>\nPort of a local Solr instance to send the create command to; by default the script tries to detect the port\nby looking for running Solr instances.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "This option is useful if you are running multiple standalone Solr instances on the same host, thus\nrequiring you to be specific about which instance to create the core in.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -p 8983</span></span>",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "-s <shards><span class=\"ff1 fs1\"> or </span>-shards\nNumber of shards to split a collection into, default is 1; only applies when Solr is running in SolrCloud\nmode.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -s 2</span></span>",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "-rf <replicas><span class=\"ff1 fs1\"> or </span>-replicationFactor\nNumber of copies of each document in the collection. The default is 1 (no replication).",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -rf 2</span></span>",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "-force\nIf attempting to run create as \"root\" user, the script will exit with a warning that running Solr or actions\nagainst Solr as \"root\" can cause problems. It is possible to override this warning with the -force\nparameter.",
    "hierarchy": [
      "Create a Core or Collection",
      "Create Core or Collection Parameters"
    ],
    "pageId": 61
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr create -c foo -force</span></span>",
    "hierarchy": [
    ],
    "pageId": 62
  },
  {
    "content": "Before creating a collection in SolrCloud, the configuration directory used by the collection must be\nuploaded to ZooKeeper. The <span class=\"code\">create</span> command supports several use cases for how collections and\nconfiguration directories work. The main decision you need to make is whether a configuration directory in\nZooKeeper should be shared across multiple collections.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "Let's work through a few examples to illustrate how configuration directories work in SolrCloud.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "First, if you don't provide the <span class=\"code\">-d</span> or <span class=\"code\">-n</span> options, then the default configuration\n(<span class=\"code\">$SOLR_HOME/server/solr/configsets/_default/conf</span>) is uploaded to ZooKeeper using the same name as\nthe collection.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "For example, the following command will result in the <span class=\"code\">_default</span> configuration being uploaded to\n/configs/contacts<span class=\"ff2 fs0\"> in ZooKeeper: </span>bin/solr create -c contacts<span class=\"ff2 fs0\">.</span>",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "If you create another collection with <span class=\"code\">bin/solr create -c contacts2</span>, then another copy of the <span class=\"code\">_default</span>\ndirectory will be uploaded to ZooKeeper under <span class=\"code\">/configs/contacts2</span>.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "Any changes you make to the configuration for the contacts collection will not affect the <span class=\"code\">contacts2</span>\ncollection. Put simply, the default behavior creates a unique copy of the configuration directory for each\ncollection you create.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "You can override the name given to the configuration directory in ZooKeeper by using the <span class=\"code\">-n</span> option. For\ninstance, the command <span class=\"code\">bin/solr create -c logs -d _default -n basic</span> will upload the\nserver/solr/configsets/_default/conf<span class=\"ff2 fs0\"> directory to ZooKeeper as </span>/configs/basic<span class=\"ff2 fs0\">.</span>",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "Notice that we used the <span class=\"code\">-d</span> option to specify a different configuration than the default. Solr provides several\nbuilt-in configurations under <span class=\"code\">server/solr/configsets</span>. However you can also provide the path to your own\nconfiguration directory using the <span class=\"code\">-d</span> option. For instance, the command <span class=\"code\">bin/solr create -c mycoll -d</span>\n/tmp/myconfigs<span class=\"ff2 fs0\">, will upload </span>/tmp/myconfigs<span class=\"ff2 fs0\"> into ZooKeeper under </span>/configs/mycoll<span class=\"ff2 fs0\">.</span>",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "To reiterate, the configuration directory is named after the collection unless you override it using the <span class=\"code\">-n</span>\noption.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "Other collections can share the same configuration by specifying the name of the shared configuration\nusing the <span class=\"code\">-n</span> option. For instance, the following command will create a new collection that shares the basic\nconfiguration created previously: <span class=\"code\">bin/solr create -c logs2 -n basic</span>.",
    "hierarchy": [
      "Configuration Directories and SolrCloud"
    ],
    "pageId": 62
  },
  {
    "content": "The <span class=\"code\">_default</span> schema can mutate as data is indexed, since it has schemaless functionality (i.e., data-driven\nchanges to the schema). Consequently, we recommend that you do not share data-driven configurations\nbetween collections unless you are certain that all collections should inherit the changes made when\nindexing data into one of the collections. You can turn off schemaless functionality (i.e., data-driven changes\nto the schema) for a collection by the following (assuming the collection name is <span class=\"code\">mycollection</span>):",
    "hierarchy": [
      "Data-driven Schema and Shared Configurations"
    ],
    "pageId": 62
  },
  {
    "content": "curl http://host:8983/solr/mycollection/config -d '{\"set-user-property\":\n{\"update.autoCreateFields\":\"false\"}}'",
    "hierarchy": [
      "Data-driven Schema and Shared Configurations"
    ],
    "pageId": 62
  },
  {
    "content": "The <span class=\"code\">delete</span> command detects the mode that Solr is running in (standalone or SolrCloud) and then deletes\nthe specified core (standalone) or collection (SolrCloud) as appropriate.",
    "hierarchy": [
      "Delete Core or Collection"
    ],
    "pageId": 63
  },
  {
    "content": "bin/solr delete [options]",
    "hierarchy": [
      "Delete Core or Collection"
    ],
    "pageId": 63
  },
  {
    "content": "bin/solr delete -help",
    "hierarchy": [
      "Delete Core or Collection"
    ],
    "pageId": 63
  },
  {
    "content": "If running in SolrCloud mode, the delete command checks if the configuration directory used by the\ncollection you are deleting is being used by other collections. If not, then the configuration directory is also\ndeleted from ZooKeeper.",
    "hierarchy": [
      "Delete Core or Collection"
    ],
    "pageId": 63
  },
  {
    "content": "For example, if you created a collection with <span class=\"code\">bin/solr create -c contacts</span>, then the delete command\nbin/solr delete -c contacts<span class=\"ff2 fs1\"> will check to see if the </span>/configs/contacts<span class=\"ff2 fs1\"> configuration directory is being</span>\nused by any other collections. If not, then the <span class=\"code\">/configs/contacts</span> directory is removed from ZooKeeper.",
    "hierarchy": [
      "Delete Core or Collection"
    ],
    "pageId": 63
  },
  {
    "content": "-c <name>\nName of the core / collection to delete (required).",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr delete -c mycoll</span></span>",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "-deleteConfig\nWhether or not the configuration directory should also be deleted from ZooKeeper. The default is <span class=\"code\">true</span>.",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "If the configuration directory is being used by another collection, then it will not be deleted even if you\npass <span class=\"code\">-deleteConfig</span> as <span class=\"code\">true</span>.",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr delete -deleteConfig false</span></span>",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "-p <port>\nThe port of a local Solr instance to send the delete command to. By default the script tries to detect the\nport by looking for running Solr instances.",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "This option is useful if you are running multiple standalone Solr instances on the same host, thus\nrequiring you to be specific about which instance to delete the core from.",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">bin/solr delete -p 8983</span></span>",
    "hierarchy": [
      "Delete Core or Collection",
      "Delete Core or Collection Parameters"
    ],
    "pageId": 63
  },
  {
    "content": "The <span class=\"code\">bin/solr</span> script allows enabling or disabling Basic Authentication, allowing you to configure\nauthentication from the command line.",
    "hierarchy": [
      "Authentication"
    ],
    "pageId": 63
  },
  {
    "content": "Currently, this script only enables Basic Authentication, and is only available when using SolrCloud mode.",
    "hierarchy": [
      "Authentication"
    ],
    "pageId": 63
  },
  {
    "content": "The command <span class=\"code\">bin/solr auth enable</span> configures Solr to use Basic Authentication when accessing the User\nInterface, using <span class=\"code\">bin/solr</span> and any API requests.",
    "hierarchy": [
      "Authentication",
      "Enabling Basic Authentication"
    ],
    "pageId": 63
  },
  {
    "content": "For more information about Solr's authentication plugins, see the section <span class=\"link\">Securing Solr</span>. For\nmore information on Basic Authentication support specifically, see the section <span class=\"link\">Basic</span>\nAuthentication Plugin<span class=\"fc1\">.</span>",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "The <span class=\"code\">bin/solr auth enable</span> command makes several changes to enable Basic Authentication:",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "Creates a <span class=\"code\">security.json</span> file and uploads it to ZooKeeper. The <span class=\"code\">security.json</span> file will look similar to:",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "{\nÊ <span class=\"fc3\">\"authentication\"</span>:{\nÊ  <span class=\"fc3\">\"blockUnknown\"</span>: <span class=\"fc4\">false</span>,\nÊ  <span class=\"fc3\">\"class\"</span>:<span class=\"fc5\">\"solr.BasicAuthPlugin\"</span>,\nÊ  <span class=\"fc3\">\"credentials\"</span>:{<span class=\"fc3\">\"user\"</span>:<span class=\"fc5\">\"vgGVo69YJeUg/O6AcFiowWsdyOUdqfQvOLsrpIPMCzk=</span>",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "Ê },\nÊ <span class=\"fc3\">\"authorization\"</span>:{\nÊ  <span class=\"fc3\">\"class\"</span>:<span class=\"fc5\">\"solr.RuleBasedAuthorizationPlugin\"</span>,\nÊ  <span class=\"fc3\">\"permissions\"</span>:[\nÊ{<span class=\"fc3\">\"name\"</span>:<span class=\"fc5\">\"security-edit\"</span>, <span class=\"fc3\">\"role\"</span>:<span class=\"fc5\">\"admin\"</span>},\nÊ{<span class=\"fc3\">\"name\"</span>:<span class=\"fc5\">\"collection-admin-edit\"</span>, <span class=\"fc3\">\"role\"</span>:<span class=\"fc5\">\"admin\"</span>},\nÊ{<span class=\"fc3\">\"name\"</span>:<span class=\"fc5\">\"core-admin-edit\"</span>, <span class=\"fc3\">\"role\"</span>:<span class=\"fc5\">\"admin\"</span>}\nÊ  ],\nÊ  <span class=\"fc3\">\"user-role\"</span>:{<span class=\"fc3\">\"user\"</span>:<span class=\"fc5\">\"admin\"</span>}\nÊ }\n}",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "Adds two lines to <span class=\"code\">bin/solr.in.sh</span> or <span class=\"code\">bin\\solr.in.cmd</span> to set the authentication type, and the path to\nbasicAuth.conf<span class=\"ff2 fs1\">:</span>",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "# The following lines added by ./solr for enabling BasicAuth\nSOLR_AUTH_TYPE=\"basic\"\nSOLR_AUTHENTICATION_OPTS=\"-Dsolr.httpclient.config=/path/to/solr-\n7.3.0/server/solr/basicAuth.conf\"",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "Creates the file <span class=\"code\">server/solr/basicAuth.conf</span> to store the credential information that is used with\nbin/solr<span class=\"ff2 fs1\"> commands.</span>",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "The command takes the following parameters:",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "-credentials\nThe username and password in the format of <span class=\"code\">username:password</span> of the initial user.",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "If you prefer not to pass the username and password as an argument to the script, you can choose the\n-prompt<span class=\"ff2 fs1\"> option. Either </span>-credentials<span class=\"ff2 fs1\"> or </span>-prompt<span class=\"ff2 fs1\"> <span class=\"ff4\">must</span> be specified.</span>",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "-prompt\nIf prompt is preferred, pass <span class=\"ff4\">true</span> as a parameter to request the script to prompt the user to enter a\nusername and password.",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "Either <span class=\"code\">-credentials</span> or <span class=\"code\">-prompt</span> <span class=\"ff4\">must</span> be specified.",
    "hierarchy": [
    ],
    "pageId": 64
  },
  {
    "content": "-blockUnknown\nWhen <span class=\"code\">true</span>, blocks all unauthenticated users from accessing Solr. This defaults to <span class=\"code\">false</span>, which means\nunauthenticated users will still be able to access Solr.",
    "hierarchy": [
    ],
    "pageId": 65
  },
  {
    "content": "-updateIncludeFileOnly\nWhen <span class=\"code\">true</span>, only the settings in <span class=\"ff1 fs0\">bin/solr.in.sh</span> or <span class=\"ff1 fs0\">bin\\solr.in.cmd</span> will be updated, and <span class=\"ff1 fs0\">security.json</span>\nwill not be created.",
    "hierarchy": [
    ],
    "pageId": 65
  },
  {
    "content": "-z\nDefines the ZooKeeper connect string. This is useful if you want to enable authentication before all your\nSolr nodes have come up.",
    "hierarchy": [
    ],
    "pageId": 65
  },
  {
    "content": "-d\nDefines the Solr server directory, by default <span class=\"ff1 fs0\">$SOLR_HOME/server</span>. It is not common to need to override the\ndefault, and is only needed if you have customized the <span class=\"ff1 fs0\">$SOLR_HOME</span> directory path.",
    "hierarchy": [
    ],
    "pageId": 65
  },
  {
    "content": "-s\nDefines the location of <span class=\"ff1 fs0\">solr.solr.home</span>, which by default is <span class=\"ff1 fs0\">server/solr</span>. If you have multiple instances\nof Solr on the same host, or if you have customized the <span class=\"ff1 fs0\">$SOLR_HOME</span> directory path, you likely need to\ndefine this.",
    "hierarchy": [
    ],
    "pageId": 65
  },
  {
    "content": "You can disable Basic Authentication with <span class=\"ff1 fs0\">bin/solr auth disable</span>.",
    "hierarchy": [
      "Disabling Basic Authentication"
    ],
    "pageId": 65
  },
  {
    "content": "If the <span class=\"ff1 fs0\">-updateIncludeFileOnly</span> option is set to <span class=\"code\">true</span>, then only the settings in <span class=\"ff1 fs0\">bin/solr.in.sh</span> or\nbin\\solr.in.cmd<span class=\"ff2 fs1\"> will be updated, and </span>security.json<span class=\"ff2 fs1\"> will not be removed.</span>",
    "hierarchy": [
      "Disabling Basic Authentication"
    ],
    "pageId": 65
  },
  {
    "content": "If the <span class=\"ff1 fs0\">-updateIncludeFileOnly</span> option is set to <span class=\"code\">false</span>, then the settings in <span class=\"ff1 fs0\">bin/solr.in.sh</span> or\nbin\\solr.in.cmd<span class=\"ff2 fs1\"> will be updated, and </span>security.json<span class=\"ff2 fs1\"> will be removed. However, the </span>basicAuth.conf<span class=\"ff2 fs1\"> file is</span>\nnot removed with either option.",
    "hierarchy": [
      "Disabling Basic Authentication"
    ],
    "pageId": 65
  },
  {
    "content": "The <span class=\"ff1 fs0\">bin/solr</span> script allows certain operations affecting ZooKeeper. These operations are for SolrCloud mode\nonly. The operations are available as sub-commands, which each have their own set of options.",
    "hierarchy": [
      "ZooKeeper Operations"
    ],
    "pageId": 65
  },
  {
    "content": "bin/solr zk [sub-command] [options]",
    "hierarchy": [
      "ZooKeeper Operations"
    ],
    "pageId": 65
  },
  {
    "content": "bin/solr zk -help",
    "hierarchy": [
      "ZooKeeper Operations"
    ],
    "pageId": 65
  },
  {
    "content": "Solr should have been started at least once before issuing these commands to initialize\nZooKeeper with the znodes Solr expects. Once ZooKeeper is initialized, Solr doesn't need to\nbe running on any node to use these commands.",
    "hierarchy": [
      "ZooKeeper Operations"
    ],
    "pageId": 65
  },
  {
    "content": "Use the <span class=\"ff1 fs0\">zk upconfig</span> command to upload one of the pre-configured configuration set or a customized\nconfiguration set to ZooKeeper.",
    "hierarchy": [
      "ZooKeeper Operations",
      "Upload a Configuration Set"
    ],
    "pageId": 65
  },
  {
    "content": "All parameters below are required.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "-n <name>\nName of the configuration set in ZooKeeper. This command will upload the configuration set to the\n\"configs\" ZooKeeper node giving it the name specified.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "You can see all uploaded configuration sets in the Admin UI via the Cloud screens. Choose Cloud -> Tree\n-> configs to see them.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "If a pre-existing configuration set is specified, it will be overwritten in ZooKeeper.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">-n myconfig</span></span>",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "-d <configset dir>\nThe path of the configuration set to upload. It should have a <span class=\"code\">conf</span> directory immediately below it that in\nturn contains <span class=\"code\">solrconfig.xml</span> etc.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "If just a name is supplied, <span class=\"code\">$SOLR_HOME/server/solr/configsets</span> will be checked for this name. An\nabsolute path may be supplied instead.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "Examples<span class=\"ff2\">:</span>",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "\n-d directory_under_configsets\n•\n-d /path/to/configset/source",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"code\">solr.in.sh</span> or <span class=\"code\">solr.in.cmd</span>.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "An example of this command with all of the parameters is:",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "bin/solr zk upconfig -z 111.222.333.444:2181 -n mynewconfig -d /path/to/configset",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "This command does <span class=\"ff1\">not</span> automatically make changes effective! It simply uploads the\nconfiguration sets to ZooKeeper. You can use the Collection API's <span class=\"link\">RELOAD command</span> to\nreload any collections that uses this configuration set.",
    "hierarchy": [
      "ZK Upload Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "Use the <span class=\"code\">zk downconfig</span> command to download a configuration set from ZooKeeper to the local filesystem.",
    "hierarchy": [
      "Download a Configuration Set"
    ],
    "pageId": 66
  },
  {
    "content": "All parameters listed below are required.",
    "hierarchy": [
      "Download a Configuration Set",
      "ZK Download Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "-n <name>\nName of config set in ZooKeeper to download. The Admin UI Cloud -> Tree -> configs node lists all",
    "hierarchy": [
      "Download a Configuration Set",
      "ZK Download Parameters"
    ],
    "pageId": 66
  },
  {
    "content": "available configuration sets.",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">-n myconfig</span></span>",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "-d <configset dir>\nThe path to write the downloaded configuration set into. If just a name is supplied,\n$SOLR_HOME/server/solr/configsets<span class=\"ff1 fs0\"> will be the parent. An absolute path may be supplied as well.</span>",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "In either case, <span class=\"ff4\">pre-existing configurations at the destination will be overwritten!</span>",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "Examples<span class=\"ff1\">:</span>",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "\n-d directory_under_configsets\n•\n-d /path/to/configset/destination",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"code\">solr.in.sh</span> or <span class=\"code\">solr.in.cmd</span>.",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "An example of this command with all parameters is:",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "bin/solr zk downconfig -z 111.222.333.444:2181 -n mynewconfig -d /path/to/configset",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "A \"best practice\" is to keep your configuration sets in some form of version control as the system-of-record.\nIn that scenario, <span class=\"code\">downconfig</span> should rarely be used.",
    "hierarchy": [
    ],
    "pageId": 67
  },
  {
    "content": "Use the <span class=\"code\">zk cp</span> command for transferring files and directories between ZooKeeper znodes and your local\ndrive. This command will copy from the local drive to ZooKeeper, from ZooKeeper to the local drive or from\nZooKeeper to ZooKeeper.",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes"
    ],
    "pageId": 67
  },
  {
    "content": "-r\nOptional. Do a recursive copy. The command will fail if the <src> has children unless '-r' is specified.",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes",
      "ZK Copy Parameters"
    ],
    "pageId": 67
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"code\">-r</span></span>",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes",
      "ZK Copy Parameters"
    ],
    "pageId": 67
  },
  {
    "content": "<src>\nThe file or path to copy from. If prefixed with <span class=\"code\">zk:</span> then the source is presumed to be ZooKeeper. If no\nprefix or the prefix is 'file:' this is the local drive. At least one of <src> or <dest> must be prefixed by <span class=\"code\">'zk:'</span>\nor the command will fail.",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes",
      "ZK Copy Parameters"
    ],
    "pageId": 67
  },
  {
    "content": "Examples<span class=\"ff1\">:</span>",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes",
      "ZK Copy Parameters"
    ],
    "pageId": 67
  },
  {
    "content": "\nzk:/configs/myconfigs/solrconfig.xml\n•\nfile:/Users/apache/configs/src",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes",
      "ZK Copy Parameters"
    ],
    "pageId": 67
  },
  {
    "content": "<dest>\nThe file or path to copy to. If prefixed with <span class=\"code\">zk:</span> then the source is presumed to be ZooKeeper. If no prefix",
    "hierarchy": [
      "Copy between Local Files and ZooKeeper znodes",
      "ZK Copy Parameters"
    ],
    "pageId": 67
  },
  {
    "content": "or the prefix is <span class=\"ff2 fs1\">file:</span> this is the local drive.",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "At least one of <span class=\"ff2 fs1\"><src></span> or <span class=\"ff2 fs1\"><dest></span> must be prefixed by <span class=\"ff2 fs1\">zk:</span> or the command will fail. If <span class=\"ff2 fs1\"><dest></span> ends in a slash\ncharacter it names a directory.",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "Examples<span class=\"ff1\">:</span>",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "\nzk:/configs/myconfigs/solrconfig.xml\n•\nfile:/Users/apache/configs/src",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"ff2 fs1\">solr.in.sh</span> or <span class=\"ff2 fs1\">solr.in.cmd</span>.",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"ff2 fs1\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "An example of this command with the parameters is:",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "Recursively copy a directory from local to ZooKeeper.",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "bin/solr zk cp -r file:/apache/confgs/whatever/conf zk:/configs/myconf -z\n111.222.333.444:2181",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "Copy a single file from ZooKeeper to local.",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "bin/solr zk cp zk:/configs/myconf/managed_schema /configs/myconf/managed_schema -z\n111.222.333.444:2181",
    "hierarchy": [
    ],
    "pageId": 68
  },
  {
    "content": "Use the <span class=\"ff2 fs1\">zk rm</span> command to remove a znode (and optionally all child nodes) from ZooKeeper",
    "hierarchy": [
      "Remove a znode from ZooKeeper"
    ],
    "pageId": 68
  },
  {
    "content": "-r\nOptional. Do a recursive removal. The command will fail if the <path> has children unless '-r' is specified.",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "Example<span class=\"ff1\">: <span class=\"ff2 fs1\">-r</span></span>",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "<path>\nThe path to remove from ZooKeeper, either a parent or leaf node.",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "There are limited safety checks, you cannot remove '/' or '/zookeeper' nodes.",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "The path is assumed to be a ZooKeeper node, no <span class=\"ff2 fs1\">zk:</span> prefix is necessary.",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "Examples<span class=\"ff1\">:</span>",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "\n/configs\n•\n/configs/myconfigset\n•\n/configs/myconfigset/solrconfig.xml",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"ff2 fs1\">solr.in.sh</span> or <span class=\"ff2 fs1\">solr.in.cmd</span>.",
    "hierarchy": [
      "Remove a znode from ZooKeeper",
      "ZK Remove Parameters"
    ],
    "pageId": 68
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
    ],
    "pageId": 69
  },
  {
    "content": "Examples of this command with the parameters are:",
    "hierarchy": [
    ],
    "pageId": 69
  },
  {
    "content": "bin/solr zk rm -r /configs",
    "hierarchy": [
    ],
    "pageId": 69
  },
  {
    "content": "bin/solr zk rm /configs/myconfigset/schema.xml",
    "hierarchy": [
    ],
    "pageId": 69
  },
  {
    "content": "Use the <span class=\"code\">zk mv</span> command to move (rename) a ZooKeeper znode",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)"
    ],
    "pageId": 69
  },
  {
    "content": "<src>\nThe znode to rename. The <span class=\"code\">zk:</span> prefix is assumed.",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">/configs/oldconfigset</span></span>",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "<dest>\nThe new name of the znode. The <span class=\"code\">zk:</span> prefix is assumed.",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">/configs/newconfigset</span></span>",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"code\">solr.in.sh</span> or <span class=\"code\">solr.in.cmd</span>.",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "An example of this command is:",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "bin/solr zk mv /configs/oldconfigset /configs/newconfigset",
    "hierarchy": [
      "Move One ZooKeeper znode to Another (Rename)",
      "ZK Move Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "Use the <span class=\"code\">zk ls</span> command to see the children of a znode.",
    "hierarchy": [
      "List a ZooKeeper znode's Children"
    ],
    "pageId": 69
  },
  {
    "content": "-r<span class=\"ff2 fs0\"> Optional. Recursively list all descendants of a znode.</span>",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "+ <span class=\"ff1\">Example</span>: <span class=\"code\">-r</span>",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "<path>\nThe path on ZooKeeper to list.",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">/collections/mycollection</span></span>",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"code\">solr.in.sh</span> or <span class=\"code\">solr.in.cmd</span>.",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "Example<span class=\"ff2\">: <span class=\"code\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "An example of this command with the parameters is:",
    "hierarchy": [
      "List a ZooKeeper znode's Children",
      "ZK List Parameters"
    ],
    "pageId": 69
  },
  {
    "content": "bin/solr zk ls -r /collections/mycollection",
    "hierarchy": [
    ],
    "pageId": 70
  },
  {
    "content": "bin/solr zk ls /collections",
    "hierarchy": [
    ],
    "pageId": 70
  },
  {
    "content": "Use the <span class=\"ff1 fs0\">zk mkroot</span> command to create a znode. The primary use-case for this command to support\nZooKeeper's \"chroot\" concept. However, it can also be used to create arbitrary paths.",
    "hierarchy": [
      "Create a znode (supports chroot)"
    ],
    "pageId": 70
  },
  {
    "content": "<path>\nThe path on ZooKeeper to create. Intermediate znodes will be created if necessary. A leading slash is\nassumed even if not specified.",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff1 fs0\">/solr</span></span>",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "-z <zkHost>\nThe ZooKeeper connection string. Unnecessary if ZK_HOST is defined in <span class=\"ff1 fs0\">solr.in.sh</span> or <span class=\"ff1 fs0\">solr.in.cmd</span>.",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "Example<span class=\"code\">: <span class=\"ff1 fs0\">-z 123.321.23.43:2181</span></span>",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "Examples of this command:",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "bin/solr zk mkroot /solr -z 123.321.23.43:2181",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "bin/solr zk mkroot /solr/production",
    "hierarchy": [
      "Create a znode (supports chroot)",
      "Create znode Parameters"
    ],
    "pageId": 70
  },
  {
    "content": "Solr has several configuration files that you will interact with during your implementation.",
    "hierarchy": [
      "Solr Configuration Files"
    ],
    "pageId": 71
  },
  {
    "content": "Many of these files are in XML format, although APIs that interact with configuration settings tend to accept\nJSON for programmatic access as needed.",
    "hierarchy": [
      "Solr Configuration Files"
    ],
    "pageId": 71
  },
  {
    "content": "When Solr runs, it needs access to a home directory.",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "When you first install Solr, your home directory is <span class=\"code\">server/solr</span>. However, some examples may change this\nlocation (such as, if you run <span class=\"code\">bin/solr start -e cloud</span>, your home directory will be <span class=\"code\">example/cloud</span>).",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "The home directory contains important configuration information and is the place where Solr will store its\nindex. The layout of the home directory will look a little different when you are running Solr in standalone\nmode vs. when you are running in SolrCloud mode.",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "The crucial parts of the Solr home directory are shown in these examples:",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "<solr-home-directory>/\nÊ  solr.xml\nÊ  core_name1/\nÊ     core.properties\nÊ     conf/\nÊ        solrconfig.xml\nÊ        managed-schema\nÊ     data/\nÊ  core_name2/\nÊ     core.properties\nÊ     conf/\nÊ        solrconfig.xml\nÊ        managed-schema\nÊ     data/",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "<solr-home-directory>/\nÊ  solr.xml\nÊ  core_name1/\nÊ     core.properties\nÊ     data/\nÊ  core_name2/\nÊ     core.properties\nÊ     data/",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "You may see other files, but the main ones you need to know are discussed in the next section.",
    "hierarchy": [
      "Solr Configuration Files",
      "Solr Home"
    ],
    "pageId": 71
  },
  {
    "content": "Inside Solr's Home, you’ll find these files:",
    "hierarchy": [
      "Configuration Files"
    ],
    "pageId": 72
  },
  {
    "content": "solr.xml specifies configuration options for your Solr server instance. For more information on\nsolr.xml<span class=\"ff2 fs1\"> see <span class=\"link\">Solr Cores and solr.xml</span>.</span>",
    "hierarchy": [
      "Configuration Files"
    ],
    "pageId": 72
  },
  {
    "content": "Per Solr Core:",
    "hierarchy": [
      "Configuration Files"
    ],
    "pageId": 72
  },
  {
    "content": "◦core.properties<span class=\"ff2 fs1\"> defines specific properties for each core such as its name, the collection the core</span>\nbelongs to, the location of the schema, and other parameters. For more details on <span class=\"code\">core.properties</span>,\nsee the section <span class=\"link\">Defining core.properties</span>.\n◦solrconfig.xml<span class=\"ff2 fs1\"> controls high-level behavior. You can, for example, specify an alternate location for</span>\nthe data directory. For more information on <span class=\"code\">solrconfig.xml</span>, see <span class=\"link\">Configuring solrconfig.xml</span>.\n◦managed-schema<span class=\"ff2 fs1\"> (or </span>schema.xml<span class=\"ff2 fs1\"> instead) describes the documents you will ask Solr to index. The</span>\nSchema define a document as a collection of fields. You get to define both the field types and the\nfields themselves. Field type definitions are powerful and include information about how Solr\nprocesses incoming field values and query values. For more information on Solr Schemas, see\nDocuments, Fields, and Schema Design<span class=\"fc1\"> and the </span>Schema API<span class=\"fc1\">.</span>\n◦data/<span class=\"ff2 fs1\"> The directory containing the low level index files.</span>",
    "hierarchy": [
      "Configuration Files"
    ],
    "pageId": 72
  },
  {
    "content": "Note that the SolrCloud example does not include a <span class=\"code\">conf</span> directory for each Solr Core (so there is no\nsolrconfig.xml<span class=\"ff2 fs1\"> or Schema file). This is because the configuration files usually found in the </span>conf<span class=\"ff2 fs1\"> directory</span>\nare stored in ZooKeeper so they can be propagated across the cluster.",
    "hierarchy": [
      "Configuration Files"
    ],
    "pageId": 72
  },
  {
    "content": "If you are using SolrCloud with the embedded ZooKeeper instance, you may also see <span class=\"code\">zoo.cfg</span> and <span class=\"code\">zoo.data</span>\nwhich are ZooKeeper configuration and data files. However, if you are running your own ZooKeeper\nensemble, you would supply your own ZooKeeper configuration file when you start it and the copies in Solr\nwould be unused. For more information about SolrCloud, see the section <span class=\"link\">SolrCloud</span>.",
    "hierarchy": [
      "Configuration Files"
    ],
    "pageId": 72
  },
  {
    "content": "This section provides guidance on how to setup Solr to run in production on *nix platforms, such as Ubuntu.\nSpecifically, we'll walk through the process of setting up to run a single Solr instance on a Linux host and\nthen provide tips on how to support multiple Solr nodes running on the same host.",
    "hierarchy": [
      "Taking Solr to Production"
    ],
    "pageId": 73
  },
  {
    "content": "Solr includes a service installation script (<span class=\"code\">bin/install_solr_service.sh</span>) to help you install Solr as a service\non Linux. Currently, the script only supports CentOS, Debian, Red Hat, SUSE and Ubuntu Linux distributions.\nBefore running the script, you need to determine a few parameters about your setup. Specifically, you need\nto decide where to install Solr and which system user should be the owner of the Solr files and process.",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script"
    ],
    "pageId": 73
  },
  {
    "content": "We recommend separating your live Solr files, such as logs and index files, from the files included in the Solr\ndistribution bundle, as that makes it easier to upgrade Solr and is considered a good practice to follow as a\nsystem administrator.",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script",
      "Planning Your Directory Structure"
    ],
    "pageId": 73
  },
  {
    "content": "By default, the service installation script will extract the distribution archive into <span class=\"code\">/opt</span>. You can change this\nlocation using the <span class=\"code\">-i</span> option when running the installation script. The script will also create a symbolic link to\nthe versioned directory of Solr. For instance, if you run the installation script for Solr 7.3.0, then the following\ndirectory structure will be used:",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script",
      "Planning Your Directory Structure",
      "Solr Installation Directory"
    ],
    "pageId": 73
  },
  {
    "content": "/opt/solr-7.3.0\n/opt/solr -> /opt/solr-7.3.0",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script",
      "Planning Your Directory Structure",
      "Solr Installation Directory"
    ],
    "pageId": 73
  },
  {
    "content": "Using a symbolic link insulates any scripts from being dependent on the specific Solr version. If, down the\nroad, you need to upgrade to a later version of Solr, you can just update the symbolic link to point to the\nupgraded version of Solr. We'll use <span class=\"code\">/opt/solr</span> to refer to the Solr installation directory in the remaining\nsections of this page.",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script",
      "Planning Your Directory Structure",
      "Solr Installation Directory"
    ],
    "pageId": 73
  },
  {
    "content": "You should also separate writable Solr files into a different directory; by default, the installation script uses\n/var/solr<span class=\"ff2 fs1\">, but you can override this location using the </span>-d<span class=\"ff2 fs1\"> option. With this approach, the files in </span>/opt/solr\nwill remain untouched and all files that change while Solr is running will live under <span class=\"code\">/var/solr</span>.",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script",
      "Planning Your Directory Structure",
      "Separate Directory for Writable Files"
    ],
    "pageId": 73
  },
  {
    "content": "Running Solr as <span class=\"code\">root</span> is not recommended for security reasons, and the <span class=\"link\">controlÊscript</span> start command will\nrefuse to do so. Consequently, you should determine the username of a system user that will own all of the\nSolr files and the running Solr process. By default, the installation script will create the <span class=\"ff1\">solr</span> user, but you can\noverride this setting using the -u option. If your organization has specific requirements for creating new\nuser accounts, then you should create the user before running the script. The installation script will make\nthe Solr user the owner of the <span class=\"code\">/opt/solr</span> and <span class=\"code\">/var/solr</span> directories.",
    "hierarchy": [
      "Taking Solr to Production",
      "Service Installation Script",
      "Create the Solr User"
    ],
    "pageId": 73
  },
  {
    "content": "You are now ready to run the installation script.",
    "hierarchy": [
    ],
    "pageId": 74
  },
  {
    "content": "To run the script, you'll need to download the latest Solr distribution archive and then do the following:",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "tar xzf solr-7.3.0.tgz solr-7.3.0/bin/install_solr_service.sh --strip-components=2",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "The previous command extracts the <span class=\"code\">install_solr_service.sh</span> script from the archive into the current\ndirectory. If installing on Red Hat, please make sure <span class=\"ff2\">lsof</span> is installed before running the Solr installation\nscript (<span class=\"code\">sudo yum install lsof</span>). The installation script must be run as root:",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "sudo bash ./install_solr_service.sh solr-7.3.0.tgz",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "By default, the script extracts the distribution archive into <span class=\"code\">/opt</span>, configures Solr to write files into <span class=\"code\">/var/solr</span>,\nand runs Solr as the <span class=\"code\">solr</span> user. Consequently, the following command produces the same result as the\nprevious command:",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "sudo bash ./install_solr_service.sh solr-7.3.0.tgz -i /opt -d /var/solr -u solr -s solr -p 8983",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "You can customize the service name, installation directories, port, and owner using options passed to the\ninstallation script. To see available options, simply do:",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "sudo bash ./install_solr_service.sh -help",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "Once the script completes, Solr will be installed as a service and running in the background on your server\n(on port 8983). To verify, you can do:",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "sudo service solr status",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "If you do not want to start the service immediately, pass the <span class=\"code\">-n</span> option. You can then start the service\nmanually later, e.g., after completing the configuration setup.",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "We'll cover some additional configuration settings you can make to fine-tune your Solr setup in a moment.\nBefore moving on, let’s take a closer look at the steps performed by the installation script. This gives you a\nbetter overview and will help you understand important details about your Solr installation when reading\nother pages in this guide; such as when a page refers to Solr home, you’ll know exactly where that is on your\nsystem.",
    "hierarchy": [
      "Run the Solr Installation Script"
    ],
    "pageId": 74
  },
  {
    "content": "The Solr home directory (not to be confused with the Solr installation directory) is where Solr manages core\ndirectories with index files. By default, the installation script uses <span class=\"code\">/var/solr/data</span>. If the <span class=\"code\">-d</span> option is used on\nthe install script, then this will change to the <span class=\"code\">data</span> subdirectory in the location given to the -d option. Take a\nmoment to inspect the contents of the Solr home directory on your system. If you do not <span class=\"link\">store </span><span class=\"code\">solr.xml</span><span class=\"link\"> in</span>\nZooKeeper<span class=\"fc0\">, the home directory must contain a <span class=\"code\">solr.xml</span> file. When Solr starts up, the Solr Control Script</span>",
    "hierarchy": [
      "Run the Solr Installation Script",
      "Solr Home Directory"
    ],
    "pageId": 74
  },
  {
    "content": "passes the location of the home directory using the <span class=\"ff2 fs1\">-Dsolr.solr.home=…</span> system property.",
    "hierarchy": [
    ],
    "pageId": 75
  },
  {
    "content": "The service installation script creates an environment specific include file that overrides defaults used by the\nbin/solr<span class=\"ff1 fs0\"> script. The main advantage of using an include file is that it provides a single location where all of</span>\nyour environment-specific overrides are defined. Take a moment to inspect the contents of the\n/etc/default/solr.in.sh<span class=\"ff1 fs0\"> file, which is the default path setup by the installation script. If you used the </span>-s\noption on the install script to change the name of the service, then the first part of the filename will be\ndifferent. For a service named <span class=\"ff2 fs1\">solr-demo</span>, the file will be named <span class=\"ff2 fs1\">/etc/default/solr-demo.in.sh</span>. There are\nmany settings that you can override using this file. However, at a minimum, this script needs to define the\nSOLR_PID_DIR<span class=\"ff1 fs0\"> and </span>SOLR_HOME<span class=\"ff1 fs0\"> variables, such as:</span>",
    "hierarchy": [
      "Environment Overrides Include File"
    ],
    "pageId": 75
  },
  {
    "content": "SOLR_PID_DIR=/var/solr\nSOLR_HOME=/var/solr/data",
    "hierarchy": [
      "Environment Overrides Include File"
    ],
    "pageId": 75
  },
  {
    "content": "The <span class=\"ff2 fs1\">SOLR_PID_DIR</span> variable sets the directory where the <span class=\"link\">control script</span> will write out a file containing the Solr\nserver's process ID.",
    "hierarchy": [
      "Environment Overrides Include File"
    ],
    "pageId": 75
  },
  {
    "content": "Solr uses Apache Log4J for logging. The installation script copies\n/opt/solr/server/resources/log4j.properties<span class=\"ff1 fs0\"> to </span>/var/solr/log4j.properties<span class=\"ff1 fs0\">. Take a moment to</span>\nverify that the Solr include file is configured to send logs to the correct location by checking the following\nsettings in <span class=\"ff2 fs1\">/etc/default/solr.in.sh</span>:",
    "hierarchy": [
      "Log Settings"
    ],
    "pageId": 75
  },
  {
    "content": "LOG4J_PROPS=/var/solr/log4j.properties\nSOLR_LOGS_DIR=/var/solr/logs",
    "hierarchy": [
      "Log Settings"
    ],
    "pageId": 75
  },
  {
    "content": "For more information about Log4J configuration, please see: <span class=\"link\">Configuring Logging</span>",
    "hierarchy": [
      "Log Settings"
    ],
    "pageId": 75
  },
  {
    "content": "When running a service like Solr on Linux, it's common to setup an init.d script so that system administrators\ncan control Solr using the service tool, such as: <span class=\"ff2 fs1\">service solr start</span>. The installation script creates a very\nbasic init.d script to help you get started. Take a moment to inspect the <span class=\"ff2 fs1\">/etc/init.d/solr</span> file, which is the\ndefault script name setup by the installation script. If you used the <span class=\"ff2 fs1\">-s</span> option on the install script to change\nthe name of the service, then the filename will be different. Notice that the following variables are setup for\nyour environment based on the parameters passed to the installation script:",
    "hierarchy": [
      "init.d Script"
    ],
    "pageId": 75
  },
  {
    "content": "SOLR_INSTALL_DIR=/opt/solr\nSOLR_ENV=/etc/default/solr.in.sh\nRUNAS=solr",
    "hierarchy": [
      "init.d Script"
    ],
    "pageId": 75
  },
  {
    "content": "The <span class=\"ff2 fs1\">SOLR_INSTALL_DIR</span> and <span class=\"ff2 fs1\">SOLR_ENV</span> variables should be self-explanatory. The <span class=\"ff2 fs1\">RUNAS</span> variable sets the\nowner of the Solr process, such as <span class=\"ff2 fs1\">solr</span>; if you don't set this value, the script will run Solr as <span class=\"code\">root</span>, which is\nnot recommended for production. You can use the <span class=\"ff2 fs1\">/etc/init.d/solr</span> script to start Solr by doing the\nfollowing as root:",
    "hierarchy": [
      "init.d Script"
    ],
    "pageId": 75
  },
  {
    "content": "service solr start",
    "hierarchy": [
    ],
    "pageId": 76
  },
  {
    "content": "The <span class=\"ff1 fs1\">/etc/init.d/solr</span> script also supports the <span class=\"code\">stop</span>, <span class=\"code\">restart</span>, and <span class=\"code\">status</span> commands. Please keep in mind\nthat the init script that ships with Solr is very basic and is intended to show you how to setup Solr as a\nservice. However, it's also common to use more advanced tools like <span class=\"code\">supervisord</span> or <span class=\"code\">upstart</span> to control Solr\nas a service on Linux. While showing how to integrate Solr with tools like supervisord is beyond the scope of\nthis guide, the <span class=\"ff1 fs1\">init.d/solr</span> script should provide enough guidance to help you get started. Also, the\ninstallation script sets the Solr service to start automatically when the host machine initializes.",
    "hierarchy": [
    ],
    "pageId": 76
  },
  {
    "content": "In the next section, we cover some additional environment settings to help you fine-tune your production\nsetup. However, before we move on, let's review what we’ve achieved thus far. Specifically, you should be\nable to control Solr using <span class=\"ff1 fs1\">/etc/init.d/solr</span>. Please verify the following commands work with your setup:",
    "hierarchy": [
      "Progress Check"
    ],
    "pageId": 76
  },
  {
    "content": "sudo service solr restart\nsudo service solr status",
    "hierarchy": [
      "Progress Check"
    ],
    "pageId": 76
  },
  {
    "content": "The status command should give some basic information about the running Solr node that looks similar to:",
    "hierarchy": [
      "Progress Check"
    ],
    "pageId": 76
  },
  {
    "content": "Solr process PID running on port 8983\n{\nÊ \"version\":\"5.0.0 - ubuntu - 2014-12-17 19:36:58\",\nÊ \"startTime\":\"2014-12-19T19:25:46.853Z\",\nÊ \"uptime\":\"0 days, 0 hours, 0 minutes, 8 seconds\",\nÊ \"memory\":\"85.4 MB (%17.4) of 490.7 MB\"}",
    "hierarchy": [
      "Progress Check"
    ],
    "pageId": 76
  },
  {
    "content": "If the <span class=\"ff1 fs1\">status</span> command is not successful, look for error messages in <span class=\"ff1 fs1\">/var/solr/logs/solr.log</span>.",
    "hierarchy": [
      "Progress Check"
    ],
    "pageId": 76
  },
  {
    "content": "The Merge Scheduler is configured in <span class=\"ff1 fs1\">solrconfig.xml</span> and defaults to <span class=\"ff1 fs1\">ConcurrentMergeScheduler</span>. This\nscheduler uses multiple threads to merge Lucene segments in the background.",
    "hierarchy": [
      "Fine-Tune Your Production Setup",
      "Dynamic Defaults for ConcurrentMergeScheduler"
    ],
    "pageId": 76
  },
  {
    "content": "By default, the <span class=\"ff1 fs1\">ConcurrentMergeScheduler</span> auto-detects whether the underlying disk drive is rotational or a\nSSD and sets defaults for <span class=\"ff1 fs1\">maxThreadCount</span> and <span class=\"ff1 fs1\">maxMergeCount</span> accordingly. If the disk drive is determined to\nbe rotational then the <span class=\"ff1 fs1\">maxThreadCount</span> is set to 1 and <span class=\"ff1 fs1\">maxMergeCount</span> is set to 6. Otherwise, <span class=\"ff1 fs1\">maxThreadCount</span>\nis set to 4 or half the number of processors available to the JVM whichever is greater and <span class=\"ff1 fs1\">maxMergeCount</span> is\nset to <span class=\"ff1 fs1\">maxThreadCount+5</span>.",
    "hierarchy": [
      "Fine-Tune Your Production Setup",
      "Dynamic Defaults for ConcurrentMergeScheduler"
    ],
    "pageId": 76
  },
  {
    "content": "This auto-detection works only on Linux and even then it is not guaranteed to be correct. On all other\nplatforms, the disk is assumed to be rotational. Therefore, if the auto-detection fails or is incorrect then\nindexing performance can suffer badly due to the wrong defaults.",
    "hierarchy": [
      "Fine-Tune Your Production Setup",
      "Dynamic Defaults for ConcurrentMergeScheduler"
    ],
    "pageId": 76
  },
  {
    "content": "The auto-detected value is exposed by the <span class=\"link\">Metrics API</span> with the key",
    "hierarchy": [
      "Fine-Tune Your Production Setup",
      "Dynamic Defaults for ConcurrentMergeScheduler"
    ],
    "pageId": 76
  },
  {
    "content": "solr.node:CONTAINER.fs.coreRoot.spins<span class=\"ff2 fs1\">. A value of </span>true<span class=\"ff2 fs1\"> denotes that the disk is detected to be a</span>\nrotational or spinning disk.",
    "hierarchy": [
    ],
    "pageId": 77
  },
  {
    "content": "It is safer to explicitly set values for <span class=\"ff1 fs0\">maxThreadCount</span> and <span class=\"ff1 fs0\">maxMergeCount</span> in the <span class=\"link\">IndexConfig section of</span>\nSolrConfig.xml<span class=\"fc0\"> so that values appropriate to your hardware are used.</span>",
    "hierarchy": [
    ],
    "pageId": 77
  },
  {
    "content": "Alternatively, the boolean system property <span class=\"ff1 fs0\">lucene.cms.override_spins</span> can be set in the <span class=\"ff1 fs0\">SOLR_OPTS</span>\nvariable in the include file to override the auto-detected value. Similarily, the system property\nlucene.cms.override_core_count<span class=\"ff2 fs1\"> can be set to the number of CPU cores to override the auto-detected</span>\nprocessor count.",
    "hierarchy": [
    ],
    "pageId": 77
  },
  {
    "content": "By default, the <span class=\"ff1 fs0\">bin/solr</span> script sets the maximum Java heap size to 512M (-Xmx512m), which is fine for\ngetting started with Solr. For production, you'll want to increase the maximum heap size based on the\nmemory requirements of your search application; values between 10 and 20 gigabytes are not uncommon\nfor production servers. When you need to change the memory settings for your Solr server, use the\nSOLR_JAVA_MEM<span class=\"ff2 fs1\"> variable in the include file, such as:</span>",
    "hierarchy": [
      "Memory and GC Settings"
    ],
    "pageId": 77
  },
  {
    "content": "SOLR_JAVA_MEM=\"-Xms10g -Xmx10g\"",
    "hierarchy": [
      "Memory and GC Settings"
    ],
    "pageId": 77
  },
  {
    "content": "Also, the <span class=\"link\">Solr Control Script</span> comes with a set of pre-configured Java Garbage Collection settings that have\nshown to work well with Solr for a number of different workloads. However, these settings may not work\nwell for your specific use of Solr. Consequently, you may need to change the GC settings, which should also\nbe done with the <span class=\"ff1 fs0\">GC_TUNE</span> variable in the <span class=\"ff1 fs0\">/etc/default/solr.in.sh</span> include file. For more information about\ntuning your memory and garbage collection settings, see: <span class=\"link\">JVM Settings</span>.",
    "hierarchy": [
      "Memory and GC Settings"
    ],
    "pageId": 77
  },
  {
    "content": "The <span class=\"ff1 fs0\">bin/solr</span> script registers the <span class=\"ff1 fs0\">bin/oom_solr.sh</span> script to be called by the JVM if an OutOfMemoryError\noccurs. The <span class=\"ff1 fs0\">oom_solr.sh</span> script will issue a <span class=\"ff1 fs0\">kill -9</span> to the Solr process that experiences the\nOutOfMemoryError<span class=\"ff2 fs1\">. This behavior is recommended when running in SolrCloud mode so that ZooKeeper is</span>\nimmediately notified that a node has experienced a non-recoverable error. Take a moment to inspect the\ncontents of the <span class=\"ff1 fs0\">/opt/solr/bin/oom_solr.sh</span> script so that you are familiar with the actions the script will\nperform if it is invoked by the JVM.",
    "hierarchy": [
      "Memory and GC Settings",
      "Out-of-Memory Shutdown Hook"
    ],
    "pageId": 77
  },
  {
    "content": "To run Solr in SolrCloud mode, you need to set the <span class=\"ff1 fs0\">ZK_HOST</span> variable in the include file to point to your\nZooKeeper ensemble. Running the embedded ZooKeeper is not supported in production environments. For\ninstance, if you have a ZooKeeper ensemble hosted on the following three hosts on the default client port\n2181 (zk1, zk2, and zk3), then you would set:",
    "hierarchy": [
      "Going to Production with SolrCloud"
    ],
    "pageId": 77
  },
  {
    "content": "ZK_HOST=zk1,zk2,zk3",
    "hierarchy": [
      "Going to Production with SolrCloud"
    ],
    "pageId": 77
  },
  {
    "content": "When the <span class=\"ff1 fs0\">ZK_HOST</span> variable is set, Solr will launch in \"cloud\" mode.",
    "hierarchy": [
      "Going to Production with SolrCloud"
    ],
    "pageId": 77
  },
  {
    "content": "If you're using a ZooKeeper instance that is shared by other systems, it’s recommended to isolate the\nSolrCloud znode tree using ZooKeeper’s chroot support. For instance, to ensure all znodes created by\nSolrCloud are stored under <span class=\"code\">/solr</span>, you can put <span class=\"code\">/solr</span> on the end of your <span class=\"code\">ZK_HOST</span> connection string, such as:",
    "hierarchy": [
      "ZooKeeper chroot"
    ],
    "pageId": 78
  },
  {
    "content": "ZK_HOST=zk1,zk2,zk3/solr",
    "hierarchy": [
      "ZooKeeper chroot"
    ],
    "pageId": 78
  },
  {
    "content": "Before using a chroot for the first time, you need to create the root path (znode) in ZooKeeper by using the\nSolr Control Script<span class=\"fc1\">. We can use the mkroot command for that:</span>",
    "hierarchy": [
      "ZooKeeper chroot"
    ],
    "pageId": 78
  },
  {
    "content": "bin/solr zk mkroot /solr -z <ZK_node>:<ZK_PORT>",
    "hierarchy": [
      "ZooKeeper chroot"
    ],
    "pageId": 78
  },
  {
    "content": "If you also want to bootstrap ZooKeeper with existing <span class=\"code\">solr_home</span>, you can instead use the\nzkcli.sh<span class=\"ff2 fs0\"> / </span>zkcli.bat<span class=\"ff2 fs0\"> </span>bootstrap<span class=\"ff2 fs0\"> command, which will also create the chroot path if it does</span>\nnot exist. See <span class=\"link\">Command Line Utilities</span> for more info.",
    "hierarchy": [
      "ZooKeeper chroot"
    ],
    "pageId": 78
  },
  {
    "content": "Use the <span class=\"code\">SOLR_HOST</span> variable in the include file to set the hostname of the Solr server.",
    "hierarchy": [
      "Solr Hostname"
    ],
    "pageId": 78
  },
  {
    "content": "SOLR_HOST=solr1.example.com",
    "hierarchy": [
      "Solr Hostname"
    ],
    "pageId": 78
  },
  {
    "content": "Setting the hostname of the Solr server is recommended, especially when running in SolrCloud mode, as this\ndetermines the address of the node when it registers with ZooKeeper.",
    "hierarchy": [
      "Solr Hostname"
    ],
    "pageId": 78
  },
  {
    "content": "Solr allows configuration properties to be overridden using Java system properties passed at startup using\nthe <span class=\"code\">-Dproperty=value</span> syntax. For instance, in <span class=\"code\">solrconfig.xml</span>, the default auto soft commit settings are set\nto:",
    "hierarchy": [
      "Override Settings in solrconfig.xml"
    ],
    "pageId": 78
  },
  {
    "content": "Ê <span class=\"fc4\"><maxTime></span>${solr.autoSoftCommit.maxTime:-1}<span class=\"fc4\"></maxTime></span>",
    "hierarchy": [
      "Override Settings in solrconfig.xml"
    ],
    "pageId": 78
  },
  {
    "content": "In general, whenever you see a property in a Solr configuration file that uses the\n${solr.PROPERTY:DEFAULT_VALUE}<span class=\"ff2 fs0\"> syntax, then you know it can be overridden using a Java system property.</span>\nFor instance, to set the maxTime for soft-commits to be 10 seconds, then you can start Solr with\n-Dsolr.autoSoftCommit.maxTime=10000<span class=\"ff2 fs0\">, such as:</span>",
    "hierarchy": [
      "Override Settings in solrconfig.xml"
    ],
    "pageId": 78
  },
  {
    "content": "bin/solr start -Dsolr.autoSoftCommit.maxTime=10000",
    "hierarchy": [
      "Override Settings in solrconfig.xml"
    ],
    "pageId": 78
  },
  {
    "content": "The <span class=\"code\">bin/solr</span> script simply passes options starting with <span class=\"code\">-D</span> on to the JVM during startup. For running in\nproduction, we recommend setting these properties in the <span class=\"code\">SOLR_OPTS</span> variable defined in the include file.",
    "hierarchy": [
      "Override Settings in solrconfig.xml"
    ],
    "pageId": 78
  },
  {
    "content": "Keeping with our soft-commit example, in <span class=\"ff2 fs1\">/etc/default/solr.in.sh</span>, you would do:",
    "hierarchy": [
    ],
    "pageId": 79
  },
  {
    "content": "SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=10000\"",
    "hierarchy": [
    ],
    "pageId": 79
  },
  {
    "content": "Two common settings that result in errors on *nix systems are file handles and user processes.",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "It is common for the default limits for number of processes and file handles to default to values that are too\nlow for a large Solr installation. The required number of each of these will increase based on a combination\nof the number of replicas hosted per node and the number of segments in the index for each replica.",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "The usual recommendation is to make processes and file handles at least 65,000 each, unlimited if possible.\nOn most *nix systems, this command will show the currently-defined limits:",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "ulimit -a",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "It is strongly recommended that file handle and process limits be permanently raised as above. The exact\nform of the command will vary per operating system, and some systems require editing configuration files\nand restarting your server. Consult your system administrators for guidance in your particular environment.",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "If these limits are exceeded, the problems reported by Solr vary depending on the specific\noperation responsible for exceeding the limit. Errors such as \"too many open files\",\n\"connection error\", and \"max processes exceeded\" have been reported, as well as\nSolrCloud recovery failures.",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "Since exceeding these limits can result in such varied symptoms it is <span class=\"ff5\">strongly</span> recommended\nthat these limits be permanently raised as recommended above.",
    "hierarchy": [
      "File Handles and Processes (ulimit settings)"
    ],
    "pageId": 79
  },
  {
    "content": "The <span class=\"ff2 fs1\">bin/solr</span> script is capable of running multiple instances on one machine, but for a <span class=\"code\">typical</span> installation,\nthis is not a recommended setup. Extra CPU and memory resources are required for each additional\ninstance. A single instance is easily capable of handling multiple indexes.",
    "hierarchy": [
      "Running Multiple Solr Nodes per Host"
    ],
    "pageId": 79
  },
  {
    "content": "For every recommendation, there are exceptions. For the recommendation above, that\nexception is mostly applicable when discussing extreme scalability. The best reason for\nrunning multiple Solr nodes on one host is decreasing the need for extremely large heaps.",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "When the Java heap gets very large, it can result in extremely long garbage collection\npauses, even with the GC tuning that the startup script provides by default. The exact point\nat which the heap is considered \"very large\" will vary depending on how Solr is used. This\nmeans that there is no hard number that can be given as a threshold, but if your heap is\nreaching the neighborhood of 16 to 32 gigabytes, it might be time to consider splitting\nnodes. Ideally this would mean more machines, but budget constraints might make that\nimpossible.",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "There is another issue once the heap reaches 32GB. Below 32GB, Java is able to use\ncompressed pointers, but above that point, larger pointers are required, which uses more\nmemory and slows down the JVM.",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "Because of the potential garbage collection issues and the particular issues that happen at\n32GB, if a single instance would require a 64GB heap, performance is likely to improve\ngreatly if the machine is set up with two nodes that each have a 31GB heap.",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "If your use case requires multiple instances, at a minimum you will need unique Solr home directories for\neach node you want to run; ideally, each home should be on a different physical disk so that multiple Solr\nnodes don't have to compete with each other when accessing files on disk. Having different Solr home\ndirectories implies that you’ll need a different include file for each node. Moreover, if using the\n/etc/init.d/solr<span class=\"code\"> script to control Solr as a service, then you’ll need a separate script for each node. The</span>\neasiest approach is to use the service installation script to add multiple services on the same host, such as:",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "sudo bash ./install_solr_service.sh solr-7.3.0.tgz -s solr2 -p 8984",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "The command shown above will add a service named <span class=\"ff4 fs2\">solr2</span> running on port 8984 using <span class=\"ff4 fs2\">/var/solr2</span> for\nwritable (aka \"live\") files; the second server will still be owned and run by the <span class=\"ff4 fs2\">solr</span> user and will use the Solr\ndistribution files in <span class=\"ff4 fs2\">/opt</span>. After installing the solr2 service, verify it works correctly by doing:",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "sudo service solr2 restart\nsudo service solr2 status",
    "hierarchy": [
    ],
    "pageId": 80
  },
  {
    "content": "If you are worried about data loss, and of course you <span class=\"code\">should</span> be, you need a way to back up your Solr indexes\nso that you can recover quickly in case of catastrophic failure.",
    "hierarchy": [
      "Making and Restoring Backups"
    ],
    "pageId": 81
  },
  {
    "content": "Solr provides two approaches to backing up and restoring Solr cores or collections, depending on how you\nare running Solr. If you run in SolrCloud mode, you will use the Collections API. If you run Solr in standalone\nmode, you will use the replication handler.",
    "hierarchy": [
      "Making and Restoring Backups"
    ],
    "pageId": 81
  },
  {
    "content": "Support for backups when running SolrCloud is provided with the <span class=\"link\">Collections API</span>. This allows the backups to\nbe generated across multiple shards, and restored to the same number of shards and replicas as the\noriginal collection.",
    "hierarchy": [
      "Making and Restoring Backups",
      "SolrCloud Backups"
    ],
    "pageId": 81
  },
  {
    "content": "Two commands are available:",
    "hierarchy": [
      "Making and Restoring Backups",
      "SolrCloud Backups"
    ],
    "pageId": 81
  },
  {
    "content": "action=BACKUP: This command backs up Solr indexes and configurations. More information is available\nin the section <span class=\"link\">Backup Collection</span>.",
    "hierarchy": [
      "Making and Restoring Backups",
      "SolrCloud Backups"
    ],
    "pageId": 81
  },
  {
    "content": "action=RESTORE: This command restores Solr indexes and configurations. More information is available\nin the section <span class=\"link\">Restore Collection</span>.",
    "hierarchy": [
      "Making and Restoring Backups",
      "SolrCloud Backups"
    ],
    "pageId": 81
  },
  {
    "content": "Backups and restoration uses Solr's replication handler. Out of the box, Solr includes implicit support for\nreplication so this API can be used. Configuration of the replication handler can, however, be customized by\ndefining your own replication handler in <span class=\"ff4 fs3\">solrconfig.xml</span>. For details on configuring the replication handler,\nsee the section <span class=\"link\">Configuring the ReplicationHandler</span>.",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups"
    ],
    "pageId": 81
  },
  {
    "content": "The <span class=\"ff4 fs3\">backup</span> API requires sending a command to the <span class=\"ff4 fs3\">/replication</span> handler to back up the system.",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "You can trigger a back-up with an HTTP command like this (replace \"gettingstarted\" with the name of the\ncore you are working with):",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "http://localhost:8983/solr/gettingstarted/replication?command=backup",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "The <span class=\"ff4 fs3\">backup</span> command is an asynchronous call, and it will represent data from the latest index commit point.\nAll indexing and search operations will continue to be executed against the index as usual.",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "Only one backup call can be made against a core at any point in time. While an ongoing backup operation is\nhappening subsequent calls for restoring will throw an exception.",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "The backup request can also take the following additional parameters:",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "location",
    "hierarchy": [
      "Making and Restoring Backups",
      "Standalone Mode Backups",
      "Backup API"
    ],
    "pageId": 81
  },
  {
    "content": "The path where the backup will be created. If the path is not absolute then the backup path will be\nrelative to Solr's instance directory. |name |The snapshot will be created in a directory called\nsnapshot.<name><span class=\"ff1 fs0\">. If a name is not specified then the directory name would have the following format:</span>\nsnapshot.<yyyyMMddHHmmssSSS><span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 82
  },
  {
    "content": "numberToKeep\nThe number of backups to keep. If <span class=\"ff2 fs1\">maxNumberOfBackups</span> has been specified on the replication handler in\nsolrconfig.xml<span class=\"ff1 fs0\">, </span>maxNumberOfBackups<span class=\"ff1 fs0\"> is always used and attempts to use </span>numberToKeep<span class=\"ff1 fs0\"> will cause an</span>\nerror. Also, this parameter is not taken into consideration if the backup name is specified. More\ninformation about <span class=\"ff2 fs1\">maxNumberOfBackups</span> can be found in the section <span class=\"link\">Configuring the ReplicationHandler</span>.",
    "hierarchy": [
    ],
    "pageId": 82
  },
  {
    "content": "repository\nThe name of the repository to be used for the backup. If no repository is specified then the local\nfilesystem repository will be used automatically.",
    "hierarchy": [
    ],
    "pageId": 82
  },
  {
    "content": "commitName\nThe name of the commit which was used while taking a snapshot using the CREATESNAPSHOT command.",
    "hierarchy": [
    ],
    "pageId": 82
  },
  {
    "content": "The <span class=\"ff2 fs1\">backup</span> operation can be monitored to see if it has completed by sending the <span class=\"ff2 fs1\">details</span> command to the\n/replication<span class=\"ff1 fs0\"> handler, as in this example:</span>",
    "hierarchy": [
      "Backup Status"
    ],
    "pageId": 82
  },
  {
    "content": "http://localhost:8983/solr/gettingstarted/replication?command=details&wt=xml",
    "hierarchy": [
      "Backup Status"
    ],
    "pageId": 82
  },
  {
    "content": "Ê <span class=\"fc4\"><str</span> <span class=\"fc5\">name</span>=<span class=\"fc6\">\"startTime\"<span class=\"fc4\">></span></span>Sun Apr 12 16:22:50 DAVT 2015<span class=\"fc4\"></str></span>\nÊ <span class=\"fc4\"><int</span> <span class=\"fc5\">name</span>=<span class=\"fc6\">\"fileCount\"<span class=\"fc4\">></span></span>10<span class=\"fc4\"></int></span>\nÊ <span class=\"fc4\"><str</span> <span class=\"fc5\">name</span>=<span class=\"fc6\">\"status\"<span class=\"fc4\">></span></span>success<span class=\"fc4\"></str></span>\nÊ <span class=\"fc4\"><str</span> <span class=\"fc5\">name</span>=<span class=\"fc6\">\"snapshotCompletedAt\"<span class=\"fc4\">></span></span>Sun Apr 12 16:22:50 DAVT 2015<span class=\"fc4\"></str></span>\nÊ <span class=\"fc4\"><str</span> <span class=\"fc5\">name</span>=<span class=\"fc6\">\"snapshotName\"<span class=\"fc4\">></span></span>my_backup<span class=\"fc4\"></str></span>",
    "hierarchy": [
      "Backup Status"
    ],
    "pageId": 82
  },
  {
    "content": "If it failed then a <span class=\"ff2 fs1\">snapShootException</span> will be sent in the response.",
    "hierarchy": [
      "Backup Status"
    ],
    "pageId": 82
  },
  {
    "content": "Restoring the backup requires sending the <span class=\"ff2 fs1\">restore</span> command to the <span class=\"ff2 fs1\">/replication</span> handler, followed by the\nname of the backup to restore.",
    "hierarchy": [
      "Restore API"
    ],
    "pageId": 82
  },
  {
    "content": "You can restore from a backup with a command like this:",
    "hierarchy": [
      "Restore API"
    ],
    "pageId": 82
  },
  {
    "content": "http://localhost:8983/solr/gettingstarted/replication?command=restore&name=backup_name",
    "hierarchy": [
      "Restore API"
    ],
    "pageId": 82
  },
  {
    "content": "This will restore the named index snapshot into the current core. Searches will start reflecting the snapshot\ndata once the restore is complete.",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "The <span class=\"ff2 fs1\">restore</span> request can take these additional parameters:",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "location\nThe location of the backup snapshot file. If not specified, it looks for backups in Solr's data directory.",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "name\nThe name of the backed up index snapshot to be restored. If the name is not provided it looks for\nbackups with <span class=\"ff2 fs1\">snapshot.<timestamp></span> format in the location directory. It picks the latest timestamp\nbackup in that case.",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "repository\nThe name of the repository to be used for the backup. If no repository is specified then the local\nfilesystem repository will be used automatically.",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "The <span class=\"ff2 fs1\">restore</span> command is an asynchronous call. Once the restore is complete the data reflected will be of the\nbacked up index which was restored.",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "Only one <span class=\"ff2 fs1\">restore</span> call can can be made against a core at one point in time. While an ongoing restore\noperation is happening subsequent calls for restoring will throw an exception.",
    "hierarchy": [
    ],
    "pageId": 83
  },
  {
    "content": "You can also check the status of a <span class=\"ff2 fs1\">restore</span> operation by sending the <span class=\"ff2 fs1\">restorestatus</span> command to the\n/replication<span class=\"ff1 fs0\"> handler, as in this example:</span>",
    "hierarchy": [
      "Restore Status API"
    ],
    "pageId": 83
  },
  {
    "content": "http://localhost:8983/solr/gettingstarted/replication?command=restorestatus&wt=xml",
    "hierarchy": [
      "Restore Status API"
    ],
    "pageId": 83
  },
  {
    "content": "Ê <span class=\"fc3\"><lst</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"responseHeader\"<span class=\"fc3\">></span></span>\nÊ   <span class=\"fc3\"><int</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"status\"<span class=\"fc3\">></span></span>0<span class=\"fc3\"></int></span>\nÊ   <span class=\"fc3\"><int</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"QTime\"<span class=\"fc3\">></span></span>0<span class=\"fc3\"></int></span>\nÊ <span class=\"fc3\"></lst></span>\nÊ <span class=\"fc3\"><lst</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"restorestatus\"<span class=\"fc3\">></span></span>\nÊ   <span class=\"fc3\"><str</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"snapshotName\"<span class=\"fc3\">></span></span>snapshot.<span class=\"fc3\"><name></str></span>\nÊ   <span class=\"fc3\"><str</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"status\"<span class=\"fc3\">></span></span>success<span class=\"fc3\"></str></span>\nÊ <span class=\"fc3\"></lst></span>",
    "hierarchy": [
      "Restore Status API"
    ],
    "pageId": 83
  },
  {
    "content": "The status value can be \"In Progress\", \"success\" or \"failed\". If it failed then an \"exception\" will also be sent\nin the response.",
    "hierarchy": [
      "Restore Status API"
    ],
    "pageId": 83
  },
  {
    "content": "The snapshot functionality is different from the backup functionality as the index files aren't copied",
    "hierarchy": [
      "Create Snapshot API"
    ],
    "pageId": 83
  },
  {
    "content": "anywhere. The index files are snapshotted in the same index directory and can be referenced while taking\nbackups.",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "You can trigger a snapshot command with an HTTP command like this (replace \"techproducts\" with the\nname of the core you are working with):",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "http://localhost:8983/solr/admin/cores?action=CREATESNAPSHOT&core=techproducts&commitName=commit1",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "The <span class=\"code\">CREATESNAPSHOT</span> request parameters are:",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "commitName\nThe name to store the snapshot as.",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "core\nThe name of the core to perform the snapshot on.",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "async\nRequest ID to track this action which will be processed asynchronously.",
    "hierarchy": [
    ],
    "pageId": 84
  },
  {
    "content": "The <span class=\"code\">LISTSNAPSHOTS</span> command lists all the taken snapshots for a particular core.",
    "hierarchy": [
      "List Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "You can trigger a list snapshot command with an HTTP command like this (replace \"techproducts\" with the\nname of the core you are working with):",
    "hierarchy": [
      "List Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "http://localhost:8983/solr/admin/cores?action=LISTSNAPSHOTS&core=techproducts&commitName=commit1",
    "hierarchy": [
      "List Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "The list snapshot request parameters are:",
    "hierarchy": [
      "List Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "core\nThe name of the core to whose snapshots we want to list.",
    "hierarchy": [
      "List Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "async\nRequest ID to track this action which will be processed asynchronously.",
    "hierarchy": [
      "List Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "The <span class=\"code\">DELETESNAPSHOT</span> command deletes a snapshot for a particular core.",
    "hierarchy": [
      "Delete Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "You can trigger a delete snapshot with an HTTP command like this (replace \"techproducts\" with the name of\nthe core you are working with):",
    "hierarchy": [
      "Delete Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "http://localhost:8983/solr/admin/cores?action=DELETESNAPSHOT&core=techproducts&commitName=commit1",
    "hierarchy": [
      "Delete Snapshot API"
    ],
    "pageId": 84
  },
  {
    "content": "The delete snapshot request parameters are:",
    "hierarchy": [
    ],
    "pageId": 85
  },
  {
    "content": "commitName\nSpecify the commit name to be deleted",
    "hierarchy": [
    ],
    "pageId": 85
  },
  {
    "content": "core\nThe name of the core whose snapshot we want to delete",
    "hierarchy": [
    ],
    "pageId": 85
  },
  {
    "content": "async\nRequest ID to track this action which will be processed asynchronously",
    "hierarchy": [
    ],
    "pageId": 85
  },
  {
    "content": "Solr provides interfaces to plug different storage systems for backing up and restoring. For example, you\ncan have a Solr cluster running on a local filesystem like EXT3 but you can backup the indexes to a HDFS\nfilesystem or vice versa.",
    "hierarchy": [
      "Backup/Restore Storage Repositories"
    ],
    "pageId": 85
  },
  {
    "content": "The repository interfaces needs to be configured in the <span class=\"ff2 fs1\">solr.xml</span> file. While running backup/restore\ncommands we can specify the repository to be used.",
    "hierarchy": [
      "Backup/Restore Storage Repositories"
    ],
    "pageId": 85
  },
  {
    "content": "If no repository is configured then the local filesystem repository will be used automatically.",
    "hierarchy": [
      "Backup/Restore Storage Repositories"
    ],
    "pageId": 85
  },
  {
    "content": "Example <span class=\"ff2 fs1\">solr.xml</span> section to configure a repository like <span class=\"link\">HDFS</span>:",
    "hierarchy": [
      "Backup/Restore Storage Repositories"
    ],
    "pageId": 85
  },
  {
    "content": "Ê <span class=\"fc3\"><repository</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"hdfs\"</span> <span class=\"fc4\">class</span>=<span class=\"fc5\">\"org.apache.solr.core.backup.repository.HdfsBackupRepository\"</span>",
    "hierarchy": [
      "Backup/Restore Storage Repositories"
    ],
    "pageId": 85
  },
  {
    "content": "Ê   <span class=\"fc3\"><str</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"location\"<span class=\"fc3\">></span></span>${solr.hdfs.default.backup.path}<span class=\"fc3\"></str></span>\nÊ   <span class=\"fc3\"><str</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"solr.hdfs.home\"<span class=\"fc3\">></span></span>${solr.hdfs.home:}<span class=\"fc3\"></str></span>\nÊ   <span class=\"fc3\"><str</span> <span class=\"fc4\">name</span>=<span class=\"fc5\">\"solr.hdfs.confdir\"<span class=\"fc3\">></span></span>${solr.hdfs.confdir:}<span class=\"fc3\"></str></span>\nÊ <span class=\"fc3\"></repository></span>",
    "hierarchy": [
      "Backup/Restore Storage Repositories"
    ],
    "pageId": 85
  },
  {
    "content": "Solr has support for writing and reading its index and transaction log files to the HDFS distributed\nfilesystem.",
    "hierarchy": [
      "Running Solr on HDFS"
    ],
    "pageId": 86
  },
  {
    "content": "This does not use Hadoop MapReduce to process Solr data, rather it only uses the HDFS filesystem for index\nand transaction log file storage.",
    "hierarchy": [
      "Running Solr on HDFS"
    ],
    "pageId": 86
  },
  {
    "content": "To use HDFS rather than a local filesystem, you must be using Hadoop 2.x and you will need to instruct Solr\nto use the <span class=\"code\">HdfsDirectoryFactory</span>. There are also several additional parameters to define. These can be set\nin one of three ways:",
    "hierarchy": [
      "Running Solr on HDFS"
    ],
    "pageId": 86
  },
  {
    "content": "Pass JVM arguments to the <span class=\"code\">bin/solr</span> script. These would need to be passed every time you start Solr\nwith <span class=\"code\">bin/solr</span>.",
    "hierarchy": [
      "Running Solr on HDFS"
    ],
    "pageId": 86
  },
  {
    "content": "Modify <span class=\"code\">solr.in.sh</span> (or <span class=\"code\">solr.in.cmd</span> on Windows) to pass the JVM arguments automatically when using\nbin/solr<span class=\"ff2 fs1\"> without having to set them manually.</span>",
    "hierarchy": [
      "Running Solr on HDFS"
    ],
    "pageId": 86
  },
  {
    "content": "Define the properties in <span class=\"code\">solrconfig.xml</span>. These configuration changes would need to be repeated for\nevery collection, so is a good option if you only want some of your collections stored in HDFS.",
    "hierarchy": [
      "Running Solr on HDFS"
    ],
    "pageId": 86
  },
  {
    "content": "For standalone Solr instances, there are a few parameters you should modify before starting Solr. These can\nbe set in <span class=\"code\">solrconfig.xml</span> (more on that <span class=\"link\">below</span>), or passed to the <span class=\"code\">bin/solr</span> script at startup.",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "You need to use an <span class=\"code\">HdfsDirectoryFactory</span> and a data directory in the form <span class=\"code\">hdfs://host:port/path</span>",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "You need to specify an <span class=\"code\">updateLog</span> location in the form <span class=\"code\">hdfs://host:port/path</span>",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "You should specify a lock factory type of <span class=\"code\">'hdfs'</span> or none.",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "If you do not modify <span class=\"code\">solrconfig.xml</span>, you can instead start Solr on HDFS with the following command:",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "bin/solr start -Dsolr.directoryFactory=HdfsDirectoryFactory\nÊ    -Dsolr.lock.type=hdfs\nÊ    -Dsolr.data.dir=hdfs://host:port/path\nÊ    -Dsolr.updatelog=hdfs://host:port/path",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "This example will start Solr in standalone mode, using the defined JVM properties (explained in more detail\nbelow<span class=\"fc1\">).</span>",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "Standalone Solr Instances"
    ],
    "pageId": 86
  },
  {
    "content": "In SolrCloud mode, it's best to leave the data and update log directories as the defaults Solr comes with and\nsimply specify the <span class=\"code\">solr.hdfs.home</span>. All dynamically created collections will create the appropriate directories\nautomatically under the <span class=\"code\">solr.hdfs.home</span> root directory.",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "SolrCloud Instances"
    ],
    "pageId": 86
  },
  {
    "content": "Set <span class=\"code\">solr.hdfs.home</span> in the form <span class=\"code\">hdfs://host:port/path</span>",
    "hierarchy": [
      "Running Solr on HDFS",
      "Starting Solr on HDFS",
      "SolrCloud Instances"
    ],
    "pageId": 86
  },
  {
    "content": "<span class=\"ls1\">You should specify a lock factory type of <span class=\"ff2 fs1\">'hdfs'</span> or none.</span>",
    "hierarchy": [
    ],
    "pageId": 87
  },
  {
    "content": "bin/solr start -c -Dsolr.directoryFactory=HdfsDirectoryFactory\nÊ    -Dsolr.lock.type=hdfs\nÊ    -Dsolr.hdfs.home=hdfs://host:port/path",
    "hierarchy": [
    ],
    "pageId": 87
  },
  {
    "content": "This command starts Solr in SolrCloud mode, using the defined JVM properties.",
    "hierarchy": [
    ],
    "pageId": 87
  },
  {
    "content": "The examples above assume you will pass JVM arguments as part of the start command every time you use\nbin/solr<span class=\"ff1 fs0\"> to start Solr. However, </span>bin/solr<span class=\"ff1 fs0\"> looks for an include file named </span>solr.in.sh<span class=\"ff1 fs0\"> (</span>solr.in.cmd<span class=\"ff1 fs0\"> on</span>\nWindows) to set environment variables. By default, this file is found in the <span class=\"ff2 fs1\">bin</span> directory, and you can modify\nit to permanently add the <span class=\"ff2 fs1\">HdfsDirectoryFactory</span> settings and ensure they are used every time Solr is\nstarted.",
    "hierarchy": [
      "Modifying solr.in.sh (*nix) or solr.in.cmd (Windows)"
    ],
    "pageId": 87
  },
  {
    "content": "For example, to set JVM arguments to always use HDFS when running in SolrCloud mode (as shown above),\nyou would add a section such as this:",
    "hierarchy": [
      "Modifying solr.in.sh (*nix) or solr.in.cmd (Windows)"
    ],
    "pageId": 87
  },
  {
    "content": "# Set HDFS DirectoryFactory & Settings\n-Dsolr.directoryFactory=HdfsDirectoryFactory \\\n-Dsolr.lock.type=hdfs \\\n-Dsolr.hdfs.home=hdfs://host:port/path \\",
    "hierarchy": [
      "Modifying solr.in.sh (*nix) or solr.in.cmd (Windows)"
    ],
    "pageId": 87
  },
  {
    "content": "For performance, the <span class=\"ff2 fs1\">HdfsDirectoryFactory</span> uses a Directory that will cache HDFS blocks. This caching\nmechanism replaces the standard file system cache that Solr utilizes. By default, this cache is allocated off-\nheap. This cache will often need to be quite large and you may need to raise the off-heap memory limit for\nthe specific JVM you are running Solr in. For the Oracle/OpenJDK JVMs, the following is an example\ncommand-line parameter that you can use to raise the limit when starting Solr:",
    "hierarchy": [
      "The Block Cache"
    ],
    "pageId": 87
  },
  {
    "content": "-XX:MaxDirectMemorySize=20g",
    "hierarchy": [
      "The Block Cache"
    ],
    "pageId": 87
  },
  {
    "content": "The <span class=\"ff2 fs1\">HdfsDirectoryFactory</span> has a number of settings defined as part of the <span class=\"ff2 fs1\">directoryFactory</span>\nconfiguration.",
    "hierarchy": [
      "HdfsDirectoryFactory Parameters"
    ],
    "pageId": 87
  },
  {
    "content": "solr.hdfs.home\nA root location in HDFS for Solr to write collection data to. Rather than specifying an HDFS location for the\ndata directory or update log directory, use this to specify one root location and have everything\nautomatically created within this HDFS location. The structure of this parameter is\nhdfs://host:port/path/solr<span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
      "HdfsDirectoryFactory Parameters",
      "Solr HDFS Settings"
    ],
    "pageId": 87
  },
  {
    "content": "solr.hdfs.blockcache.enabled\nEnable the blockcache. The default is <span class=\"ff2 fs1\">true</span>.",
    "hierarchy": [
      "Block Cache Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.blockcache.read.enabled\nEnable the read cache. The default is <span class=\"ff2 fs1\">true</span>.",
    "hierarchy": [
      "Block Cache Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.blockcache.direct.memory.allocation\nEnable direct memory allocation. If this is <span class=\"ff2 fs1\">false</span>, heap is used. The default is <span class=\"ff2 fs1\">true</span>.",
    "hierarchy": [
      "Block Cache Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.blockcache.slab.count\nNumber of memory slabs to allocate. Each slab is 128 MB in size. The default is <span class=\"ff2 fs1\">1</span>.",
    "hierarchy": [
      "Block Cache Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.blockcache.global\nEnable/Disable using one global cache for all SolrCores. The settings used will be from the first\nHdfsDirectoryFactory created. The default is <span class=\"ff2 fs1\">true</span>.",
    "hierarchy": [
      "Block Cache Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.nrtcachingdirectory.enable\ntrue | Enable the use of NRTCachingDirectory. The default is <span class=\"ff2 fs1\">true</span>.",
    "hierarchy": [
      "NRTCachingDirectory Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.nrtcachingdirectory.maxmergesizemb\nNRTCachingDirectory max segment size for merges. The default is <span class=\"ff2 fs1\">16</span>.",
    "hierarchy": [
      "NRTCachingDirectory Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.nrtcachingdirectory.maxcachedmb\nNRTCachingDirectory max cache size. The default is <span class=\"ff2 fs1\">192</span>.",
    "hierarchy": [
      "NRTCachingDirectory Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.confdir\nPass the location of HDFS client configuration files - needed for HDFS HA for example.",
    "hierarchy": [
      "HDFS Client Configuration Settings"
    ],
    "pageId": 88
  },
  {
    "content": "Hadoop can be configured to use the Kerberos protocol to verify user identity when trying to access core\nservices like HDFS. If your HDFS directories are protected using Kerberos, then you need to configure Solr's\nHdfsDirectoryFactory to authenticate using Kerberos in order to read and write to HDFS. To enable Kerberos\nauthentication from Solr, you need to set the following parameters:",
    "hierarchy": [
      "Kerberos Authentication Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.security.kerberos.enabled\nSet to <span class=\"ff2 fs1\">true</span> to enable Kerberos authentication. The default is <span class=\"ff2 fs1\">false</span>.",
    "hierarchy": [
      "Kerberos Authentication Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.security.kerberos.keytabfile\nA keytab file contains pairs of Kerberos principals and encrypted keys which allows for password-less\nauthentication when Solr attempts to authenticate with secure Hadoop.",
    "hierarchy": [
      "Kerberos Authentication Settings"
    ],
    "pageId": 88
  },
  {
    "content": "This file will need to be present on all Solr servers at the same path provided in this parameter.",
    "hierarchy": [
      "Kerberos Authentication Settings"
    ],
    "pageId": 88
  },
  {
    "content": "solr.hdfs.security.kerberos.principal",
    "hierarchy": [
      "Kerberos Authentication Settings"
    ],
    "pageId": 88
  },
  {
    "content": "The Kerberos principal that Solr should use to authenticate to secure Hadoop; the format of a typical\nKerberos V5 principal is: <span class=\"ff2 fs1\">primary/instance@realm</span>.",
    "hierarchy": [
    ],
    "pageId": 89
  },
  {
    "content": "Here is a sample <span class=\"ff2 fs1\">solrconfig.xml</span> configuration for storing Solr indexes on HDFS:",
    "hierarchy": [
      "Example solrconfig.xml for HDFS"
    ],
    "pageId": 89
  },
  {
    "content": "Ê <span class=\"fc2\"><str</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.home\"<span class=\"fc2\">></span></span>hdfs://host:port/solr<span class=\"fc2\"></str></span>\nÊ <span class=\"fc2\"><bool</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.blockcache.enabled\"<span class=\"fc2\">></span></span>true<span class=\"fc2\"></bool></span>\nÊ <span class=\"fc2\"><int</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.blockcache.slab.count\"<span class=\"fc2\">></span></span>1<span class=\"fc2\"></int></span>\nÊ <span class=\"fc2\"><bool</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.blockcache.direct.memory.allocation\"<span class=\"fc2\">></span></span>true<span class=\"fc2\"></bool></span>\nÊ <span class=\"fc2\"><int</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.blockcache.blocksperbank\"<span class=\"fc2\">></span></span>16384<span class=\"fc2\"></int></span>\nÊ <span class=\"fc2\"><bool</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.blockcache.read.enabled\"<span class=\"fc2\">></span></span>true<span class=\"fc2\"></bool></span>\nÊ <span class=\"fc2\"><bool</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.nrtcachingdirectory.enable\"<span class=\"fc2\">></span></span>true<span class=\"fc2\"></bool></span>\nÊ <span class=\"fc2\"><int</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.nrtcachingdirectory.maxmergesizemb\"<span class=\"fc2\">></span></span>16<span class=\"fc2\"></int></span>\nÊ <span class=\"fc2\"><int</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.nrtcachingdirectory.maxcachedmb\"<span class=\"fc2\">></span></span>192<span class=\"fc2\"></int></span>",
    "hierarchy": [
      "Example solrconfig.xml for HDFS"
    ],
    "pageId": 89
  },
  {
    "content": "If using Kerberos, you will need to add the three Kerberos related properties to the <span class=\"ff2 fs1\"><directoryFactory></span>\nelement in <span class=\"ff2 fs1\">solrconfig.xml</span>, such as:",
    "hierarchy": [
      "Example solrconfig.xml for HDFS"
    ],
    "pageId": 89
  },
  {
    "content": "Ê  ...\nÊ <span class=\"fc2\"><bool</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.security.kerberos.enabled\"<span class=\"fc2\">></span></span>true<span class=\"fc2\"></bool></span>\nÊ <span class=\"fc2\"><str</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.security.kerberos.keytabfile\"<span class=\"fc2\">></span></span>/etc/krb5.keytab<span class=\"fc2\"></str></span>\nÊ <span class=\"fc2\"><str</span> <span class=\"fc3\">name</span>=<span class=\"fc4\">\"solr.hdfs.security.kerberos.principal\"<span class=\"fc2\">></span></span>solr/admin@KERBEROS.COM<span class=\"fc2\"></str></span>",
    "hierarchy": [
      "Example solrconfig.xml for HDFS"
    ],
    "pageId": 89
  },
  {
    "content": "The ability to automatically add new replicas when the Overseer notices that a shard has gone down was\npreviously only available to users running Solr in HDFS, but it is now available to all users via Solr's\nautoscaling framework. See the section <span class=\"link\">Auto Add Replicas Trigger</span> for details on how to enable and disable\nthis feature.",
    "hierarchy": [
      "Automatically Add Replicas in SolrCloud"
    ],
    "pageId": 89
  },
  {
    "content": "The ability to enable or disable the autoAddReplicas feature with cluster properties has\nbeen deprecated and will be removed in a future version. All users of this feature who have\npreviously used that approach are encouraged to change their configurations to use the\nautoscaling framework to ensure continued operation of this feature in their Solr\ninstallations.",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "For users using this feature with the deprecated configuration, you can temporarily disable\nit cluster-wide by setting the cluster property <span class=\"code\">autoAddReplicas</span> to <span class=\"code\">false</span>, as in these\nexamples:",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "http://localhost:8983/solr/admin/collections?action=CLUSTERPROP&name=autoAddRepli\ncas&val=false",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "curl -X POST -H 'Content-type: application/json' -d '{\"set-property\":\n{\"name\":\"autoAddReplicas\", \"val\":false}}' http://localhost:8983/api/cluster",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "Re-enable the feature by unsetting the <span class=\"code\">autoAddReplicas</span> cluster property. When no <span class=\"code\">val</span>\nparameter is provided, the cluster property is unset:",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "http://localhost:8983/solr/admin/collections?action=CLUSTERPROP&name=autoAddRepli\ncas",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "curl -X POST -H 'Content-type: application/json' -d '{\"set-property\":\n{\"name\":\"autoAddReplicas\"}}' http://localhost:8983/api/cluster",
    "hierarchy": [
    ],
    "pageId": 90
  },
  {
    "content": "This guide is a tutorial on how to set up a multi-node SolrCloud cluster on <span class=\"link\">Amazon Web Services (AWS) EC2</span>\ninstances for early development and design.",
    "hierarchy": [
      "SolrCloud on AWS EC2"
    ],
    "pageId": 91
  },
  {
    "content": "This tutorial is not meant for production systems. For one, it uses Solr's embedded ZooKeeper instance, and\nfor production you should have at least 3 ZooKeeper nodes in an ensemble. There are additional steps you\nshould take for a production installation; refer to <span class=\"link\">Taking Solr to Production</span> for how to deploy Solr in\nproduction.",
    "hierarchy": [
      "SolrCloud on AWS EC2"
    ],
    "pageId": 91
  },
  {
    "content": "In this guide we are going to:",
    "hierarchy": [
      "SolrCloud on AWS EC2"
    ],
    "pageId": 91
  },
  {
    "content": "1.Launch multiple AWS EC2 instances\n◦Create new <span class=\"ff4\">Security Group</span>\n◦Configure instances and launch\n2.Install, configure and start Solr on newly launched EC2 instances\n◦Install system prerequisites: Java 1.8 and later\n◦Download latest version of Solr\n◦Start the Solr nodes in cloud mode\n3.Create a collection, index documents and query the system\n◦Create collection with multiple shards and replicas\n◦Index documents to the newly created collection\n◦Verify documents presence by querying the collection",
    "hierarchy": [
      "SolrCloud on AWS EC2"
    ],
    "pageId": 91
  },
  {
    "content": "To use this guide, you must have the following:",
    "hierarchy": [
      "SolrCloud on AWS EC2",
      "Before You Start"
    ],
    "pageId": 91
  },
  {
    "content": "An <span class=\"link\">AWS</span> account.",
    "hierarchy": [
      "SolrCloud on AWS EC2",
      "Before You Start"
    ],
    "pageId": 91
  },
  {
    "content": "Familiarity with setting up a single-node SolrCloud on local machine. Refer to the <span class=\"link\">Solr Tutorial</span> if you have\nnever used Solr before.",
    "hierarchy": [
      "SolrCloud on AWS EC2",
      "Before You Start"
    ],
    "pageId": 91
  },
  {
    "content": "1.Navigate to the <span class=\"link\">AWS EC2 console</span> and to the region of your choice.\n2.Configure an <span class=\"link\">AWS security group</span> which will limit access to the installation and allow our launched EC2\ninstances to talk to each other without restrictions.",
    "hierarchy": [
      "SolrCloud on AWS EC2",
      "Launch EC2 instances",
      "Create new Security Group"
    ],
    "pageId": 91
  },
  {
    "content": "a.From the EC2 Dashboard, click <span class=\"ff1\">[<span class=\"ff5\"> </span>Security Groups<span class=\"ff5\"> </span>]</span> from the left-hand menu, under \"Network &\nSecurity\".\nb.Click <span class=\"ff1\">[<span class=\"ff5\"> </span>Create Security Group<span class=\"ff5\"> </span>]</span> under the <span class=\"ff4\">Security Groups</span> section. Give your security group a\ndescriptive name.",
    "hierarchy": [
      "SolrCloud on AWS EC2",
      "Launch EC2 instances",
      "Create new Security Group"
    ],
    "pageId": 91
  },
  {
    "content": "c.<span class=\"ls1\">You can select one of the existing <span class=\"link\">VPCs</span> or create a new one.</span>\nd.<span class=\"ls1\">We need two ports open for our cloud here:</span>\ni.<span class=\"ls1\">Solr port. In this example we will use Solr's default port 8983.</span>\nii.<span class=\"ls1\">ZooKeeper Port: We’ll use Solr’s embedded ZooKeeper, so we’ll use the default port 9983 (see the</span>\nDeploying with External ZooKeeper<span class=\"fc0\"> to configure external ZooKeeper).</span>\ne.<span class=\"ls1\">Click <span class=\"ff2\">[<span class=\"code\"> </span>Inbound<span class=\"code\"> </span>]</span> to set inbound network rules, then select <span class=\"ff2\">[<span class=\"code\"> </span>Add Rule<span class=\"code\"> </span>]</span>. Select \"Custom TCP\" as the</span>\ntype. Enter 8983 for the \"Port Range\" and choose \"My IP for the Source, then enter your public IP.\nCreate a second rule with the same type and source, but enter 9983 for the port.",
    "hierarchy": [
    ],
    "pageId": 92
  },
  {
    "content": "This will limit access to your current machine. If you want wider access to the instance in order to\ncollaborate with others, you can specify that, but make sure you only allow as much access as\nneeded. A Solr instance should not be exposed to general Internet traffic.",
    "hierarchy": [
    ],
    "pageId": 92
  },
  {
    "content": "f.<span class=\"ls1\">Add another rule for SSH access. Choose \"SSH\" as the type, and again \"My IP\" for the source and</span>\nagain enter your public IP. You need SSH access on all instances to install and configure Solr.\ng.<span class=\"ls1\">Review the details, your group configuration should look like this:</span>",
    "hierarchy": [
    ],
    "pageId": 92
  },
  {
    "content": "h.<span class=\"ls1\">Click <span class=\"ff2\">[<span class=\"code\"> </span>Create<span class=\"code\"> </span>]</span> when finished.</span>\ni.<span class=\"ls1\">We need to modify the rules so that instances that are part of the group can talk to all other instances</span>\nthat are part of the same group. We could not do this while creating the group, so we need to edit the\ngroup after creating it to add this.\ni.<span class=\"ls1\">Select the newly created group in the Security Group overview table. Under the \"Inbound\" tab,</span>\nclick <span class=\"ff2\">[<span class=\"code\"> </span>Edit<span class=\"code\"> </span>]</span>.\nii.<span class=\"ls1\">Click <span class=\"ff2\">[<span class=\"code\"> </span>Add rule<span class=\"code\"> </span>]</span>. Choose <span class=\"ff4 fs1\">All TCP</span> from the pulldown list for the type, and enter <span class=\"ff4 fs1\">0-65535</span> for the</span>\nport range. Specify the name of the current Security Group as the <span class=\"ff4 fs1\">solr-sample</span>.\nj.<span class=\"ls1\">Review the details, your group configuration should now look like this:</span>",
    "hierarchy": [
    ],
    "pageId": 92
  },
  {
    "content": "k.<span class=\"ls1\">Click <span class=\"ff2\">[<span class=\"code\"> </span>Save<span class=\"code\"> </span>]</span> when finished.</span>",
    "hierarchy": [
    ],
    "pageId": 93
  },
  {
    "content": "Once the security group is in place, you can choose <span class=\"ff2\">[<span class=\"code\"> </span>Instances<span class=\"code\"> </span>]</span> from the left-hand navigation menu.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "Under Instances, click <span class=\"ff2\">[<span class=\"code\"> </span>Launch Instance<span class=\"code\"> </span>]</span> button and follow the wizard steps:",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "1.<span class=\"ls1\">Choose your Amazon Machine Image (AMI): Choose <span class=\"ff2\">Amazon Linux AMI, SSD Volume Type</span> as the AMI.</span>\nThere are both commercial AMIs and Community based AMIs available, e.g., Amazon Linux AMI (HVM),\nSSD Volume Type, but this is a nice AMI to use for our purposes. Click <span class=\"ff2\">[<span class=\"code\"> </span>Select<span class=\"code\"> </span>]</span> next to the image you\nchoose.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "2.<span class=\"ls1\">The next screen asks you to choose the instance type, <span class=\"ff2\">t2.medium</span> is sufficient. Choose it from the list,</span>\nthen click <span class=\"ff2\">[<span class=\"code\"> </span>Configure Instance Details<span class=\"code\"> </span>]</span>.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "3.<span class=\"ls1\">Configure the instance. Enter <span class=\"ff2\">2</span> in the \"Number of instances\" field. Make sure the setting for \"Auto-</span>\nassign Public IP\" is \"Enabled\".",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "4.<span class=\"ls1\">When finished, click <span class=\"ff2\">[<span class=\"code\"> </span>Add Storage<span class=\"code\"> </span>]</span>. The default of <span class=\"ff2\">8 GB</span> for size and <span class=\"ff2\">General Purpose SSD</span> for the</span>\nvolume type is sufficient for running this quick start. Optionally select \"Delete on termination\" if you\nknow you won't need the data stored in Solr indexes after you terminate the instances.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "5.<span class=\"ls1\">When finished, click <span class=\"ff2\">[<span class=\"code\"> </span>Add Tags<span class=\"code\"> </span>]</span>. You do not have to add any tags for this quick start, but you can add</span>\nthem if you want.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "6.<span class=\"ls1\">Click <span class=\"ff2\">[<span class=\"code\"> </span>Configure Security Group<span class=\"code\"> </span>]</span>. Choose <span class=\"ff2\">Select an existing security group</span> and select the security</span>\ngroup you created earlier: <span class=\"ff4 fs2\">solr-sample</span>. You should see the expected inbound rules at the bottom of the\npage.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "7.<span class=\"ls1\">Click <span class=\"ff2\">[<span class=\"code\"> </span>Review<span class=\"code\"> </span>]</span>.</span>\n8.<span class=\"ls1\">If everything looks correct, click <span class=\"ff2\">[<span class=\"code\"> </span>Launch<span class=\"code\"> </span>]</span>.</span>\n9.<span class=\"ls1\">Select an existing “private key file” or create a new one and download to your local machine so you will</span>\nbe able to login into the instances via SSH.",
    "hierarchy": [
      "Configure Instances and Launch"
    ],
    "pageId": 93
  },
  {
    "content": "10.<span class=\"ls1\">On the instances list, you can watch the states change. You cannot use the instances until they become</span>\n“running”<span class=\"ff1\">.</span>",
    "hierarchy": [
    ],
    "pageId": 94
  },
  {
    "content": "1.<span class=\"ls1\">Locate the Public DNS record for the instance by selecting the instance from the list of instances, and log</span>\non to each machine one by one.",
    "hierarchy": [
      "Install, Configure and Start"
    ],
    "pageId": 94
  },
  {
    "content": "Using SSH, if your AWS identity key file is <span class=\"code\">aws-key.pem</span> and the AMI uses <span class=\"code\">ec2-user</span> as login user, on each\nAWS instance, do the following:",
    "hierarchy": [
      "Install, Configure and Start"
    ],
    "pageId": 94
  },
  {
    "content": "$ ssh-add aws-key.pem\n$ ssh -A ec2-user@<instance-public-dns>",
    "hierarchy": [
      "Install, Configure and Start"
    ],
    "pageId": 94
  },
  {
    "content": "2.<span class=\"ls1\">While logged in to each of the AWS EC2 instances, configure Java 1.8 and download Solr:</span>",
    "hierarchy": [
      "Install, Configure and Start"
    ],
    "pageId": 94
  },
  {
    "content": "# verify default java version packaged with AWS instances is 1.7\n$ java -version\n$ sudo yum install java-1.8.0\n$ sudo /usr/sbin/alternatives --config java\n# select jdk-1.8\n# verify default java version to java-1.8\n$ java -version",
    "hierarchy": [
      "Install, Configure and Start"
    ],
    "pageId": 94
  },
  {
    "content": "# download desired version of Solr\n$ wget http://archive.apache.org/dist/lucene/solr/7.3.0/solr-7.3.0.tgz\n# untar\n$ tar -zxvf solr-7.3.0.tgz\n# set SOLR_HOME\n$ export SOLR_HOME=$PWD/solr-7.3.0\n# put the env variable in .bashrc\n# vim ~/.bashrc\nexport SOLR_HOME=/home/ec2-user/solr-7.3.0",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "3.Resolve the Public DNS to simpler hostnames.",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "Let's assume AWS instances public DNS with IPv4 Public IP are as follows:",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "◦ec2-54-1-2-3.us-east-2.compute.amazonaws.com: 54.1.2.3\n◦ec2-54-4-5-6.us-east-2.compute.amazonaws.com: 54.4.5.6",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "Edit <span class=\"ff1 fs1\">/etc/hosts</span>, and add entries for the above machines:",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "$ sudo vim /etc/hosts\n54.1.2.3 solr-node-1\n54.4.5.6 solr-node-2",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "4.Configure Solr in running EC2 instances.",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "In this case, one of the machines will host ZooKeeper embedded along with Solr node, say, <span class=\"ff1 fs1\">ec2-101-1-2-</span>\n3.us-east-2.compute.amazonaws.com<span class=\"ff2 fs0\"> (aka, </span>solr-node-1<span class=\"ff2 fs0\">)</span>",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "See <span class=\"link\">Deploying with External ZooKeeper</span> for configure external ZooKeeper.",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "Inside the <span class=\"ff1 fs1\">ec2-101-1-2-3.us-east-2.compute.amazonaws.com</span> (<span class=\"ff1 fs1\">solr-node-1</span>)",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "$ cd $SOLR_HOME\n# start Solr node on 8983 and ZooKeeper will start on 8983+1000 9983\n$ bin/solr start -c -p 8983 -h solr-node-1",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "On the other node, <span class=\"ff1 fs1\">ec2-101-4-5-6.us-east-2.compute.amazonaws.com</span> (<span class=\"ff1 fs1\">solr-node-2</span>)",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "$ cd $SOLR_HOME\n# start Solr node on 8983 and connect to ZooKeeper running on first node\n$ bin/solr start -c -p 8983 -h solr-node-2 -z solr-node-1:9983",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "5.Inspect and Verify. Inspect the Solr nodes state from browser on local machine:",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "Go to:",
    "hierarchy": [
    ],
    "pageId": 95
  },
  {
    "content": "http://ec2-101-1-2-3.us-east-2.compute.amazonaws.com:8983/solr (solr-node-1:8983/solr)",
    "hierarchy": [
    ],
    "pageId": 96
  },
  {
    "content": "http://ec2-101-4-5-6.us-east-2.compute.amazonaws.com:8983/solr (solr-node-2:8983/solr)",
    "hierarchy": [
    ],
    "pageId": 96
  },
  {
    "content": "You should able to see Solr UI dashboard for both nodes.",
    "hierarchy": [
    ],
    "pageId": 96
  },
  {
    "content": "You can refer <span class=\"link\">Solr Tutorial</span> for an extensive walkthrough on creating collections with multiple shards and\nreplicas, indexing data via different methods and querying documents accordingly.",
    "hierarchy": [
      "Create Collection, Index and Query"
    ],
    "pageId": 96
  },
  {
    "content": "If you want to configure an external ZooKeeper ensemble to avoid using the embedded single-instance\nZooKeeper that runs in the same JVM as the Solr node, you need to make few tweaks in the above listed\nsteps as follows.",
    "hierarchy": [
      "Deploying with External ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "When creating the security group, instead of opening port <span class=\"ff1 fs2\">9983</span> for ZooKeeper, you'll open <span class=\"ff1 fs2\">2181</span> (or\nwhatever port you are using for ZooKeeper: it’s default is 2181).",
    "hierarchy": [
      "Deploying with External ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "When configuring the number of instances to launch, choose to open 3 instances instead of 2.",
    "hierarchy": [
      "Deploying with External ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "When modifying the <span class=\"ff1 fs2\">/etc/hosts</span> on each machine, add a third line for the 3rd instance and give it a\nrecognizable name:",
    "hierarchy": [
      "Deploying with External ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "$ sudo vim /etc/hosts\n54.1.2.3  solr-node-1\n54.4.5.6  solr-node-2\n54.7.8.9  zookeeper-node",
    "hierarchy": [
      "Deploying with External ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "You'll need to install ZooKeeper manually, described in the next section.",
    "hierarchy": [
      "Deploying with External ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "These steps will help you install and configure a single instance of ZooKeeper on AWS. This is not sufficient\nfor a production, use, however, where a ZooKeeper ensemble of at least three nodes is recommended. See\nthe section <span class=\"link\">Setting Up an External ZooKeeper Ensemble</span> for information about how to change this single-\ninstance into an ensemble.",
    "hierarchy": [
      "Deploying with External ZooKeeper",
      "Install ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "1.Download a stable version of ZooKeeper. In this example we're using ZooKeeper v3.4.6. On the node\nyou’re using to host ZooKeeper (<span class=\"ff1 fs2\">zookeeper-node</span>), download the package and untar it:",
    "hierarchy": [
      "Deploying with External ZooKeeper",
      "Install ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "# download stable version of ZooKeeper, here 3.4.6\n$ wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz\n# untar\n$ tar -zxvf zookeeper-3.4.6.tar.gz",
    "hierarchy": [
      "Deploying with External ZooKeeper",
      "Install ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "Add an environment variable for ZooKeeper's home directory (<span class=\"ff1 fs2\">ZOO_HOME</span>) to the <span class=\"ff1 fs2\">.bashrc</span> for the user",
    "hierarchy": [
      "Deploying with External ZooKeeper",
      "Install ZooKeeper"
    ],
    "pageId": 96
  },
  {
    "content": "who will be running the process. The rest of the instructions assume you have set this variable. Correct\nthe path to the ZooKeeper installation as appropriate if where you put it does not match the below.",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "$ export ZOO_HOME=$PWD/zookeeper-3.4.6\n# put the env variable in .bashrc\n# vim ~/.bashrc\nexport ZOO_HOME=/home/ec2-user/zookeeper-3.4.6",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "2.Change directories to <span class=\"ff2 fs1\">ZOO_HOME</span>, and create the ZooKeeper configuration by using the template provided\nby ZooKeeper.",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "$ cd $ZOO_HOME\n# create ZooKeeper config by using zoo_sample.cfg\n$ cp conf/zoo_sample.cfg conf/zoo.cfg",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "3.Create the ZooKeeper data directory in the filesystem, and edit the <span class=\"ff2 fs1\">zoo.cfg</span> file to uncomment the\nautopurge parameters and define the location of the data directory.",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "# create data dir for ZooKeeper, edit zoo.cfg, uncomment autopurge parameters\n$ mkdir data\n$ vim conf/zoo.cfg\n# -- uncomment --\nautopurge.snapRetainCount=3\nautopurge.purgeInterval=1\n# -- edit --\ndataDir=data",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "4.Start ZooKeeper.",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "$ cd $ZOO_HOME\n# start ZooKeeper, default port: 2181\n$ bin/zkServer.sh start",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "5.On the the first node being used for Solr (<span class=\"ff2 fs1\">solr-node-1</span>), start Solr and tell it where to find ZooKeeper.",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "$ cd $SOLR_HOME\n# start Solr node on 8983 and connect to ZooKeeper running on ZooKeeper node\n$ bin/solr start -c -p 8983 -h solr-node-1 -z zookeeper-node:2181",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "6.On the second Solr node (<span class=\"ff2 fs1\">solr-node-2</span>), again start Solr and tell it where to find ZooKeeper.",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "$ cd $SOLR_HOME\n# start Solr node on 8983 and connect to ZooKeeper running on ZooKeeper node\n$ bin/solr start -c -p 8983 -h solr-node-1 -z zookeeper-node:2181",
    "hierarchy": [
    ],
    "pageId": 97
  },
  {
    "content": "As noted earlier, a single ZooKeeper node is not sufficient for a production installation. See\nthese additional resources for more information about deploying Solr in production, which\ncan be used once you have the EC2 instances up and running:",
    "hierarchy": [
    ],
    "pageId": 98
  },
  {
    "content": "<span class=\"link\">Taking Solr to Production</span>\n•<span class=\"link\">Setting Up an External ZooKeeper Ensemble</span>",
    "hierarchy": [
    ],
    "pageId": 98
  },
  {
    "content": "This page covers how to upgrade an existing Solr cluster that was installed using the <span class=\"link\">service installation</span>\nscripts<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Upgrading a Solr Cluster"
    ],
    "pageId": 99
  },
  {
    "content": "The steps outlined on this page assume you use the default service name of <span class=\"ff4 fs3\">solr</span>. If you\nuse an alternate service name or Solr installation directory, some of the paths and\ncommands mentioned below will have to be modified accordingly.",
    "hierarchy": [
      "Upgrading a Solr Cluster"
    ],
    "pageId": 99
  },
  {
    "content": "Here is a checklist of things you need to prepare before starting the upgrade process:",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "1.Examine the <span class=\"link\">Solr Upgrade Notes</span> to determine if any behavior changes in the new version of Solr will\naffect your installation.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "2.If not using replication (i.e., collections with <span class=\"ff4 fs3\">replicationFactor</span> less than 1), then you should make a\nbackup of each collection. If all of your collections use replication, then you don't technically need to\nmake a backup since you will be upgrading and verifying each node individually.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "3.Determine which Solr node is currently hosting the Overseer leader process in SolrCloud, as you should\nupgrade this node last. To determine the Overseer, use the Overseer Status API, see: <span class=\"link\">Collections API</span>.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "4.Plan to perform your upgrade during a system maintenance window if possible. You'll be doing a rolling\nrestart of your cluster (each node, one-by-one), but we still recommend doing the upgrade when system\nusage is minimal.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "5.Verify the cluster is currently healthy and all replicas are active, as you should not perform an upgrade\non a degraded cluster.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "6.Re-build and test all custom server-side components against the new Solr JAR files.\n7.Determine the values of the following variables that are used by the Solr Control Scripts:\n◦ZK_HOST<span class=\"ff2 fs1\">: The ZooKeeper connection string your current SolrCloud nodes use to connect to</span>\nZooKeeper; this value will be the same for all nodes in the cluster.\n◦SOLR_HOST<span class=\"ff2 fs1\">: The hostname each Solr node used to register with ZooKeeper when joining the</span>\nSolrCloud cluster; this value will be used to set the <span class=\"ff1\">host</span> Java system property when starting the new\nSolr process.\n◦SOLR_PORT<span class=\"ff2 fs1\">: The port each Solr node is listening on, such as 8983.</span>\n◦SOLR_HOME<span class=\"ff2 fs1\">: The absolute path to the Solr home directory for each Solr node; this directory must</span>\ncontain a <span class=\"ff4 fs3\">solr.xml</span> file. This value will be passed to the new Solr process using the <span class=\"ff4 fs3\">solr.solr.home</span>\nsystem property, see: <span class=\"link\">Solr Cores and solr.xml</span>.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "If you are upgrading from an installation of Solr 5.x or later, these values can typically be found in\neither <span class=\"ff4 fs3\">/var/solr/solr.in.sh</span> or <span class=\"ff4 fs3\">/etc/default/solr.in.sh</span>.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "You should now be ready to upgrade your cluster. Please verify this process in a test or staging cluster\nbefore doing it in production.",
    "hierarchy": [
      "Upgrading a Solr Cluster",
      "Planning Your Upgrade"
    ],
    "pageId": 99
  },
  {
    "content": "The approach we recommend is to perform the upgrade of each Solr node, one-by-one. In other words, you\nwill need to stop a node, upgrade it to the new version of Solr, and restart it before moving on to the next\nnode. This means that for a short period of time, there will be a mix of \"Old Solr\" and \"New Solr\" nodes\nrunning in your cluster. We also assume that you will point the new Solr node to your existing Solr home\ndirectory where the Lucene index files are managed for each collection on the node. This means that you\nwon't need to move any index files around to perform the upgrade.",
    "hierarchy": [
      "Upgrade Process"
    ],
    "pageId": 100
  },
  {
    "content": "Begin by stopping the Solr node you want to upgrade. After stopping the node, if using a replication (i.e.,\ncollections with <span class=\"code\">replicationFactor</span> less than 1), verify that all leaders hosted on the downed node have\nsuccessfully migrated to other replicas; you can do this by visiting the <span class=\"link\">Cloud panel in the Solr Admin UI</span>. If\nnot using replication, then any collections with shards hosted on the downed node will be temporarily off-\nline.",
    "hierarchy": [
      "Upgrade Process",
      "Step 1: Stop Solr"
    ],
    "pageId": 100
  },
  {
    "content": "Please follow the instructions to install Solr as a Service on Linux documented at <span class=\"link\">Taking Solr to Production</span>.\nUse the <span class=\"code\">-n</span> parameter to avoid automatic start of Solr by the installer script. You need to update the\n/etc/default/solr.in.sh<span class=\"ff2 fs1\"> include file in the next step to complete the upgrade process.</span>",
    "hierarchy": [
      "Upgrade Process",
      "Step 2: Install Solr as a Service"
    ],
    "pageId": 100
  },
  {
    "content": "If you have a <span class=\"code\">/var/solr/solr.in.sh</span> file for your existing Solr install, running the\ninstall_solr_service.sh<span class=\"ff2 fs1\"> script will move this file to its new location:</span>\n/etc/default/solr.in.sh<span class=\"ff2 fs1\"> (see <span class=\"link\">SOLR-8101</span> for more details)</span>",
    "hierarchy": [
      "Upgrade Process",
      "Step 2: Install Solr as a Service"
    ],
    "pageId": 100
  },
  {
    "content": "Open <span class=\"code\">/etc/default/solr.in.sh</span> with a text editor and verify that the following variables are set correctly,\nor add them bottom of the include file as needed:",
    "hierarchy": [
      "Upgrade Process",
      "Step 3: Set Environment Variable Overrides"
    ],
    "pageId": 100
  },
  {
    "content": "ZK_HOST=\nSOLR_HOST=\nSOLR_PORT=\nSOLR_HOME=",
    "hierarchy": [
      "Upgrade Process",
      "Step 3: Set Environment Variable Overrides"
    ],
    "pageId": 100
  },
  {
    "content": "Make sure the user you plan to own the Solr process is the owner of the <span class=\"code\">SOLR_HOME</span> directory. For instance, if\nyou plan to run Solr as the \"solr\" user and <span class=\"code\">SOLR_HOME</span> is <span class=\"code\">/var/solr/data</span>, then you would do: <span class=\"code\">sudo chown -R</span>\nsolr: /var/solr/data",
    "hierarchy": [
      "Upgrade Process",
      "Step 3: Set Environment Variable Overrides"
    ],
    "pageId": 100
  },
  {
    "content": "You are now ready to start the upgraded Solr node by doing: <span class=\"code\">sudo service solr start</span>. The upgraded\ninstance will join the existing cluster because you're using the same <span class=\"code\">SOLR_HOME</span>, <span class=\"code\">SOLR_PORT</span>, and <span class=\"code\">SOLR_HOST</span>\nsettings used by the old Solr node; thus, the new server will look like the old node to the running cluster. Be\nsure to look in <span class=\"code\">/var/solr/logs/solr.log</span> for errors during startup.",
    "hierarchy": [
      "Upgrade Process",
      "Step 4: Start Solr"
    ],
    "pageId": 100
  },
  {
    "content": "You should run the Solr <span class=\"ff1\">healthcheck</span> command for all collections that are hosted on the upgraded node\nbefore proceeding to upgrade the next node in your cluster. For instance, if the newly upgraded node hosts\na replica for the <span class=\"ff1\">MyDocuments</span> collection, then you can run the following command (replace <span class=\"code\">ZK_HOST</span> with\nthe ZooKeeper connection string):",
    "hierarchy": [
      "Step 5: Run Healthcheck"
    ],
    "pageId": 101
  },
  {
    "content": "/opt/solr/bin/solr healthcheck -c MyDocuments -z ZK_HOST",
    "hierarchy": [
      "Step 5: Run Healthcheck"
    ],
    "pageId": 101
  },
  {
    "content": "Look for any problems reported about any of the replicas for the collection.",
    "hierarchy": [
      "Step 5: Run Healthcheck"
    ],
    "pageId": 101
  },
  {
    "content": "Lastly, repeat Steps 1-5 for all nodes in your cluster.",
    "hierarchy": [
      "Step 5: Run Healthcheck"
    ],
    "pageId": 101
  },
  {
    "content": "The Lucene distribution includes <span class=\"link\">a tool that upgrades</span> an index from previous Lucene versions to the current\nfile format.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "The tool can be used from command line, or it can be instantiated and executed in Java.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "Indexes can <span class=\"ff1\">only</span> be upgraded from the previous major release version to the current\nmajor release version.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "This means that the IndexUpgrader Tool in any Solr 7.x release, for example, can only work\nwith indexes from 6.x releases, but cannot work with indexes from Solr 5.x or earlier.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "If you are currently using an earlier release such as 5.x and want to move more than one\nmajor version ahead, you need to first upgrade your indexes to the next major version\n(6.x), then again to the major version after that (7.x), etc.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "In a Solr distribution, the Lucene files are located in <span class=\"code\">./server/solr-webapp/webapp/WEB-INF/lib</span>. You will\nneed to include the <span class=\"code\">lucene-core-<version>.jar</span> and <span class=\"code\">lucene-backwards-codecs-<version>.jar</span> on the\nclasspath when running the tool.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "java -cp lucene-core-7.3.0.jar:lucene-backward-codecs-7.3.0.jar\norg.apache.lucene.index.IndexUpgrader [-delete-prior-commits] [-verbose] /path/to/index",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "This tool keeps only the last commit in an index. For this reason, if the incoming index has more than one\ncommit, the tool refuses to run by default. Specify <span class=\"code\">-delete-prior-commits</span> to override this, allowing the tool\nto delete all but the last commit.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "Upgrading large indexes may take a long time. As a rule of thumb, the upgrade processes about 1 GB per\nminute.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "This tool may reorder documents if the index was partially upgraded before execution (e.g.,\ndocuments were added). If your application relies on monotonicity of document IDs (i.e.,\nthe order in which the documents were added to the index is preserved), do a full optimize\ninstead.",
    "hierarchy": [
      "IndexUpgrader Tool"
    ],
    "pageId": 101
  },
  {
    "content": "The following notes describe changes to Solr in recent releases that you should be aware of before\nupgrading.",
    "hierarchy": [
      "Solr Upgrade Notes"
    ],
    "pageId": 102
  },
  {
    "content": "These notes highlight the biggest changes that may impact the largest number of implementations. It is not\na comprehensive list of all changes to Solr in any release.",
    "hierarchy": [
      "Solr Upgrade Notes"
    ],
    "pageId": 102
  },
  {
    "content": "When planning your Solr upgrade, consider the customizations you have made to your system and review\nthe <span class=\"code\">CHANGES.txt</span> file found in your Solr package. That file includes all the changes and updates that may\neffect your existing implementation.",
    "hierarchy": [
      "Solr Upgrade Notes"
    ],
    "pageId": 102
  },
  {
    "content": "Detailed steps for upgrading a Solr cluster are in the section <span class=\"link\">Upgrading a Solr Cluster</span>.",
    "hierarchy": [
      "Solr Upgrade Notes"
    ],
    "pageId": 102
  },
  {
    "content": "See the <span class=\"link\">7.3 Release Notes</span> for an overview of the main new features in Solr 7.3.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "When upgrading to Solr 7.3, users should be aware of the following major changes from v7.2:",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "Collections created without specifying a configset name have used a copy of the <span class=\"code\">_default</span> configset\nsince Solr 7.0. Before 7.3, the copied configset was named the same as the collection name, but from 7.3\nonwards it will be named with a new \".AUTOCREATED\" suffix. This is to prevent overwriting custom\nconfigset names.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "The <span class=\"code\">rq</span> parameter used with Learning to Rank rerank query parsing no longer considers the <span class=\"code\">defType</span>\nparameter. See <span class=\"link\">Running a Rerank Query</span> for more information about this parameter.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "The default value of <span class=\"code\">autoReplicaFailoverWaitAfterExpiration</span>, used with the AutoAddReplicas\nfeature, has increased to 120 seconds from the previous default of 30 seconds. This affects how soon Solr\nadds new replicas to replace the replicas on nodes which have either crashed or shutdown.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "The default Solr log file size and number of backups have been raised to 32MB and 10 respectively. See\nthe section <span class=\"link\">Configuring Logging</span> for more information about how to configure logging.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "The old Leader-In-Recovery implementation (implemented in Solr 4.9) is now deprecated and replaced.\nSolr will support rolling upgrades from old 7.x versions of Solr to future 7.x releases until the last release\nof the 7.x major version.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "This means to upgrade to Solr 8 in the future, you will need to be on Solr 7.3 or higher.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "Replicas which are not up-to-date are no longer allowed to become leader. Use the <span class=\"link\">FORCELEADER</span>\ncommand<span class=\"fc1\"> of the Collections API to allow these replicas become leader.</span>",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "The behaviour of the autoscaling system will now pause all triggers from execution between the start of\nactions and the end of a cool down period. The triggers will resume after the cool down period expires.\nPreviously, the cool down period was a fixed period started after actions for a trigger event completed\nand during this time all triggers continued to run but any events were rejected and tried later.",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "The throttling mechanism used to limit the rate of autoscaling events processed has been removed. This\ndeprecates the <span class=\"code\">actionThrottlePeriodSeconds</span> setting in the <span class=\"code\">set-properties</span><span class=\"link\"> Autoscaling API</span> which is",
    "hierarchy": [
      "Solr Upgrade Notes",
      "Upgrading to 7.x Releases",
      "Solr 7.3"
    ],
    "pageId": 102
  },
  {
    "content": "now non-operational. Use the <span class=\"ff2 fs1\">triggerCooldownPeriodSeconds</span> parameter instead to pause event\nprocessing.",
    "hierarchy": [
    ],
    "pageId": 103
  },
  {
    "content": "If you are using the spatial JTS library with Solr, you must upgrade to 1.15.0. This new version of JTS is\nnow dual-licensed to include a BSD style license. See the section on <span class=\"link\">Spatial Search</span> for more information.",
    "hierarchy": [
    ],
    "pageId": 103
  },
  {
    "content": "The top-level <span class=\"ff2 fs1\"><highlighting></span> element in <span class=\"ff2 fs1\">solrconfig.xml</span> is now officially deprecated in favour of the\nequivalent <span class=\"ff2 fs1\"><searchComponent></span> syntax. This element has been out of use in default Solr installations for\nseveral releases already.",
    "hierarchy": [
    ],
    "pageId": 103
  },
  {
    "content": "See the <span class=\"link\">7.2 Release Notes</span> for an overview of the main new features in Solr 7.2.",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "When upgrading to Solr 7.2, users should be aware of the following major changes from v7.1:",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "Starting a query string with <span class=\"link\">local parameters</span> <span class=\"ff2 fs1\">{!myparser …}</span> is used to switch from one query parser to\nanother, and is intended for use by Solr system developers, not end users doing searches. To reduce\nnegative side-effects of unintended hack-ability, Solr now limits the cases when local parameters will be\nparsed to only contexts in which the default parser is \"<span class=\"link\">lucene</span>\" or \"<span class=\"link\">func</span>\".",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "So, if <span class=\"ff2 fs1\">defType=edismax</span> then <span class=\"ff2 fs1\">q={!myparser …}</span> won't work. In that example, put the desired query parser\ninto the <span class=\"ff2 fs1\">defType</span> parameter.",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "Another example is if <span class=\"ff2 fs1\">deftype=edismax</span> then <span class=\"ff2 fs1\">hl.q={!myparser …}</span> won't work for the same reason. In\nthis example, either put the desired query parser into the <span class=\"ff2 fs1\">hl.qparser</span> parameter or set\nhl.qparser=lucene<span class=\"ff1 fs0\">. Most users won’t run into these cases but some will need to change.</span>",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "If you must have full backwards compatibility, use <span class=\"ff2 fs1\">luceneMatchVersion=7.1.0</span> or an earlier version.",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "The eDisMax parser by default no longer allows subqueries that specify a Solr parser using either local\nparameters, or the older <span class=\"ff2 fs1\">_query_</span> magic field trick.",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "For example, <span class=\"ff2 fs1\">{!prefix f=myfield v=enterp}</span> or <span class=\"ff2 fs1\">_query_:\"{!prefix f=myfield v=enterp}\"</span> are not\nsupported by default any longer. If you want to allow power-users to do this, set <span class=\"ff2 fs1\">uf=* query</span> or some\nother value that includes <span class=\"ff2 fs1\">_query_</span>.",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "If you need full backwards compatibility for the time being, use <span class=\"ff2 fs1\">luceneMatchVersion=7.1.0</span> or\nsomething earlier.",
    "hierarchy": [
      "Solr 7.2"
    ],
    "pageId": 103
  },
  {
    "content": "See the <span class=\"link\">7.1 Release Notes</span> for an overview of the main new features of Solr 7.1.",
    "hierarchy": [
      "Solr 7.1"
    ],
    "pageId": 103
  },
  {
    "content": "When upgrading to Solr 7.1, users should be aware of the following major changes from v7.0:",
    "hierarchy": [
      "Solr 7.1"
    ],
    "pageId": 103
  },
  {
    "content": "The feature to automatically add replicas if a replica goes down, previously available only when storing\nindexes in HDFS, has been ported to the autoscaling framework. Due to this, <span class=\"ff2 fs1\">autoAddReplicas</span> is now\navailable to all users even if their indexes are on local disks.",
    "hierarchy": [
      "Solr 7.1"
    ],
    "pageId": 103
  },
  {
    "content": "Existing users of this feature should not have to change anything. However, they should note these\nchanges:",
    "hierarchy": [
      "Solr 7.1"
    ],
    "pageId": 103
  },
  {
    "content": "◦<span class=\"ff2 ls1\">Behavior: Changing the <span class=\"code\">autoAddReplicas</span> property from disabled (<span class=\"code\">false</span>) to enabled (<span class=\"code\">true</span>) using</span>\nMODIFYCOLLECTION API<span class=\"fc0\"> no longer replaces down replicas for the collection immediately. Instead,</span>\nreplicas are only added if a node containing them went down while <span class=\"code\">autoAddReplicas</span> was enabled.\nThe parameters <span class=\"code\">autoReplicaFailoverBadNodeExpiration</span> and <span class=\"code\">autoReplicaFailoverWorkLoopDelay</span>\nare no longer used.\n◦<span class=\"ff2 ls1\">Deprecations: Enabling/disabling autoAddReplicas cluster-wide with the API will be deprecated; use</span>\nsuspend/resume trigger APIs with <span class=\"code\">name=\".auto_add_replicas\"</span> instead.",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "More information about the changes to this feature can be found in the section <span class=\"link\">SolrCloud</span>\nAutomatically Adding Replicas<span class=\"fc0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "<span class=\"ls1\">Shard and cluster metric reporter configuration now require a class attribute.</span>",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "◦<span class=\"ff2 ls1\">If a reporter configures the <span class=\"code\">group=\"shard\"</span> attribute then please also configure the</span>\nclass=\"org.apache.solr.metrics.reporters.solr.SolrShardReporter\"<span class=\"ff2 fs0\"> attribute.</span>\n◦<span class=\"ff2 ls1\">If a reporter configures the <span class=\"code\">group=\"cluster\"</span> attribute then please also configure the</span>\nclass=\"org.apache.solr.metrics.reporters.solr.SolrClusterReporter\"<span class=\"ff2 fs0\"> attribute.</span>",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "See the section <span class=\"link\">Shard and Cluster Reporters</span> for more information.",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "<span class=\"ls1\">All Stream Evaluators in <span class=\"code\">solrj.io.eval</span> have been refactored to have a simpler and more robust</span>\nstructure. This simplifies and condenses the code required to implement a new Evaluator and makes it\nmuch easier for evaluators to handle differing data types (primitives, objects, arrays, lists, and so forth).",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "<span class=\"ls1\">In the ReplicationHandler, the <span class=\"code\">master.commitReserveDuration</span> sub-element is deprecated. Instead</span>\nplease configure a direct <span class=\"code\">commitReserveDuration</span> element for use in all modes (master, slave, cloud).",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "<span class=\"ls1\">The <span class=\"code\">RunExecutableListener</span> was removed for security reasons. If you want to listen to events caused by</span>\nupdates, commits, or optimize, write your own listener as native Java class as part of a Solr plugin.",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "<span class=\"ls1\">In the XML query parser (<span class=\"code\">defType=xmlparser</span> or <span class=\"code\">{!xmlparser … }</span>) the resolving of external entities is</span>\nnow disallowed by default.",
    "hierarchy": [
    ],
    "pageId": 104
  },
  {
    "content": "The upgrade from Solr 6.x to Solr 7.0 introduces several <span class=\"ff4\">major</span> changes that you should be aware of before\nupgrading. Please do a thorough review of the section <span class=\"link\">Major Changes in Solr 7</span> before starting your\nupgrade.",
    "hierarchy": [
      "Upgrading to 7.x from Any 6.x Release"
    ],
    "pageId": 104
  },
  {
    "content": "Users upgrading from versions of Solr prior to 6.x are strongly encouraged to consult <span class=\"code\">CHANGES.txt</span> for the\ndetails of <span class=\"ff5\">all</span> changes since the version they are upgrading from.",
    "hierarchy": [
      "Upgrading to 7.x from pre-6.x Versions of Solr"
    ],
    "pageId": 104
  },
  {
    "content": "A summary of the significant changes between Solr 5.x and Solr 6.0 is in the section <span class=\"link\">Major Changes from Solr</span>\n5 to Solr 6<span class=\"fc0\">.</span>",
    "hierarchy": [
      "Upgrading to 7.x from pre-6.x Versions of Solr"
    ],
    "pageId": 104
  },
  {
    "content": "Solr 7 is a major new release of Solr which introduces new features and a number of other changes that may\nimpact your existing installation.",
    "hierarchy": [
      "Major Changes in Solr 7"
    ],
    "pageId": 104
  },
  {
    "content": "There are major changes in Solr 7 to consider before starting to migrate your configurations and indexes.\nThis page is designed to highlight the biggest changes - new features you may want to be aware of, but also\nchanges in default behavior and deprecated features that have been removed.",
    "hierarchy": [
      "Upgrade Planning"
    ],
    "pageId": 105
  },
  {
    "content": "There are many hundreds of changes in Solr 7, however, so a thorough review of the <span class=\"link\">Solr Upgrade Notes</span> as\nwell as the <span class=\"link\">CHANGES.txt</span> file in your Solr instance will help you plan your migration to Solr 7. This section\nattempts to highlight some of the major changes you should be aware of.",
    "hierarchy": [
      "Upgrade Planning"
    ],
    "pageId": 105
  },
  {
    "content": "You should also consider all changes that have been made to Solr in any version you have not upgraded to\nalready. For example, if you are currently using Solr 6.2, you should review changes made in all subsequent\n6.x releases in addition to changes for 7.0.",
    "hierarchy": [
      "Upgrade Planning"
    ],
    "pageId": 105
  },
  {
    "content": "Re-indexing your data is considered the best practice and you should try to do so if possible. However, if re-\nindexing is not feasible, keep in mind you can only upgrade one major version at a time. Thus, Solr 6.x\nindexes will be compatible with Solr 7 but Solr 5.x indexes will not be.",
    "hierarchy": [
      "Upgrade Planning"
    ],
    "pageId": 105
  },
  {
    "content": "If you do not re-index now, keep in mind that you will need to either re-index your data or upgrade your\nindexes before you will be able to move to Solr 8 when it is released in the future. See the section\nIndexUpgrader Tool<span class=\"fc1\"> for more details on how to upgrade your indexes.</span>",
    "hierarchy": [
      "Upgrade Planning"
    ],
    "pageId": 105
  },
  {
    "content": "See also the section <span class=\"link\">Upgrading a Solr Cluster</span> for details on how to upgrade a SolrCloud cluster.",
    "hierarchy": [
      "Upgrade Planning"
    ],
    "pageId": 105
  },
  {
    "content": "Until Solr 7, the SolrCloud model for replicas has been to allow any replica to become a leader when a leader\nis lost. This is highly effective for most users, providing reliable failover in case of issues in the cluster.\nHowever, it comes at a cost in large clusters because all replicas must be in sync at all times.",
    "hierarchy": [
      "New Features & Enhancements",
      "Replication Modes"
    ],
    "pageId": 105
  },
  {
    "content": "To provide additional flexibility, two new types of replicas have been added, named TLOG & PULL. These new\ntypes provide options to have replicas which only sync with the leader by copying index segments from the\nleader. The TLOG type has an additional benefit of maintaining a transaction log (the \"tlog\" of its name),\nwhich would allow it to recover and become a leader if necessary; the PULL type does not maintain a\ntransaction log, so cannot become a leader.",
    "hierarchy": [
      "New Features & Enhancements",
      "Replication Modes"
    ],
    "pageId": 105
  },
  {
    "content": "As part of this change, the traditional type of replica is now named NRT. If you do not explicitly define a\nnumber of TLOG or PULL replicas, Solr defaults to creating NRT replicas. If this model is working for you, you\nwill not have to change anything.",
    "hierarchy": [
      "New Features & Enhancements",
      "Replication Modes"
    ],
    "pageId": 105
  },
  {
    "content": "See the section <span class=\"link\">Types of Replicas</span> for more details on the new replica modes, and how define the replica type\nin your cluster.",
    "hierarchy": [
      "New Features & Enhancements",
      "Replication Modes"
    ],
    "pageId": 105
  },
  {
    "content": "Solr autoscaling is a new suite of features in Solr to make managing a SolrCloud cluster easier and more\nautomated.",
    "hierarchy": [
      "New Features & Enhancements",
      "Autoscaling"
    ],
    "pageId": 105
  },
  {
    "content": "At its core, Solr autoscaling provides users with a rule syntax to define preferences and policies for how to\ndistribute nodes and shards in a cluster, with the goal of maintaining a balance in the cluster. As of Solr 7,",
    "hierarchy": [
      "New Features & Enhancements",
      "Autoscaling"
    ],
    "pageId": 105
  },
  {
    "content": "Solr will take any policy or preference rules into account when determining where to place new shards and\nreplicas created or moved with various Collections API commands.",
    "hierarchy": [
    ],
    "pageId": 106
  },
  {
    "content": "See the section <span class=\"link\">SolrCloud Autoscaling</span> for details on the options available in 7.0. Expect more features to be\nreleased in subsequent 7.x releases in this area.",
    "hierarchy": [
    ],
    "pageId": 106
  },
  {
    "content": "The Analytics Component has been refactored.",
    "hierarchy": [
      "Other Features & Enhancements"
    ],
    "pageId": 106
  },
  {
    "content": "◦The documentation for this component is in progress; until it is available, please refer to <span class=\"link\">SOLR-11144</span>\nfor more details.\nThere were several other new features released in earlier 6.x releases, which you may have missed:",
    "hierarchy": [
      "Other Features & Enhancements"
    ],
    "pageId": 106
  },
  {
    "content": "◦<span class=\"link\">Learning to Rank</span>\n◦<span class=\"link\">Unified Highlighter</span>\n◦<span class=\"link\">Metrics API<span class=\"fc0\">. See also information about related deprecations in the section </span>JMX Support and MBeans</span>\nbelow.\n◦<span class=\"link\">Payload queries</span>\n◦<span class=\"link\">Streaming Evaluators</span>\n◦<span class=\"link\">/v2 API</span>\n◦<span class=\"link\">Graph streaming expressions</span>",
    "hierarchy": [
      "Other Features & Enhancements"
    ],
    "pageId": 106
  },
  {
    "content": "Several changes have been made to configSets that ship with Solr; not only their content but how Solr\nbehaves in regard to them:",
    "hierarchy": [
      "Configuration and Default Changes",
      "New Default ConfigSet"
    ],
    "pageId": 106
  },
  {
    "content": "The <span class=\"ff4 fs2\">data_driven_configset</span> and <span class=\"ff4 fs2\">basic_configset</span> have been removed, and replaced by the <span class=\"ff4 fs2\">_default</span>\nconfigset. The <span class=\"ff4 fs2\">sample_techproducts_configset</span> also remains, and is designed for use with the example\ndocuments shipped with Solr in the <span class=\"ff4 fs2\">example/exampledocs</span> directory.",
    "hierarchy": [
      "Configuration and Default Changes",
      "New Default ConfigSet"
    ],
    "pageId": 106
  },
  {
    "content": "When creating a new collection, if you do not specify a configSet, the <span class=\"ff4 fs2\">_default</span> will be used.",
    "hierarchy": [
      "Configuration and Default Changes",
      "New Default ConfigSet"
    ],
    "pageId": 106
  },
  {
    "content": "◦If you use SolrCloud, the <span class=\"ff4 fs2\">_default</span> configSet will be automatically uploaded to ZooKeeper.\n◦If you use standalone mode, the instanceDir will be created automatically, using the <span class=\"ff4 fs2\">_default</span>\nconfigSet as it's basis.",
    "hierarchy": [
      "Configuration and Default Changes",
      "New Default ConfigSet"
    ],
    "pageId": 106
  },
  {
    "content": "To improve the functionality of Schemaless Mode, Solr now behaves differently when it detects that data in\nan incoming field should have a text-based field type.",
    "hierarchy": [
      "Configuration and Default Changes",
      "Schemaless Improvements"
    ],
    "pageId": 106
  },
  {
    "content": "Incoming fields will be indexed as <span class=\"ff4 fs2\">text_general</span> by default (you can change this). The name of the field\nwill be the same as the field name defined in the document.",
    "hierarchy": [
      "Configuration and Default Changes",
      "Schemaless Improvements"
    ],
    "pageId": 106
  },
  {
    "content": "A copy field rule will be inserted into your schema to copy the new <span class=\"ff4 fs2\">text_general</span> field to a new field with\nthe name <span class=\"ff4 fs2\"><name>_str</span>. This field's type will be a <span class=\"ff4 fs2\">strings</span> field (to allow for multiple values). The first 256\ncharacters of the text field will be inserted to the new <span class=\"ff4 fs2\">strings</span> field.",
    "hierarchy": [
      "Configuration and Default Changes",
      "Schemaless Improvements"
    ],
    "pageId": 106
  },
  {
    "content": "This behavior can be customized if you wish to remove the copy field rule, or to change the number of\ncharacters inserted to the string field, or the field type used. See the section <span class=\"link\">Schemaless Mode</span> for details.",
    "hierarchy": [
    ],
    "pageId": 107
  },
  {
    "content": "Because copy field rules can slow indexing and increase index size, it's recommended you\nonly use copy fields when you need to. If you do not need to sort or facet on a field, you\nshould remove the automatically-generated copy field rule.",
    "hierarchy": [
    ],
    "pageId": 107
  },
  {
    "content": "Automatic field creation can be disabled with the <span class=\"code\">update.autoCreateFields</span> property. To do this, you can\nuse the Config API with a command such as:",
    "hierarchy": [
    ],
    "pageId": 107
  },
  {
    "content": "curl http://host:8983/solr/mycollection/config -d '{\"set-user-property\":\n{\"update.autoCreateFields\":\"false\"}}'",
    "hierarchy": [
    ],
    "pageId": 107
  },
  {
    "content": "curl http://host:8983/api/collections/mycollection/config -d '{\"set-user-property\":\n{\"update.autoCreateFields\":\"false\"}}'",
    "hierarchy": [
    ],
    "pageId": 107
  },
  {
    "content": "JSON is now the default response format. If you rely on XML responses, you must now define <span class=\"code\">wt=xml</span> in\nyour request. In addition, line indentation is enabled by default (<span class=\"code\">indent=on</span>).",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "The <span class=\"code\">sow</span> parameter (short for \"Split on Whitespace\") now defaults to <span class=\"code\">false</span>, which allows support for\nmulti-word synonyms out of the box. This parameter is used with the eDismax and standard/\"lucene\"\nquery parsers. If this parameter is not explicitly specified as <span class=\"code\">true</span>, query text will not be split on\nwhitespace before analysis.",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "The <span class=\"code\">legacyCloud</span> parameter now defaults to <span class=\"code\">false</span>. If an entry for a replica does not exist in <span class=\"code\">state.json</span>,\nthat replica will not get registered.",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "This may affect users who bring up replicas and they are automatically registered as a part of a shard. It\nis possible to fall back to the old behavior by setting the property <span class=\"code\">legacyCloud=true</span>, in the cluster\nproperties using the following command:",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "./server/scripts/cloud-scripts/zkcli.sh -zkhost 127.0.0.1:2181 -cmd clusterprop -name\nlegacyCloud -val true",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "The eDismax query parser parameter <span class=\"code\">lowercaseOperators</span> now defaults to <span class=\"code\">false</span> if the\nluceneMatchVersion<span class=\"ff1 fs0\"> in </span>solrconfig.xml<span class=\"ff1 fs0\"> is 7.0.0 or above. Behavior for </span>luceneMatchVersion<span class=\"ff1 fs0\"> lower than</span>\n7.0.0 is unchanged (so, <span class=\"code\">true</span>). This means that clients must sent boolean operators (such as AND, OR and\nNOT) in upper case in order to be recognized, or you must explicitly set this parameter to <span class=\"code\">true</span>.",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "The <span class=\"code\">handleSelect</span> parameter in <span class=\"code\">solrconfig.xml</span> now defaults to <span class=\"code\">false</span> if the <span class=\"code\">luceneMatchVersion</span> is\n7.0.0 or above. This causes Solr to ignore the <span class=\"code\">qt</span> parameter if it is present in a request. If you have\nrequest handlers without a leading '/', you can set <span class=\"code\">handleSelect=\"true\"</span> or consider migrating your",
    "hierarchy": [
      "Changes to Default Behaviors"
    ],
    "pageId": 107
  },
  {
    "content": "configuration.",
    "hierarchy": [
    ],
    "pageId": 108
  },
  {
    "content": "The <span class=\"ff2 fs1\">qt</span> parameter is still used as a SolrJ special parameter that specifies the request handler (tail URL\npath) to use.",
    "hierarchy": [
    ],
    "pageId": 108
  },
  {
    "content": "The lucenePlusSort query parser (aka the \"Old Lucene Query Parser\") has been deprecated and is no\nlonger implicitly defined. If you wish to continue using this parser until Solr 8 (when it will be removed),\nyou must register it in your <span class=\"ff2 fs1\">solrconfig.xml</span>, as in: <span class=\"ff2 fs1\"><queryParser name=\"lucenePlusSort\"</span>\nclass=\"solr.OldLuceneQParserPlugin\"/><span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 108
  },
  {
    "content": "The name of <span class=\"ff2 fs1\">TemplateUpdateRequestProcessorFactory</span> is changed to <span class=\"ff2 fs1\">template</span> from <span class=\"ff2 fs1\">Template</span> and the\nname of <span class=\"ff2 fs1\">AtomicUpdateProcessorFactory</span> is changed to <span class=\"ff2 fs1\">atomic</span> from <span class=\"ff2 fs1\">Atomic</span>",
    "hierarchy": [
    ],
    "pageId": 108
  },
  {
    "content": "◦Also, <span class=\"ff2 fs1\">TemplateUpdateRequestProcessorFactory</span> now uses <span class=\"ff2 fs1\">{}</span> instead of <span class=\"ff2 fs1\">${}</span> for <span class=\"ff2 fs1\">template</span>.",
    "hierarchy": [
    ],
    "pageId": 108
  },
  {
    "content": "Solr has implemented *PointField types across the board, to replace Trie* based numeric fields. All Trie*\nfields are now considered deprecated, and will be removed in Solr 8.",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Point Fields Are Default Numeric Types"
    ],
    "pageId": 108
  },
  {
    "content": "If you are using Trie* fields in your schema, you should consider moving to PointFields as soon as feasible.\nChanging to the new PointField types will require you to re-index your data.",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Point Fields Are Default Numeric Types"
    ],
    "pageId": 108
  },
  {
    "content": "The following spatial-related fields have been deprecated:",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nLatLonType",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nGeoHashField",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nSpatialVectorFieldType",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nSpatialTermQueryPrefixTreeFieldType",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "Choose one of these field types instead:",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nLatLonPointSpatialField",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nSpatialRecursivePrefixTreeField",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "\nRptWithGeometrySpatialField",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "See the section <span class=\"link\">Spatial Search</span> for more information.",
    "hierarchy": [
      "Deprecations and Removed Features",
      "Spatial Fields"
    ],
    "pageId": 108
  },
  {
    "content": "The <span class=\"ff2 fs1\"><jmx></span> element in <span class=\"ff2 fs1\">solrconfig.xml</span> has been removed in favor of <span class=\"ff2 fs1\"><metrics><reporter></span> elements\ndefined in <span class=\"ff2 fs1\">solr.xml</span>.",
    "hierarchy": [
      "Deprecations and Removed Features",
      "JMX Support and MBeans"
    ],
    "pageId": 108
  },
  {
    "content": "Limited back-compatibility is offered by automatically adding a default instance of <span class=\"ff2 fs1\">SolrJmxReporter</span> if\nit's missing AND when a local MBean server is found. A local MBean server can be activated either via\nENABLE_REMOTE_JMX_OPTS<span class=\"ff1 fs0\"> in </span>solr.in.sh<span class=\"ff1 fs0\"> or via system properties, e.g.,</span>\n-Dcom.sun.management.jmxremote<span class=\"ff1 fs0\">. This default instance exports all Solr metrics from all registries as</span>\nhierarchical MBeans.",
    "hierarchy": [
      "Deprecations and Removed Features",
      "JMX Support and MBeans"
    ],
    "pageId": 108
  },
  {
    "content": "This behavior can be also disabled by specifying a <span class=\"ff2 fs1\">SolrJmxReporter</span> configuration with a boolean init\nargument <span class=\"ff2 fs1\">enabled</span> set to <span class=\"ff2 fs1\">false</span>. For a more fine-grained control users should explicitly specify at least\none <span class=\"ff2 fs1\">SolrJmxReporter</span> configuration.",
    "hierarchy": [
    ],
    "pageId": 109
  },
  {
    "content": "See also the section <span class=\"link\">The <metrics><reporters> Element</span>, which describes how to set up Metrics Reporters\nin <span class=\"ff2 fs1\">solr.xml</span>. Note that back-compatibility support may be removed in Solr 8.",
    "hierarchy": [
    ],
    "pageId": 109
  },
  {
    "content": "MBean names and attributes now follow the hierarchical names used in metrics. This is reflected also in\n/admin/mbeans<span class=\"ff1 fs0\"> and </span>/admin/plugins<span class=\"ff1 fs0\"> output, and can be observed in the UI Plugins tab, because now all</span>\nthese APIs get their data from the metrics API. The old (mostly flat) JMX view has been removed.",
    "hierarchy": [
    ],
    "pageId": 109
  },
  {
    "content": "The following changes were made in SolrJ.",
    "hierarchy": [
      "SolrJ"
    ],
    "pageId": 109
  },
  {
    "content": "HttpClientInterceptorPlugin is now <span class=\"ff2 fs1\">HttpClientBuilderPlugin</span> and must work with a\nSolrHttpClientBuilder<span class=\"ff1 fs0\"> rather than an </span>HttpClientConfigurer<span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
      "SolrJ"
    ],
    "pageId": 109
  },
  {
    "content": "HttpClientUtil now allows configuring <span class=\"ff2 fs1\">HttpClient</span> instances via <span class=\"ff2 fs1\">SolrHttpClientBuilder</span> rather than\nan <span class=\"ff2 fs1\">HttpClientConfigurer</span>. Use of env variable <span class=\"ff2 fs1\">SOLR_AUTHENTICATION_CLIENT_CONFIGURER</span> no longer\nworks, please use <span class=\"ff2 fs1\">SOLR_AUTHENTICATION_CLIENT_BUILDER</span>",
    "hierarchy": [
      "SolrJ"
    ],
    "pageId": 109
  },
  {
    "content": "SolrClient implementations now use their own internal configuration for socket timeouts, connect\ntimeouts, and allowing redirects rather than what is set as the default when building the <span class=\"ff2 fs1\">HttpClient</span>\ninstance. Use the appropriate setters on the <span class=\"ff2 fs1\">SolrClient</span> instance.",
    "hierarchy": [
      "SolrJ"
    ],
    "pageId": 109
  },
  {
    "content": "HttpSolrClient#setAllowCompression has been removed and compression must be enabled as a\nconstructor param.",
    "hierarchy": [
      "SolrJ"
    ],
    "pageId": 109
  },
  {
    "content": "HttpSolrClient#setDefaultMaxConnectionsPerHost and <span class=\"ff2 fs1\">HttpSolrClient#setMaxTotalConnections</span>\nhave been removed. These now default very high and can only be changed via parameter when creating\nan HttpClient instance.",
    "hierarchy": [
      "SolrJ"
    ],
    "pageId": 109
  },
  {
    "content": "The <span class=\"ff2 fs1\">defaultOperator</span> parameter in the schema is no longer supported. Use the <span class=\"ff2 fs1\">q.op</span> parameter instead.\nThis option had been deprecated for several releases. See the section <span class=\"link\">Standard Query Parser Parameters</span>\nfor more information.",
    "hierarchy": [
      "Other Deprecations and Removals"
    ],
    "pageId": 109
  },
  {
    "content": "The <span class=\"ff2 fs1\">defaultSearchField</span> parameter in the schema is no longer supported. Use the <span class=\"ff2 fs1\">df</span> parameter\ninstead. This option had been deprecated for several releases. See the section <span class=\"link\">Standard Query Parser</span>\nParameters<span class=\"fc0\"> for more information.</span>",
    "hierarchy": [
      "Other Deprecations and Removals"
    ],
    "pageId": 109
  },
  {
    "content": "The <span class=\"ff2 fs1\">mergePolicy</span>, <span class=\"ff2 fs1\">mergeFactor</span> and <span class=\"ff2 fs1\">maxMergeDocs</span> parameters have been removed and are no longer\nsupported. You should define a <span class=\"ff2 fs1\">mergePolicyFactory</span> instead. See the section <span class=\"link\">the mergePolicyFactory</span> for\nmore information.",
    "hierarchy": [
      "Other Deprecations and Removals"
    ],
    "pageId": 109
  },
  {
    "content": "The PostingsSolrHighlighter has been deprecated. It's recommended that you move to using the\nUnifiedHighlighter instead. See the section <span class=\"link\">Unified Highlighter</span> for more information about this\nhighlighter.",
    "hierarchy": [
      "Other Deprecations and Removals"
    ],
    "pageId": 109
  },
  {
    "content": "Index-time boosts have been removed from Lucene, and are no longer available from Solr. If any boosts\nare provided, they will be ignored by the indexing chain. As a replacement, index-time scoring factors\nshould be indexed in a separate field and combined with the query score using a function query. See the\nsection <span class=\"link\">Function Queries</span> for more information.",
    "hierarchy": [
      "Other Deprecations and Removals"
    ],
    "pageId": 109
  },
  {
    "content": "<span class=\"ls1\">The <span class=\"ff2 fs1\">StandardRequestHandler</span> is deprecated. Use <span class=\"ff2 fs1\">SearchHandler</span> instead.</span>",
    "hierarchy": [
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">To improve parameter consistency in the Collections API, the parameter names <span class=\"ff2 fs1\">fromNode</span> for the</span>\nMOVEREPLICA command and <span class=\"ff2 fs1\">source</span>, <span class=\"ff2 fs1\">target</span> for the REPLACENODE command have been deprecated\nand replaced with <span class=\"ff2 fs1\">sourceNode</span> and <span class=\"ff2 fs1\">targetNode</span> instead. The old names will continue to work for back-\ncompatibility but they will be removed in Solr 8.",
    "hierarchy": [
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">The unused <span class=\"ff2 fs1\">valType</span> option has been removed from ExternalFileField, if you have this in your schema</span>\nyou can safely remove it.",
    "hierarchy": [
    ],
    "pageId": 110
  },
  {
    "content": "The following summary of changes in earlier 6.x releases highlights significant changes released between\nSolr 6.0 and 6.6 that were listed in earlier versions of this Guide. Mentions of deprecations are likely\nsuperseded by removal in Solr 7, as noted in the above sections.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "Note again that this is not a complete list of all changes that may impact your installation, so a thorough\nreview of CHANGES.txt is highly recommended if upgrading from any version earlier than 6.6.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">The Solr contribs map-reduce, morphlines-core and morphlines-cell have been removed.</span>",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">JSON Facet API now uses hyper-log-log for numBuckets cardinality calculation and calculates cardinality</span>\nbefore filtering buckets by any <span class=\"ff2 fs1\">mincount</span> greater than 1.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">If you use historical dates, specifically on or before the year 1582, you should re-index for better date</span>\nhandling.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">If you use the JSON Facet API (json.facet) with <span class=\"ff2 fs1\">method=stream</span>, you must now set <span class=\"ff2 fs1\">sort='index asc'</span> to</span>\nget the streaming behavior; otherwise it won't stream. Reminder: <span class=\"ff2 fs1\">method</span> is a hint that doesn’t change\ndefaults of other parameters.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">If you use the JSON Facet API (json.facet) to facet on a numeric field and if you use <span class=\"ff2 fs1\">mincount=0</span> or if you</span>\nset the prefix, you will now get an error as these options are incompatible with numeric faceting.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">Solr's logging verbosity at the INFO level has been greatly reduced, and you may need to update the log</span>\nconfigs to use the DEBUG level to see all the logging messages you used to see at INFO level before.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">We are no longer backing up <span class=\"ff2 fs1\">solr.log</span> and <span class=\"ff2 fs1\">solr_gc.log</span> files in date-stamped copies forever. If you</span>\nrelied on the <span class=\"ff2 fs1\">solr_log_<date></span> or <span class=\"ff2 fs1\">solr_gc_log_<date></span> being in the logs folder that will no longer be the\ncase. See the section <span class=\"link\">Configuring Logging</span> for details on how log rotation works as of Solr 6.3.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">The create/deleteCollection methods on <span class=\"ff2 fs1\">MiniSolrCloudCluster</span> have been deprecated. Clients should</span>\ninstead use the <span class=\"ff2 fs1\">CollectionAdminRequest</span> API. In addition,\nMiniSolrCloudCluster#uploadConfigDir(File, String)<span class=\"ff1 fs0\"> has been deprecated in favour of</span>\n#uploadConfigSet(Path, String)<span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">The <span class=\"ff2 fs1\">bin/solr.in.sh</span> (<span class=\"ff2 fs1\">bin/solr.in.cmd</span> on Windows) is now completely commented by default.</span>\nPreviously, this wasn't so, which had the effect of masking existing environment variables.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">The <span class=\"ff2 fs1\">_version_</span> field is no longer indexed and is now defined with <span class=\"ff2 fs1\">indexed=false</span> by default, because the</span>\nfield has DocValues enabled.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">The <span class=\"ff2 fs1\">/export</span> handler has been changed so it no longer returns zero (0) for numeric fields that are not in</span>\nthe original document. One consequence of this change is that you must be aware that some tuples will\nnot have values if there were none in the original document.",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "<span class=\"ls1\">Metrics-related classes in <span class=\"ff2 fs1\">org.apache.solr.util.stats</span> have been removed in favor of the <span class=\"link\">Dropwizard</span></span>",
    "hierarchy": [
      "Major Changes in Earlier 6.x Versions"
    ],
    "pageId": 110
  },
  {
    "content": "metrics library<span class=\"fc1\">. Any custom plugins using these classes should be changed to use the equivalent classes</span>\nfrom the metrics library. As part of this, the following changes were made to the output of Overseer\nStatus API:",
    "hierarchy": [
    ],
    "pageId": 111
  },
  {
    "content": "◦The \"totalTime\" metric has been removed because it is no longer supported.\n◦The metrics \"75thPctlRequestTime\", \"95thPctlRequestTime\", \"99thPctlRequestTime\" and\n\"999thPctlRequestTime\" in Overseer Status API have been renamed to \"75thPcRequestTime\",\n\"95thPcRequestTime\" and so on for consistency with stats output in other parts of Solr.\n◦The metrics \"avgRequestsPerMinute\", \"5minRateRequestsPerMinute\" and\n\"15minRateRequestsPerMinute\" have been replaced by corresponding per-second rates viz.\n\"avgRequestsPerSecond\", \"5minRateRequestsPerSecond\" and \"15minRateRequestsPerSecond\" for\nconsistency with stats output in other parts of Solr.\nA new highlighter named UnifiedHighlighter has been added. You are encouraged to try out the\nUnifiedHighlighter by setting <span class=\"code\">hl.method=unified</span> and report feedback. It's more efficient/faster than the\nother highlighters, especially compared to the original Highlighter. See <span class=\"code\">HighlightParams.java</span> for a\nlisting of highlight parameters annotated with which highlighters use them.\nhl.useFastVectorHighlighter<span class=\"ff1 fs0\"> is now considered deprecated in lieu of </span>hl.method=fastVector<span class=\"ff1 fs0\">.</span>",
    "hierarchy": [
    ],
    "pageId": 111
  },
  {
    "content": "The <span class=\"code\">maxWarmingSearchers</span><span class=\"fc0\"> parameter</span> now defaults to 1, and more importantly commits will now block if\nthis limit is exceeded instead of throwing an exception (a good thing). Consequently there is no longer a\nrisk in overlapping commits. Nonetheless users should continue to avoid excessive committing. Users\nare advised to remove any pre-existing <span class=\"code\">maxWarmingSearchers</span> entries from their <span class=\"code\">solrconfig.xml</span> files.",
    "hierarchy": [
    ],
    "pageId": 111
  },
  {
    "content": "The <span class=\"fc0\">Complex Phrase query parser</span> now supports leading wildcards. Beware of its possible heaviness,\nusers are encouraged to use ReversedWildcardFilter in index time analysis.",
    "hierarchy": [
    ],
    "pageId": 111
  },
  {
    "content": "The JMX metric \"avgTimePerRequest\" (and the corresponding metric in the metrics API for each handler)\nused to be a simple non-decaying average based on total cumulative time and the number of requests.\nThe Codahale Metrics implementation applies exponential decay to this value, which heavily biases the\naverage towards the last 5 minutes.",
    "hierarchy": [
    ],
    "pageId": 111
  },
  {
    "content": "Parallel SQL now uses Apache Calcite as its SQL framework. As part of this change the default\naggregation mode has been changed to <span class=\"code\">facet</span> rather than <span class=\"code\">map_reduce</span>. There have also been changes to\nthe SQL aggregate response and some SQL syntax changes. Consult the <span class=\"fc0\">Parallel SQL Interface</span>\ndocumentation for full details.",
    "hierarchy": [
    ],
    "pageId": 111
  },
  {
    "content": "There are some major changes in Solr 6 to consider before starting to migrate your configurations and\nindexes.",
    "hierarchy": [
      "Major Changes from Solr 5 to Solr 6"
    ],
    "pageId": 111
  },
  {
    "content": "There are many hundreds of changes, so a thorough review of the <span class=\"fc0\">Solr Upgrade Notes</span> section as well as the\nCHANGES.txt<span class=\"fc1\"> file in your Solr instance will help you plan your migration to Solr 6. This section attempts to</span>\nhighlight some of the major changes you should be aware of.",
    "hierarchy": [
      "Major Changes from Solr 5 to Solr 6"
    ],
    "pageId": 111
  },
  {
    "content": "Some of the major improvements in Solr 6 include:",
    "hierarchy": [
      "Major Changes from Solr 5 to Solr 6",
      "Highlights of New Features in Solr 6"
    ],
    "pageId": 111
  },
  {
    "content": "Introduced in Solr 5, <span class=\"link\">Streaming Expressions</span> allow querying Solr and getting results as a stream of data,\nsorted and aggregated as requested.",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "Several new expression types have been added in Solr 6:",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "Parallel expressions using a MapReduce-like shuffling for faster throughput of high-cardinality fields.",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "Daemon expressions to support continuous push or pull streaming.",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "Advanced parallel relational algebra like distributed joins, intersections, unions and complements.",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "Publish/Subscribe messaging.",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "JDBC connections to pull data from other systems and join with documents in the Solr index.",
    "hierarchy": [
      "Streaming Expressions"
    ],
    "pageId": 112
  },
  {
    "content": "Built on streaming expressions, new in Solr 6 is a <span class=\"link\">Parallel SQL interface</span> to be able to send SQL queries to\nSolr. SQL statements are compiled to streaming expressions on the fly, providing the full range of\naggregations available to streaming expression requests. A JDBC driver is included, which allows using SQL\nclients and database visualization tools to query your Solr index and import data to other systems.",
    "hierarchy": [
      "Parallel SQL Interface"
    ],
    "pageId": 112
  },
  {
    "content": "Replication across data centers is now possible with <span class=\"link\">Cross Data Center Replication</span>. Using an active-passive\nmodel, a SolrCloud cluster can be replicated to another data center, and monitored with a new API.",
    "hierarchy": [
      "Cross Data Center Replication"
    ],
    "pageId": 112
  },
  {
    "content": "A new <span class=\"code\">graph</span><span class=\"link\"> query parser</span> makes it possible to to graph traversal queries of Directed (Cyclic) Graphs\nmodelled using Solr documents.",
    "hierarchy": [
      "Graph QueryParser"
    ],
    "pageId": 112
  },
  {
    "content": "Most non-text field types in the Solr sample configsets now default to using <span class=\"link\">DocValues</span>.",
    "hierarchy": [
      "DocValues"
    ],
    "pageId": 112
  },
  {
    "content": "The minimum supported version of Java for Solr 6 (and the <span class=\"link\">SolrJ client libraries</span>) is now Java 8.",
    "hierarchy": [
      "Java 8 Required"
    ],
    "pageId": 112
  },
  {
    "content": "Solr 6 has no support for reading Lucene/Solr 4.x and earlier indexes. Be sure to run the Lucene\nIndexUpgrader<span class=\"ff2 fs0\"> included with Solr 5.5 if you might still have old 4x formatted segments in your index.</span>\nAlternatively: fully optimize your index with Solr 5.5 to make sure it consists only of one up-to-date index\nsegment.",
    "hierarchy": [
      "Index Format Changes"
    ],
    "pageId": 112
  },
  {
    "content": "Solr's default behavior when a <span class=\"code\">solrconfig.xml</span> does not explicitly define a <span class=\"code\"><schemaFactory/></span> is now\ndependent on the <span class=\"code\">luceneMatchVersion</span> specified in that <span class=\"code\">solrconfig.xml</span>. When <span class=\"code\">luceneMatchVersion <</span>\n6.0<span class=\"ff2 fs0\">, </span>ClassicIndexSchemaFactory<span class=\"ff2 fs0\"> will continue to be used for back compatibility, otherwise an instance of</span>",
    "hierarchy": [
      "Managed Schema is now the Default"
    ],
    "pageId": 112
  },
  {
    "content": "ManagedIndexSchemaFactory<span class=\"ff2 fs1\"> will be used.</span>",
    "hierarchy": [
    ],
    "pageId": 113
  },
  {
    "content": "The most notable impacts of this change are:",
    "hierarchy": [
    ],
    "pageId": 113
  },
  {
    "content": "Existing <span class=\"ff1 fs0\">solrconfig.xml</span> files that are modified to use <span class=\"ff1 fs0\">luceneMatchVersion >= 6.0</span>, but do <span class=\"code\">not</span> have an\nexplicitly configured <span class=\"ff1 fs0\">ClassicIndexSchemaFactory</span>, will have their <span class=\"ff1 fs0\">schema.xml</span> file automatically\nupgraded to a <span class=\"ff1 fs0\">managed-schema</span> file.",
    "hierarchy": [
    ],
    "pageId": 113
  },
  {
    "content": "Schema modifications via the <span class=\"link\">Schema API</span> will now be enabled by default.",
    "hierarchy": [
    ],
    "pageId": 113
  },
  {
    "content": "Please review the <span class=\"link\">Schema Factory Definition in SolrConfig</span> section for more details.",
    "hierarchy": [
    ],
    "pageId": 113
  },
  {
    "content": "Solr's default behavior when a Schema does not explicitly define a global <span class=\"ff1 fs0\"><similarity/></span> is now dependent\non the <span class=\"ff1 fs0\">luceneMatchVersion</span> specified in the <span class=\"ff1 fs0\">solrconfig.xml</span>. When <span class=\"ff1 fs0\">luceneMatchVersion < 6.0</span>, an\ninstance of <span class=\"ff1 fs0\">ClassicSimilarityFactory</span> will be used, otherwise an instance of <span class=\"ff1 fs0\">SchemaSimilarityFactory</span>\nwill be used. Most notably this change means that users can take advantage of per Field Type similarity\ndeclarations, without needing to also explicitly declare a global usage of <span class=\"ff1 fs0\">SchemaSimilarityFactory</span>.",
    "hierarchy": [
      "Default Similarity Changes"
    ],
    "pageId": 113
  },
  {
    "content": "Regardless of whether it is explicitly declared, or used as an implicit global default,\nSchemaSimilarityFactory<span class=\"ff2 fs1\"> 's implicit behavior when a Field Types do not declare an explicit </span><similarity />\nhas also been changed to depend on the the <span class=\"ff1 fs0\">luceneMatchVersion</span>. When <span class=\"ff1 fs0\">luceneMatchVersion < 6.0</span>, an\ninstance of <span class=\"ff1 fs0\">ClassicSimilarity</span> will be used, otherwise an instance of <span class=\"ff1 fs0\">BM25Similarity</span> will be used. A\ndefaultSimFromFieldType<span class=\"ff2 fs1\"> init option may be specified on the </span>SchemaSimilarityFactory<span class=\"ff2 fs1\"> declaration to</span>\nchange this behavior. Please review the <span class=\"ff1 fs0\">SchemaSimilarityFactory</span> javadocs for more details",
    "hierarchy": [
      "Default Similarity Changes"
    ],
    "pageId": 113
  },
  {
    "content": "DELETESHARD and DELETEREPLICA now default to deleting the instance directory, data directory, and index\ndirectory for any replica they delete. Please review the <span class=\"link\">Collection API</span> documentation for details on new\nrequest parameters to prevent this behavior if you wish to keep all data on disk when using these\ncommands",
    "hierarchy": [
      "Replica & Shard Delete Command Changes"
    ],
    "pageId": 113
  },
  {
    "content": "The <span class=\"ff1 fs0\">facet.date</span> parameter (and associated <span class=\"ff1 fs0\">facet.date.*</span> parameters) that were deprecated in Solr 3.x have\nbeen removed completely. If you have not yet switched to using the equivalent <span class=\"ff1 fs0\">facet.range</span> functionality\nyou must do so now before upgrading.",
    "hierarchy": [
      "facet.date.* Parameters Removed"
    ],
    "pageId": 113
  },
  {
    "content": "This section discusses the Solr Administration User Interface (\"Admin UI\").",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "The <span class=\"link\">Overview of the Solr Admin UI</span> explains the basic features of the user interface, what's on the initial\nAdmin UI page, and how to configure the interface. In addition, there are pages describing each screen of\nthe Admin UI:",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Getting Assistance</span> shows you how to get more information about the UI.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Logging</span> shows recent messages logged by this Solr node and provides a way to change logging levels\nfor specific classes.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Cloud Screens</span> display information about nodes when running in SolrCloud mode.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Collections / Core Admin</span> explains how to get management information about each core.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Java Properties</span> shows the Java information about each core.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Thread Dump</span> lets you see detailed information about each thread, along with state information.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Suggestions Screen</span> displays the state of the system with regard to the autoscaling policies that are in\nplace.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "<span class=\"link\">Collection-Specific Tools</span> is a section explaining additional screens available for each collection.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "◦<span class=\"link\">Analysis<span class=\"fc1\"> - lets you analyze the data found in specific fields.</span></span>\n◦<span class=\"link\">Dataimport<span class=\"fc1\"> - shows you information about the current status of the Data Import Handler.</span></span>\n◦<span class=\"link\">Documents<span class=\"fc1\"> - provides a simple form allowing you to execute various Solr indexing commands</span></span>\ndirectly from the browser.\n◦<span class=\"link\">Files<span class=\"fc1\"> - shows the current core configuration files such as <span class=\"ff4 fs2\">solrconfig.xml</span>.</span></span>\n◦<span class=\"link\">Query<span class=\"fc1\"> - lets you submit a structured query about various elements of a core.</span></span>\n◦<span class=\"link\">Stream<span class=\"fc1\"> - allows you to submit streaming expressions and see results and parsing explanations.</span></span>\n◦<span class=\"link\">Schema Browser<span class=\"fc1\"> - displays schema data in a browser window.</span></span>\n<span class=\"link\">Core-Specific Tools</span> is a section explaining additional screens available for each named core.",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "◦<span class=\"link\">Ping<span class=\"fc1\"> - lets you ping a named core and determine whether the core is active.</span></span>\n◦<span class=\"link\">Plugins/Stats<span class=\"fc1\"> - shows statistics for plugins and other installed components.</span></span>\n◦<span class=\"link\">Replication<span class=\"fc1\"> - shows you the current replication status for the core, and lets you enable/disable</span></span>\nreplication.\n◦<span class=\"link\">Segments Info<span class=\"fc1\"> - Provides a visualization of the underlying Lucene index segments.</span></span>",
    "hierarchy": [
      "Using the Solr Administration User Interface"
    ],
    "pageId": 114
  },
  {
    "content": "Solr features a Web interface that makes it easy for Solr administrators and programmers to view <span class=\"link\">Solr</span>\nconfiguration<span class=\"fc1\"> details, run </span>queries and analyze<span class=\"fc1\"> document fields in order to fine-tune a Solr configuration and</span>\naccess <span class=\"link\">online documentation</span> and other help.",
    "hierarchy": [
      "Overview of the Solr Admin UI"
    ],
    "pageId": 115
  },
  {
    "content": "Accessing the URL <span class=\"ff4 fs2\">http://hostname:8983/solr/</span> will show the main dashboard, which is divided into two\nparts.",
    "hierarchy": [
      "Overview of the Solr Admin UI"
    ],
    "pageId": 115
  },
  {
    "content": "A left-side of the screen is a menu under the Solr logo that provides the navigation through the screens of\nthe UI. The first set of links are for system-level information and configuration and provide access to\nLogging<span class=\"fc1\">, </span>Collection/Core Administration<span class=\"fc1\">, and </span>Java Properties<span class=\"fc1\">, among other things. At the end of this</span>\ninformation is at least one pulldown listing Solr cores configured for this instance. On <span class=\"link\">SolrCloud</span> nodes, an\nadditional pulldown list shows all collections in this cluster. Clicking on a collection or core name shows\nsecondary menus of information for the specified collection or core, such as a <span class=\"link\">Schema Browser</span>, <span class=\"link\">Config Files</span>,\nPlugins & Statistics<span class=\"fc1\">, and an ability to perform </span>Queries<span class=\"fc1\"> on indexed data.</span>",
    "hierarchy": [
      "Overview of the Solr Admin UI"
    ],
    "pageId": 115
  },
  {
    "content": "The center of the screen shows the detail of the option selected. This may include a sub-navigation for the\noption or text or graphical representation of the requested data. See the sections in this guide for each\nscreen for more details.",
    "hierarchy": [
      "Overview of the Solr Admin UI"
    ],
    "pageId": 115
  },
  {
    "content": "Under the covers, the Solr Admin UI re-uses the same HTTP APIs available to all clients to access Solr-related\ndata to drive an external interface.",
    "hierarchy": [
      "Overview of the Solr Admin UI"
    ],
    "pageId": 115
  },
  {
    "content": "The path to the Solr Admin UI given above is <span class=\"code\">http://hostname:port/solr</span>, which redirects\nto <span class=\"code\">http://hostname:port/solr/#/</span> in the current version. A convenience redirect is also\nsupported, so simply accessing the Admin UI at <span class=\"code\">http://hostname:port/</span> will also redirect\nto <span class=\"code\">http://hostname:port/solr/#/</span>.",
    "hierarchy": [
    ],
    "pageId": 116
  },
  {
    "content": "At the bottom of each screen of the Admin UI is a set of links that can be used to get more assistance with\nconfiguring and using Solr.",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "These icons include the following links.",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "DocumentationNavigates to the Apache Solr documentation hosted on\nhttps://lucene.apache.org/solr/<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "Issue TrackerNavigates to the JIRA issue tracking server for the Apache Solr project. This\nserver resides at <span class=\"link\">https://issues.apache.org/jira/browse/SOLR</span>.",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "IRC ChannelNavigates to Solr's <span class=\"link\">IRC</span> live-chat room: <span class=\"link\">http://webchat.freenode.net/?</span>\nchannels=#solr<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "Community forumNavigates to the Apache Wiki page which has further information about ways to\nengage in the Solr User community mailing lists: <span class=\"link\">https://wiki.apache.org/solr/</span>\nUsingMailingLists<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "Solr Query SyntaxNavigates to the section <span class=\"link\">Query Syntax and Parsing</span> in this Reference Guide.",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "These links cannot be modified without editing the <span class=\"ff4 fs2\">index.html</span> in the <span class=\"ff4 fs2\">server/solr/solr-webapp</span> directory\nthat contains the Admin UI files.",
    "hierarchy": [
      "Getting Assistance"
    ],
    "pageId": 117
  },
  {
    "content": "The Logging page shows recent messages logged by this Solr node.",
    "hierarchy": [
      "Logging"
    ],
    "pageId": 118
  },
  {
    "content": "When you click the link for \"Logging\", a page similar to the one below will be displayed:",
    "hierarchy": [
      "Logging"
    ],
    "pageId": 118
  },
  {
    "content": "While this example shows logged messages for only one core, if you have multiple cores in a single instance,\nthey will each be listed, with the level for each.",
    "hierarchy": [
      "Logging"
    ],
    "pageId": 118
  },
  {
    "content": "When you select the <span class=\"ff1\">Level</span> link on the left, you see the hierarchy of classpaths and classnames for your\ninstance. A row highlighted in yellow indicates that the class has logging capabilities. Click on a highlighted\nrow, and a menu will appear to allow you to change the log level for that class. Characters in boldface\nindicate that the class will not be affected by level changes to root.",
    "hierarchy": [
      "Logging",
      "Selecting a Logging Level"
    ],
    "pageId": 118
  },
  {
    "content": "For an explanation of the various logging levels, see <span class=\"link\">Configuring Logging</span>.",
    "hierarchy": [
      "Logging",
      "Selecting a Logging Level"
    ],
    "pageId": 118
  },
  {
    "content": "When running in <span class=\"link\">SolrCloud</span> mode, a \"Cloud\" option will appear in the Admin UI between <span class=\"link\">Logging</span> and\nCollections/Core Admin<span class=\"fc1\">.</span>",
    "hierarchy": [
      "Cloud Screens"
    ],
    "pageId": 119
  },
  {
    "content": "This screen provides status information about each collection & node in your cluster, as well as access to the\nlow level data being stored in <span class=\"link\">ZooKeeper</span>.",
    "hierarchy": [
      "Cloud Screens"
    ],
    "pageId": 119
  },
  {
    "content": "The \"Cloud\" menu option is only available on Solr instances running in <span class=\"link\">SolrCloud mode</span>.\nSingle node or master/slave replication instances of Solr will not display this option.",
    "hierarchy": [
      "Cloud Screens"
    ],
    "pageId": 119
  },
  {
    "content": "Click on the Cloud option in the left-hand navigation, and a small sub-menu appears with options called\n\"Tree\", \"Graph\", \"Graph (Radial)\" and \"Dump\". The default view (\"Graph\") shows a graph of each collection,\nthe shards that make up those collections, and the addresses of each replica for each shard.",
    "hierarchy": [
      "Cloud Screens"
    ],
    "pageId": 119
  },
  {
    "content": "This example shows the very simple two-node cluster created using the <span class=\"ff5 fs3\">bin/solr -e cloud -noprompt</span>\nexample command. In addition to the 2 shard, 2 replica \"gettingstarted\" collection, there is an additional\n\"films\" collection consisting of a single shard/replica:",
    "hierarchy": [
      "Cloud Screens"
    ],
    "pageId": 119
  },
  {
    "content": "The \"Graph (Radial)\" option provides a different visual view of each node. Using the same example cluster,\nthe radial graph view looks like:",
    "hierarchy": [
      "Cloud Screens"
    ],
    "pageId": 119
  }
]